{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport axios from \"axios\";\nimport * as go from \"../../public/go.js\"; //import Prism Editor\n\nimport { PrismEditor } from \"vue-prism-editor\";\nimport \"vue-prism-editor/dist/prismeditor.min.css\"; // import the styles somewhere\n// import highlighting library (you can use any library you want just return html string)\n\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-javascript\";\nimport \"prismjs/themes/prism-twilight.css\"; // import syntax highlighting styles\n\nexport default {\n  name: \"CanvasView\",\n  components: {\n    PrismEditor: PrismEditor\n  },\n  data: function data() {\n    return {\n      canvasData: {\n        file: {\n          \"class\": \"GraphLinksModel\",\n          nodeDataArray: [{\n            category: \"Data\",\n            key: -1,\n            loc: \"42.22500681322674 47.35735117835321\"\n          }, {\n            category: \"End\",\n            key: -4,\n            loc: \"567.1497069414404 47.35735117835318\"\n          }, {\n            category: \"ReLU\",\n            key: -2,\n            loc: \"403.0334278716728 47.357351178353184\"\n          }, {\n            category: \"FC\",\n            reasonsList: [{\n              text1: \"512\",\n              text3: \"128\"\n            }],\n            key: -3,\n            loc: \"216.57893005138874 47.357351178353184\"\n          }],\n          linkDataArray: [{\n            from: -3,\n            to: -2,\n            points: [278.70784647632394, 47.35735117835319, 318.70784647632394, 47.35735117835319, 338.707846476324, 47.3573511783532, 348.707846476324, 47.3573511783532]\n          }, {\n            from: -2,\n            to: -4,\n            points: [457.3590092670217, 47.3573511783532, 497.3590092670217, 47.3573511783532, 517.3590092670217, 47.35735117835319, 527.3590092670217, 47.35735117835319]\n          }, {\n            from: -1,\n            to: -3,\n            points: [84.4500136264535, 47.3573511783532, 94.4500136264535, 47.3573511783532, 104.45001362645351, 47.35735117835319, 154.4500136264535, 47.35735117835319]\n          }]\n        },\n        code: \"import torch import torch.nn as nn\\nimport torch.nn.functional as F\\nimport torch.optim as optim\\nfrom torchvision import datasets, transforms\\nimport argparse\\nimport time\\nimport os\\n\\n#setup training parameters\\nparser = argparse.ArgumentParser(description='PyTorch MNIST Training')\\nparser.add_argument('--batch-size', type=int, default=128, metavar='N',\\n                    help='input batch size for training (default: 128)')\\nparser.add_argument('--test-batch-size', type=int, default=128, metavar='N',\\n                    help='input batch size for testing (default: 128)')\\nparser.add_argument('--epochs', type=int, default=5, metavar='N',\\n                    help='number of epochs to train')\\nparser.add_argument('--lr', type=float, default=0.01, metavar='LR',\\n                    help='learning rate')\\nparser.add_argument('--no-cuda', action='store_true', default=False,\\n                    help='disables CUDA training')\\nparser.add_argument('--seed', type=int, default=1, metavar='S',\\n                    help='random seed (default: 1)')\\nparser.add_argument('--model-dir', default='./model-mnist-cnn',\\n                    help='directory of model for saving checkpoint')\\nparser.add_argument('--load-model', action='store_true', default=False,\\n                    help='load model or not')\\n    \\nargs = parser.parse_args(args=[]) \\n    \\nif not os.path.exists(args.model_dir):\\n    os.makedirs(args.model_dir)\\n            \\n# Judge cuda is available or not\\nuse_cuda = not args.no_cuda and torch.cuda.is_available()\\n#device = torch.device(\\\"cuda\\\" if use_cuda else \\\"cpu\\\")\\ndevice = torch.device(\\\"cpu\\\")\\n    \\ntorch.manual_seed(args.seed)\\nkwargs = {'num_workers': 1, 'pin_memory': True} if use_cuda else {}\\n    \\n# Setup data loader\\ntransform=transforms.Compose([\\n        transforms.ToTensor(),\\n        transforms.Normalize((0.1307,), (0.3081,))\\n        ])\\ntrainset = datasets.MNIST('data', train=True, download=True,\\n                    transform=transform)\\ntestset = datasets.MNIST('data', train=False,\\n                    transform=transform)\\ntrain_loader = torch.utils.data.DataLoader(trainset,batch_size=args.batch_size, shuffle=True,**kwargs)\\ntest_loader = torch.utils.data.DataLoader(testset,batch_size=args.test_batch_size, shuffle=False, **kwargs)\\n    \\n    \\n# Define CNN\\nclass Net(nn.Module):\\n    def __init__(self):\\n        super(Net, self).__init__()\\n        # in_channels:1  out_channels:32  kernel_size:3  stride:1\\n        self.conv1 = nn.Conv2d(1, 32, 3, 1)\\n        # in_channels:32  out_channels:64  kernel_size:3  stride:1\\n        self.conv2 = nn.Conv2d(32, 64, 3, 1)\\n        self.fc1 = nn.Linear(9216, 128)\\n        self.fc2 = nn.Linear(128, 10)\\n    \\n    def forward(self, x):\\n        x = self.conv1(x)\\n        x = F.relu(x)\\n        x = self.conv2(x)\\n        x = F.relu(x)\\n        x = F.max_pool2d(x, 2)\\n        x = torch.flatten(x, 1)\\n        x = self.fc1(x)\\n        x = F.relu(x)\\n        x = self.fc2(x)\\n        output = F.log_softmax(x, dim=1)\\n        return output\\n    \\n    \\n    \\n# Train function\\ndef train(args, model, device, train_loader, optimizer, epoch):\\n    model.train()\\n    for batch_idx, (data, target) in enumerate(train_loader):\\n        data, target = data.to(device), target.to(device)\\n            \\n        #clear gradients\\n        optimizer.zero_grad()\\n            \\n        #compute loss\\n        loss = F.cross_entropy(model(data), target)\\n            \\n        #get gradients and update\\n        loss.backward()\\n        optimizer.step()\\n    \\n# Predict function\\ndef eval_test(model, device, test_loader):\\n    model.eval()\\n    test_loss = 0\\n    correct = 0\\n    with torch.no_grad():\\n        for data, target in test_loader:\\n            data, target = data.to(device), target.to(device)\\n            output = model(data)\\n            test_loss += F.cross_entropy(output, target, size_average=False).item()\\n            pred = output.max(1, keepdim=True)[1]\\n            correct += pred.eq(target.view_as(pred)).sum().item()\\n    test_loss /= len(test_loader.dataset)\\n    test_accuracy = correct / len(test_loader.dataset)\\n    return test_loss, test_accuracy\\n    \\n# Main function, train the initial model or load the model\\ndef main():\\n    model = Net().to(device)\\n    optimizer = optim.SGD(model.parameters(), lr=args.lr)\\n        \\n    if args.load_model:\\n        # Load model\\n        model.load_state_dict(torch.load(os.path.join(args.model_dir, 'final_model.pt')))\\n        trnloss, trnacc = eval_test(model, device, train_loader)\\n        tstloss, tstacc = eval_test(model, device, test_loader)\\n        print('trn_loss: {:.4f}, trn_acc: {:.2f}%'.format(trnloss, 100. * trnacc), end=', ')\\n        print('test_loss: {:.4f}, test_acc: {:.2f}%'.format(tstloss, 100. * tstacc))\\n            \\n    else:\\n        # Train initial model\\n        for epoch in range(1, args.epochs + 1):\\n            start_time = time.time()\\n    \\n            #training\\n            train(args, model, device, train_loader, optimizer, epoch)\\n    \\n            #get trnloss and testloss\\n            trnloss, trnacc = eval_test(model, device, train_loader)\\n            tstloss, tstacc = eval_test(model, device, test_loader)\\n    \\n            #print trnloss and testloss\\n            print('Epoch '+str(epoch)+': '+str(int(time.time()-start_time))+'s', end=', ')\\n            print('trn_loss: {:.4f}, trn_acc: {:.2f}%'.format(trnloss, 100. * trnacc), end=', ')\\n            print('test_loss: {:.4f}, test_acc: {:.2f}%'.format(tstloss, 100. * tstacc))\\n            \\n        #save model\\n        torch.save(model.state_dict(), os.path.join(args.model_dir, 'final_model.pt'))\\n    \\nif __name__ == '__main__':\\n    main()\\n   \\t\\t \"\n      }\n    };\n  },\n  methods: {\n    highlighter: function highlighter(code) {\n      return highlight(code, languages.js); // languages.<insert language> to return html with markup\n    },\n    getJson: function getJson() {\n      var _this = this;\n\n      axios({\n        method: \"get\",\n        url: \"/canvas/getJson/\" + localStorage.uid + \"/\" + localStorage.pid + \"/\",\n        responseType: \"stream\"\n      }).then(function (res) {\n        console.log(res.data); // not first time\n\n        if (res.data.status == 200) {\n          _this.canvas_data.file = res.data;\n\n          _this.renderJson();\n        } // first time\n        else if (res.data.status == 204) {} else {\n          alert(\"can not get user's json!\");\n        }\n      });\n    },\n    getPython: function getPython() {\n      var _this2 = this;\n\n      axios({\n        method: \"get\",\n        url: \"/canvas/getPython/\" + localStorage.uid + \"/\" + localStorage.pid + \"/\",\n        responseType: \"stream\"\n      }).then(function (res) {\n        console.log(res.data);\n\n        if (res.data.status == 200) {\n          _this2.canvas_data.code = res.code;\n        } else {\n          alert(\"can not get user's python!\");\n        }\n      });\n    },\n    download: function download() {\n      axios({\n        method: \"get\",\n        url: \"/canvas/download/\" + localStorage.uid + \"/\" + localStorage.pid + \"/\",\n        responseType: \"blob\"\n      }).then(function (res) {\n        console.log(res.data);\n\n        if (res.data.status == 200) {\n          var blob = new Blob([res], {\n            type: \"application/zip;charset-UTF-8\"\n          });\n          var url = URL.createObjectURL(blob);\n          var a = document.createElement(\"a\");\n          a.style.display = \"none\";\n          a.href = url;\n          a.download = \"projectttt.zip\";\n          a.click();\n          URL.revokeObjectURL(url);\n        } else {\n          alert(\"can not get user's json!\");\n        }\n      });\n    },\n    // Update json first, then send to backend and get python code\n    compile: function compile() {\n      var _this3 = this;\n\n      // Update json\n      this.getJson(); // console.log(this.canvasData.file);\n      // this.renderJson();\n      // console.log(this.canvasData.file);\n      // this.updateJson();\n      // console.log(this.canvasData.file);\n      // send json to backend\n      // this.canvasData.file = myDiagram.model.toJson();\n\n      var formData = new FormData();\n      formData.append(\"file\", this.canvasData.file);\n      axios({\n        method: \"post\",\n        url: \"/canvas/compile/\" + localStorage.uid + \"/\" + localStorage.pid + \"/\",\n        data: formData\n      }).then(function (res) {\n        console.log(res.data); // If compile successful 200, backend update database, frontend get data and reload\n\n        if (res.data.status == \"200\") {\n          _this3.getPython();\n\n          console.log(\"compile ok!\");\n        } // If complie fails 500, frontend alert error\n        else if (res.data.status == \"500\") {\n          alert(\"The network model is not valid!\");\n        }\n\n        location.replace(\"/canvas/\");\n      });\n    },\n    // Update Json accroding to user's operation\n    updateJson: function updateJson() {\n      document.getElementById(\"mySavedModel\").value = myDiagram.model.toJson();\n      myDiagram.isModified = false;\n    },\n    // Render Json on the canvas area\n    renderJson: function renderJson() {\n      myDiagram.model = go.Model.fromJson(document.getElementById(\"mySavedModel\").value);\n    },\n    // Render .py on the code area\n    renderCode: function renderCode() {},\n    // To make canvas tidy 200\n    layout: function layout() {\n      this.updateJson();\n      myDiagram.layoutDiagram(true);\n    },\n    // Go to train page 200\n    enterTrain: function enterTrain() {\n      location.replace(\"/train/\");\n    }\n  },\n  mounted: function mounted() {\n    // this.getJson();\n    // // this.updateJson();\n    // this.canvasData.file = JSON.stringify(this.canvasData.file);\n    // this.renderJson();\n    this.canvasData.file = JSON.stringify(this.canvasData.file);\n    this.compile(); // this.canvasData.file = JSON.stringify(this.canvasData.file);\n\n    var $ = go.GraphObject.make;\n    var bigfont = \"bold 13pt Helvetica, Arial, sans-serif\";\n    var smallfont = \"bold 11pt Helvetica, Arial, sans-serif\";\n\n    function textStyle() {\n      return {\n        margin: 6,\n        wrap: go.TextBlock.WrapFit,\n        textAlign: \"center\",\n        editable: true,\n        font: bigfont\n      };\n    }\n\n    myDiagram = $(go.Diagram, \"myDiagramDiv_1\", {\n      \"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom,\n      initialAutoScale: go.Diagram.Uniform,\n      \"linkingTool.direction\": go.LinkingTool.ForwardsOnly,\n      layout: $(go.LayeredDigraphLayout, {\n        isInitial: false,\n        isOngoing: false,\n        layerSpacing: 50\n      }),\n      \"undoManager.isEnabled\": true\n    });\n    var nodeSelectionAdornmentTemplate = $(go.Adornment, \"Auto\", $(go.Shape, {\n      fill: null,\n      stroke: \"#979dac\",\n      strokeWidth: 2,\n      strokeDashArray: [4, 2]\n    }), $(go.Placeholder));\n    myDiagram.nodeTemplate = $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"Rectangle\", {\n      stroke: null,\n      portId: \"\",\n      fromLinkable: true,\n      toLinkable: true,\n      cursor: \"pointer\",\n      toEndSegmentLength: 50,\n      fromEndSegmentLength: 50\n    }), $(go.TextBlock, \"hello\", {\n      margin: 6,\n      font: bigfont,\n      editable: true,\n      minSize: new go.Size(40, NaN)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()));\n    myDiagram.nodeTemplateMap.add(\"Data\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center,\n      margin: new go.Margin(0, 0, 0, 0)\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"Circle\", {\n      fill: \"#caffbf\",\n      portId: \"\",\n      fromLinkable: true,\n      cursor: \"pointer\",\n      stroke: \"#74c69d\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"Data\", textStyle(), {\n      stroke: \"#2d6a4f\",\n      minSize: new go.Size(40, NaN)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay())));\n    myDiagram.nodeTemplateMap.add(\"End\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"Circle\", {\n      fill: \"#ffadad\",\n      portId: \"\",\n      toLinkable: true,\n      cursor: \"pointer\",\n      fromEndSegmentLength: 40,\n      stroke: \"#df7373\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"End\", textStyle(), {\n      stroke: \"#ad2e24\",\n      minSize: new go.Size(40, NaN)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay())));\n    myDiagram.nodeTemplateMap.add(\"ReLU\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"Ellipse\", {\n      fill: \"#fdffb6\",\n      portId: \"\",\n      fromLinkable: true,\n      toLinkable: true,\n      cursor: \"pointer\",\n      fromEndSegmentLength: 40,\n      stroke: \"#ffd100\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"ReLU\", textStyle(), {\n      stroke: \"#e2711d\",\n      minSize: new go.Size(60, NaN)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay())));\n    var reasonTemplate = $(go.Panel, $(go.Panel, \"Table\", {\n      maxSize: new go.Size(200, 999),\n      margin: new go.Margin(0, 3, 10, 3),\n      defaultAlignment: go.Spot.Center\n    }, $(go.RowColumnDefinition, {\n      column: 2,\n      width: 2\n    }), $(go.TextBlock, \"input = \", {\n      margin: new go.Margin(4, 0, 0, 0),\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true,\n      font: smallfont,\n      row: 2,\n      column: 0,\n      stroke: \"#3e5c76\"\n    }, new go.Binding(\"text\", \"text0\").makeTwoWay()), $(go.TextBlock, \"value\", {\n      margin: new go.Margin(4, 0, 0, 0),\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true,\n      stroke: \"#3e5c76\",\n      font: smallfont,\n      row: 2,\n      column: 1\n    }, new go.Binding(\"text\", \"text1\").makeTwoWay()), $(go.TextBlock, \"output = \", {\n      margin: new go.Margin(4, 0, 0, 0),\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true,\n      font: smallfont,\n      stroke: \"#3e5c76\",\n      row: 3,\n      column: 0\n    }, new go.Binding(\"text\", \"text2\").makeTwoWay()), $(go.TextBlock, \"value\", {\n      margin: new go.Margin(4, 0, 0, 9),\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true,\n      font: smallfont,\n      stroke: \"#3e5c76\",\n      row: 3,\n      column: 1\n    }, new go.Binding(\"text\", \"text3\").makeTwoWay())));\n    myDiagram.nodeTemplateMap.add(\"FC\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"RoundedRectangle\", {\n      fill: \"#bde0fe\",\n      stroke: \"#4ea8de\",\n      strokeWidth: 4,\n      portId: \"\",\n      fromLinkable: true,\n      toLinkable: true,\n      cursor: \"pointer\",\n      toEndSegmentLength: 50,\n      fromEndSegmentLength: 40\n    }), $(go.Panel, \"Vertical\", {\n      defaultAlignment: go.Spot.Center\n    }, $(go.TextBlock, \"FC\", textStyle(), {\n      stroke: \"#3e5c76\",\n      margin: new go.Margin(8, 0, 0, 0),\n      minSize: new go.Size(100, NaN)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()), $(go.Panel, \"Vertical\", {\n      defaultAlignment: go.Spot.TopLeft,\n      itemTemplate: reasonTemplate\n    }, new go.Binding(\"itemArray\", \"reasonsList\").makeTwoWay()))));\n    myDiagram.nodeTemplateMap.add(\"RNN\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"RoundedRectangle\", {\n      fill: \"#E7C5FC\",\n      stroke: \"#CF8BF9\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"RNN\\n(unavailable)\", textStyle(), {\n      margin: 9,\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true,\n      stroke: \"#560788\",\n      font: smallfont\n    }, new go.Binding(\"text\", \"text\").makeTwoWay())));\n    myDiagram.nodeTemplateMap.add(\"CNN\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"RoundedRectangle\", {\n      fill: \"#E7C5FC\",\n      stroke: \"#CF8BF9\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"CNN\\n(unavailable)\", textStyle(), {\n      margin: 9,\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true,\n      stroke: \"#560788\",\n      font: smallfont\n    }, new go.Binding(\"text\", \"text\").makeTwoWay())));\n    myDiagram.nodeTemplateMap.add(\"LSTM\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"RoundedRectangle\", {\n      fill: \"#E7C5FC\",\n      stroke: \"#CF8BF9\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"LSTM\\n(unavailable)\", textStyle(), {\n      margin: 9,\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true,\n      stroke: \"#560788\",\n      font: smallfont\n    }, new go.Binding(\"text\", \"text\").makeTwoWay())));\n    myDiagram.nodeTemplateMap.add(\"Softmax\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"RoundedRectangle\", {\n      fill: \"#E7C5FC\",\n      stroke: \"#CF8BF9\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"Softmax\\n(unavailable)\", textStyle(), {\n      margin: 9,\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true,\n      stroke: \"#560788\",\n      font: smallfont\n    }, new go.Binding(\"text\", \"text\").makeTwoWay())));\n    myDiagram.nodeTemplateMap.add(\"Maximum Polling\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"RoundedRectangle\", {\n      fill: \"#E7C5FC\",\n      stroke: \"#CF8BF9\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"Maximum\\nPolling\\n(unavailable)\", textStyle(), {\n      margin: 9,\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true,\n      stroke: \"#560788\",\n      font: smallfont\n    }, new go.Binding(\"text\", \"text\").makeTwoWay())));\n    var linkSelectionAdornmentTemplate = $(go.Adornment, \"Link\", $(go.Shape, {\n      isPanelMain: true,\n      fill: null,\n      stroke: \"deepskyblue\",\n      strokeWidth: 2.5\n    }));\n    myDiagram.linkTemplate = $(go.Link, {\n      selectable: true,\n      selectionAdornmentTemplate: linkSelectionAdornmentTemplate\n    }, new go.Binding(\"points\").makeTwoWay(), {\n      toShortLength: 15\n    }, $(go.Shape, {\n      stroke: \"#979dac\",\n      strokeWidth: 2.5\n    }), $(go.Shape, {\n      toArrow: \"kite\",\n      fill: \"#979dac\",\n      stroke: null,\n      scale: 2\n    }));\n    var palette = $(go.Palette, \"myPaletteDiv\", {\n      nodeTemplateMap: myDiagram.nodeTemplateMap,\n      autoScale: go.Diagram.Uniform\n    });\n    palette.model.nodeDataArray = [{\n      category: \"Data\",\n      reasonsList: [{}]\n    }, {\n      category: \"ReLU\",\n      reasonsList: [{}]\n    }, {\n      category: \"FC\",\n      reasonsList: [{}]\n    }, {\n      category: \"End\",\n      reasonsList: [{}]\n    }, {\n      category: \"CNN\",\n      reasonsList: [{}]\n    }, {\n      category: \"RNN\",\n      reasonsList: [{}]\n    }, {\n      category: \"LSTM\",\n      reasonsList: [{}]\n    }, {\n      category: \"Softmax\",\n      reasonsList: [{}]\n    }, {\n      category: \"Maximum Polling\",\n      reasonsList: [{}]\n    }];\n    window.myDiagram = myDiagram;\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","go","PrismEditor","highlight","languages","name","components","data","canvasData","file","nodeDataArray","category","key","loc","reasonsList","text1","text3","linkDataArray","from","to","points","code","methods","highlighter","js","getJson","method","url","localStorage","uid","pid","responseType","then","res","console","log","status","canvas_data","renderJson","alert","getPython","download","blob","Blob","type","URL","createObjectURL","a","document","createElement","style","display","href","click","revokeObjectURL","compile","formData","FormData","append","location","replace","updateJson","getElementById","value","myDiagram","model","toJson","isModified","Model","fromJson","renderCode","layout","layoutDiagram","enterTrain","mounted","JSON","stringify","$","GraphObject","make","bigfont","smallfont","textStyle","margin","wrap","TextBlock","WrapFit","textAlign","editable","font","Diagram","ToolManager","WheelZoom","initialAutoScale","Uniform","LinkingTool","ForwardsOnly","LayeredDigraphLayout","isInitial","isOngoing","layerSpacing","nodeSelectionAdornmentTemplate","Adornment","Shape","fill","stroke","strokeWidth","strokeDashArray","Placeholder","nodeTemplate","Node","locationSpot","Spot","Center","Binding","Point","parse","makeTwoWay","selectable","selectionAdornmentTemplate","portId","fromLinkable","toLinkable","cursor","toEndSegmentLength","fromEndSegmentLength","minSize","Size","NaN","nodeTemplateMap","add","Margin","reasonTemplate","Panel","maxSize","defaultAlignment","RowColumnDefinition","column","width","row","TopLeft","itemTemplate","linkSelectionAdornmentTemplate","isPanelMain","linkTemplate","Link","toShortLength","toArrow","scale","palette","Palette","autoScale","window"],"sourceRoot":"","sources":["C:\\qp_box\\_CodeField\\Comp208-Neural-Lego\\frontend\\src\\views\\CanvasView.vue"],"sourcesContent":["<template>\r\n  <div id=\"page-top\" class=\"body\">\r\n    <!-- Page Wrapper -->\r\n    <div id=\"wrapper\">\r\n      <!-- Sidebar -->\r\n      <ul\r\n        class=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\"\r\n        id=\"accordionSidebar\"\r\n      >\r\n        <!-- Sidebar - Brand -->\r\n\r\n        <a\r\n          class=\"sidebar-brand d-flex align-items-center justify-content-center\"\r\n        >\r\n          <!-- <div class=\"sidebar-brand-icon rotate-n-15\">\r\n                    <i class=\"fas fa-laugh-wink\"></i>\r\n                </div> -->\r\n          <div class=\"sidebar-brand-text mx-3\">NEURAL LEGO</div>\r\n        </a>\r\n\r\n        <!-- Divider -->\r\n        <hr class=\"sidebar-divider my-0\" />\r\n\r\n        <!-- Nav Item - Dashboard -->\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"/profile\">\r\n            <i class=\"fas fa-fw fa-user\"></i>\r\n            <span>User</span></a\r\n          >\r\n        </li>\r\n\r\n        <!-- Divider -->\r\n        <hr class=\"sidebar-divider my-0\" />\r\n\r\n        <!-- Nav Item - Dashboard -->\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"/project\">\r\n            <i class=\"fas fa-fw fa-folder\"></i>\r\n            <span>Project</span></a\r\n          >\r\n        </li>\r\n\r\n        <!-- Divider -->\r\n        <hr class=\"sidebar-divider my-0\" />\r\n\r\n        <!-- Nav Item - Dashboard -->\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"/template\">\r\n            <i class=\"fas fa-fw fa-table\"></i>\r\n            <span>Template</span></a\r\n          >\r\n        </li>\r\n\r\n        <hr class=\"sidebar-divider my-0\" />\r\n\r\n        <!-- Nav Item - Dashboard -->\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" href=\"draggable.html\">\r\n            <i class=\"fas fa-fw fa-palette\"></i>\r\n            <span>Canvas</span></a\r\n          >\r\n        </li>\r\n\r\n        <hr class=\"sidebar-divider my-0\" />\r\n\r\n        <!-- Nav Item - Dashboard -->\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"home.html\">\r\n            <i class=\"fas fa-fw fa-arrow-circle-left\"></i>\r\n            <span>Log out</span></a\r\n          >\r\n        </li>\r\n        <!-- Divider -->\r\n        <hr class=\"sidebar-divider d-none d-md-block\" />\r\n      </ul>\r\n      <!-- End of Sidebar -->\r\n\r\n      <!-- Content Wrapper -->\r\n      <div id=\"content-wrapper\" class=\"d-flex flex-column\">\r\n        <!-- Main Content -->\r\n        <div id=\"content\">\r\n          <!-- Topbar -->\r\n          <nav\r\n            class=\"\r\n              navbar navbar-expand navbar-light\r\n              bg-white\r\n              topbar\r\n              mb-4\r\n              static-top\r\n              shadow\r\n            \"\r\n          >\r\n            <!-- Sidebar Toggle (Topbar) -->\r\n            <button\r\n              id=\"sidebarToggleTop\"\r\n              class=\"btn btn-link d-md-none rounded-circle mr-3\"\r\n            >\r\n              <i class=\"fa fa-bars\"></i>\r\n            </button>\r\n\r\n            <!-- Topbar Search -->\r\n            <form\r\n              class=\"\r\n                d-none d-sm-inline-block\r\n                form-inline\r\n                mr-auto\r\n                ml-md-3\r\n                my-2 my-md-0\r\n                mw-100\r\n                navbar-search\r\n              \"\r\n            >\r\n              <div class=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control bg-light border-0 small\"\r\n                  placeholder=\"Search for...\"\r\n                  aria-label=\"Search\"\r\n                  aria-describedby=\"basic-addon2\"\r\n                />\r\n                <div class=\"input-group-append\">\r\n                  <button class=\"btn btn-primary\" type=\"button\">\r\n                    <i class=\"fas fa-search fa-sm\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <!-- Topbar Navbar -->\r\n            <ul class=\"navbar-nav ml-auto\">\r\n              <!-- Nav Item - Search Dropdown (Visible Only XS) -->\r\n              <li class=\"nav-item dropdown no-arrow d-sm-none\">\r\n                <a\r\n                  class=\"nav-link dropdown-toggle\"\r\n                  href=\"#\"\r\n                  id=\"searchDropdown\"\r\n                  role=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  <i class=\"fas fa-search fa-fw\"></i>\r\n                </a>\r\n                <!-- Dropdown - Messages -->\r\n                <div\r\n                  class=\"\r\n                    dropdown-menu dropdown-menu-right\r\n                    p-3\r\n                    shadow\r\n                    animated--grow-in\r\n                  \"\r\n                  aria-labelledby=\"searchDropdown\"\r\n                >\r\n                  <form class=\"form-inline mr-auto w-100 navbar-search\">\r\n                    <div class=\"input-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control bg-light border-0 small\"\r\n                        placeholder=\"Search for...\"\r\n                        aria-label=\"Search\"\r\n                        aria-describedby=\"basic-addon2\"\r\n                      />\r\n                      <div class=\"input-group-append\">\r\n                        <button class=\"btn btn-primary\" type=\"button\">\r\n                          <i class=\"fas fa-search fa-sm\"></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n          <!-- End of Topbar -->\r\n\r\n          <div id=\"allSampleContent\" class=\"p-4 w-full\">\r\n            <div id=\"sample\">\r\n              <div style=\"width: 100%; margin-bottom: 10px; display: flex\">\r\n                <div\r\n                  id=\"myPaletteDiv\"\r\n                  style=\"\r\n                    width: 150px;\r\n                    margin-right: 10px;\r\n                    border: solid 4px #82929b;\r\n                  \"\r\n                ></div>\r\n\r\n                <div\r\n                  id=\"myDiagramDiv_1\"\r\n                  style=\"\r\n                    width: 200px;\r\n                    margin-right: 10px;\r\n                    height: 600px;\r\n                    border: solid 4px #82929b;\r\n                  \"\r\n                ></div>\r\n                <div\r\n                  id=\"myDiagramDiv_2\"\r\n                  style=\"flex-grow: 1; height: 600px; border: solid 4px #82929b\"\r\n                ></div>\r\n              </div>\r\n\r\n              <button class=\"btn btn-primary\" id=\"SaveButton\" onclick=\"save()\">\r\n                Save\r\n              </button>\r\n              <button class=\"btn btn-primary\" onclick=\"load()\">Load</button>\r\n              <button class=\"btn btn-primary\" onclick=\"layout()\">Layout</button>\r\n              <button class=\"btn btn-primary\">Compile</button>\r\n              <a href=\"/train\"\r\n                ><button class=\"btn btn-primary\">Train</button></a\r\n              >\r\n              <br />\r\n              <textarea id=\"mySavedModel\" style=\"width: 100%; height: 300px\">\r\n{ \"class\": \"GraphLinksModel\",\r\n\"copiesArrays\": true,\r\n\"copiesArrayObjects\": true,\r\n\"nodeDataArray\": [ {\"category\":\"Data\", \"reasonsList\":[ {} ], \"key\":-2, \"loc\":\"-99.10220015417542 -20.151221229488044\"} ],\r\n\"linkDataArray\": []}\r\n            </textarea\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- End of Content Wrapper -->\r\n    </div>\r\n    <!-- End of Page Wrapper -->\r\n\r\n    <!-- Logout Modal-->\r\n    <div\r\n      class=\"modal fade\"\r\n      id=\"logoutModal\"\r\n      tabindex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"exampleModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Ready to Leave?</h5>\r\n            <button\r\n              class=\"close\"\r\n              type=\"button\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">×</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            Select \"Logout\" below if you are ready to end your current session.\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button\r\n              class=\"btn btn-secondary\"\r\n              type=\"button\"\r\n              data-dismiss=\"modal\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <a class=\"btn btn-primary\" href=\"login.html\">Logout</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport * as go from \"../../public/go.js\";\r\n\r\n//import Prism Editor\r\nimport { PrismEditor } from \"vue-prism-editor\";\r\nimport \"vue-prism-editor/dist/prismeditor.min.css\"; // import the styles somewhere\r\n\r\n// import highlighting library (you can use any library you want just return html string)\r\nimport { highlight, languages } from \"prismjs/components/prism-core\";\r\nimport \"prismjs/components/prism-clike\";\r\nimport \"prismjs/components/prism-javascript\";\r\nimport \"prismjs/themes/prism-twilight.css\"; // import syntax highlighting styles\r\n\r\nexport default {\r\n  name: \"CanvasView\",\r\n\r\n  components: {\r\n    PrismEditor,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      canvasData: {\r\n        file: {\r\n          class: \"GraphLinksModel\",\r\n          nodeDataArray: [\r\n            {\r\n              category: \"Data\",\r\n              key: -1,\r\n              loc: \"42.22500681322674 47.35735117835321\",\r\n            },\r\n            {\r\n              category: \"End\",\r\n              key: -4,\r\n              loc: \"567.1497069414404 47.35735117835318\",\r\n            },\r\n            {\r\n              category: \"ReLU\",\r\n              key: -2,\r\n              loc: \"403.0334278716728 47.357351178353184\",\r\n            },\r\n            {\r\n              category: \"FC\",\r\n              reasonsList: [{ text1: \"512\", text3: \"128\" }],\r\n              key: -3,\r\n              loc: \"216.57893005138874 47.357351178353184\",\r\n            },\r\n          ],\r\n          linkDataArray: [\r\n            {\r\n              from: -3,\r\n              to: -2,\r\n              points: [\r\n                278.70784647632394, 47.35735117835319, 318.70784647632394,\r\n                47.35735117835319, 338.707846476324, 47.3573511783532,\r\n                348.707846476324, 47.3573511783532,\r\n              ],\r\n            },\r\n            {\r\n              from: -2,\r\n              to: -4,\r\n              points: [\r\n                457.3590092670217, 47.3573511783532, 497.3590092670217,\r\n                47.3573511783532, 517.3590092670217, 47.35735117835319,\r\n                527.3590092670217, 47.35735117835319,\r\n              ],\r\n            },\r\n            {\r\n              from: -1,\r\n              to: -3,\r\n              points: [\r\n                84.4500136264535, 47.3573511783532, 94.4500136264535,\r\n                47.3573511783532, 104.45001362645351, 47.35735117835319,\r\n                154.4500136264535, 47.35735117835319,\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        code: `import torch import torch.nn as nn\r\nimport torch.nn.functional as F\r\nimport torch.optim as optim\r\nfrom torchvision import datasets, transforms\r\nimport argparse\r\nimport time\r\nimport os\r\n\r\n#setup training parameters\r\nparser = argparse.ArgumentParser(description='PyTorch MNIST Training')\r\nparser.add_argument('--batch-size', type=int, default=128, metavar='N',\r\n                    help='input batch size for training (default: 128)')\r\nparser.add_argument('--test-batch-size', type=int, default=128, metavar='N',\r\n                    help='input batch size for testing (default: 128)')\r\nparser.add_argument('--epochs', type=int, default=5, metavar='N',\r\n                    help='number of epochs to train')\r\nparser.add_argument('--lr', type=float, default=0.01, metavar='LR',\r\n                    help='learning rate')\r\nparser.add_argument('--no-cuda', action='store_true', default=False,\r\n                    help='disables CUDA training')\r\nparser.add_argument('--seed', type=int, default=1, metavar='S',\r\n                    help='random seed (default: 1)')\r\nparser.add_argument('--model-dir', default='./model-mnist-cnn',\r\n                    help='directory of model for saving checkpoint')\r\nparser.add_argument('--load-model', action='store_true', default=False,\r\n                    help='load model or not')\r\n    \r\nargs = parser.parse_args(args=[]) \r\n    \r\nif not os.path.exists(args.model_dir):\r\n    os.makedirs(args.model_dir)\r\n            \r\n# Judge cuda is available or not\r\nuse_cuda = not args.no_cuda and torch.cuda.is_available()\r\n#device = torch.device(\"cuda\" if use_cuda else \"cpu\")\r\ndevice = torch.device(\"cpu\")\r\n    \r\ntorch.manual_seed(args.seed)\r\nkwargs = {'num_workers': 1, 'pin_memory': True} if use_cuda else {}\r\n    \r\n# Setup data loader\r\ntransform=transforms.Compose([\r\n        transforms.ToTensor(),\r\n        transforms.Normalize((0.1307,), (0.3081,))\r\n        ])\r\ntrainset = datasets.MNIST('data', train=True, download=True,\r\n                    transform=transform)\r\ntestset = datasets.MNIST('data', train=False,\r\n                    transform=transform)\r\ntrain_loader = torch.utils.data.DataLoader(trainset,batch_size=args.batch_size, shuffle=True,**kwargs)\r\ntest_loader = torch.utils.data.DataLoader(testset,batch_size=args.test_batch_size, shuffle=False, **kwargs)\r\n    \r\n    \r\n# Define CNN\r\nclass Net(nn.Module):\r\n    def __init__(self):\r\n        super(Net, self).__init__()\r\n        # in_channels:1  out_channels:32  kernel_size:3  stride:1\r\n        self.conv1 = nn.Conv2d(1, 32, 3, 1)\r\n        # in_channels:32  out_channels:64  kernel_size:3  stride:1\r\n        self.conv2 = nn.Conv2d(32, 64, 3, 1)\r\n        self.fc1 = nn.Linear(9216, 128)\r\n        self.fc2 = nn.Linear(128, 10)\r\n    \r\n    def forward(self, x):\r\n        x = self.conv1(x)\r\n        x = F.relu(x)\r\n        x = self.conv2(x)\r\n        x = F.relu(x)\r\n        x = F.max_pool2d(x, 2)\r\n        x = torch.flatten(x, 1)\r\n        x = self.fc1(x)\r\n        x = F.relu(x)\r\n        x = self.fc2(x)\r\n        output = F.log_softmax(x, dim=1)\r\n        return output\r\n    \r\n    \r\n    \r\n# Train function\r\ndef train(args, model, device, train_loader, optimizer, epoch):\r\n    model.train()\r\n    for batch_idx, (data, target) in enumerate(train_loader):\r\n        data, target = data.to(device), target.to(device)\r\n            \r\n        #clear gradients\r\n        optimizer.zero_grad()\r\n            \r\n        #compute loss\r\n        loss = F.cross_entropy(model(data), target)\r\n            \r\n        #get gradients and update\r\n        loss.backward()\r\n        optimizer.step()\r\n    \r\n# Predict function\r\ndef eval_test(model, device, test_loader):\r\n    model.eval()\r\n    test_loss = 0\r\n    correct = 0\r\n    with torch.no_grad():\r\n        for data, target in test_loader:\r\n            data, target = data.to(device), target.to(device)\r\n            output = model(data)\r\n            test_loss += F.cross_entropy(output, target, size_average=False).item()\r\n            pred = output.max(1, keepdim=True)[1]\r\n            correct += pred.eq(target.view_as(pred)).sum().item()\r\n    test_loss /= len(test_loader.dataset)\r\n    test_accuracy = correct / len(test_loader.dataset)\r\n    return test_loss, test_accuracy\r\n    \r\n# Main function, train the initial model or load the model\r\ndef main():\r\n    model = Net().to(device)\r\n    optimizer = optim.SGD(model.parameters(), lr=args.lr)\r\n        \r\n    if args.load_model:\r\n        # Load model\r\n        model.load_state_dict(torch.load(os.path.join(args.model_dir, 'final_model.pt')))\r\n        trnloss, trnacc = eval_test(model, device, train_loader)\r\n        tstloss, tstacc = eval_test(model, device, test_loader)\r\n        print('trn_loss: {:.4f}, trn_acc: {:.2f}%'.format(trnloss, 100. * trnacc), end=', ')\r\n        print('test_loss: {:.4f}, test_acc: {:.2f}%'.format(tstloss, 100. * tstacc))\r\n            \r\n    else:\r\n        # Train initial model\r\n        for epoch in range(1, args.epochs + 1):\r\n            start_time = time.time()\r\n    \r\n            #training\r\n            train(args, model, device, train_loader, optimizer, epoch)\r\n    \r\n            #get trnloss and testloss\r\n            trnloss, trnacc = eval_test(model, device, train_loader)\r\n            tstloss, tstacc = eval_test(model, device, test_loader)\r\n    \r\n            #print trnloss and testloss\r\n            print('Epoch '+str(epoch)+': '+str(int(time.time()-start_time))+'s', end=', ')\r\n            print('trn_loss: {:.4f}, trn_acc: {:.2f}%'.format(trnloss, 100. * trnacc), end=', ')\r\n            print('test_loss: {:.4f}, test_acc: {:.2f}%'.format(tstloss, 100. * tstacc))\r\n            \r\n        #save model\r\n        torch.save(model.state_dict(), os.path.join(args.model_dir, 'final_model.pt'))\r\n    \r\nif __name__ == '__main__':\r\n    main()\r\n   \t\t `,\r\n      },\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    highlighter(code) {\r\n      return highlight(code, languages.js); // languages.<insert language> to return html with markup\r\n    },\r\n\r\n    getJson() {\r\n      axios({\r\n        method: \"get\",\r\n        url:\r\n          \"/canvas/getJson/\" + localStorage.uid + \"/\" + localStorage.pid + \"/\",\r\n        responseType: \"stream\",\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        // not first time\r\n        if (res.data.status == 200) {\r\n          this.canvas_data.file = res.data;\r\n          this.renderJson();\r\n        }\r\n        // first time\r\n        else if (res.data.status == 204) {\r\n        } else {\r\n          alert(\"can not get user's json!\");\r\n        }\r\n      });\r\n    },\r\n\r\n    getPython() {\r\n      axios({\r\n        method: \"get\",\r\n        url:\r\n          \"/canvas/getPython/\" +\r\n          localStorage.uid +\r\n          \"/\" +\r\n          localStorage.pid +\r\n          \"/\",\r\n        responseType: \"stream\",\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.status == 200) {\r\n          this.canvas_data.code = res.code;\r\n        } else {\r\n          alert(\"can not get user's python!\");\r\n        }\r\n      });\r\n    },\r\n\r\n    download() {\r\n      axios({\r\n        method: \"get\",\r\n        url:\r\n          \"/canvas/download/\" + localStorage.uid + \"/\" + localStorage.pid + \"/\",\r\n        responseType: \"blob\",\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.status == 200) {\r\n          let blob = new Blob([res], {\r\n            type: \"application/zip;charset-UTF-8\",\r\n          });\r\n\r\n          const url = URL.createObjectURL(blob);\r\n          const a = document.createElement(\"a\");\r\n          a.style.display = \"none\";\r\n          a.href = url;\r\n          a.download = \"projectttt.zip\";\r\n          a.click();\r\n          URL.revokeObjectURL(url);\r\n        } else {\r\n          alert(\"can not get user's json!\");\r\n        }\r\n      });\r\n    },\r\n\r\n    // Update json first, then send to backend and get python code\r\n    compile() {\r\n      // Update json\r\n      this.getJson();\r\n      // console.log(this.canvasData.file);\r\n      // this.renderJson();\r\n      // console.log(this.canvasData.file);\r\n      // this.updateJson();\r\n      // console.log(this.canvasData.file);\r\n\r\n      // send json to backend\r\n      // this.canvasData.file = myDiagram.model.toJson();\r\n\r\n      let formData = new FormData();\r\n      formData.append(\"file\", this.canvasData.file);\r\n      axios({\r\n        method: \"post\",\r\n        url:\r\n          \"/canvas/compile/\" + localStorage.uid + \"/\" + localStorage.pid + \"/\",\r\n        data: formData,\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        // If compile successful 200, backend update database, frontend get data and reload\r\n        if (res.data.status == \"200\") {\r\n          this.getPython();\r\n          console.log(\"compile ok!\");\r\n        }\r\n        // If complie fails 500, frontend alert error\r\n        else if (res.data.status == \"500\") {\r\n          alert(\"The network model is not valid!\");\r\n        }\r\n        location.replace(\"/canvas/\");\r\n      });\r\n    },\r\n\r\n    // Update Json accroding to user's operation\r\n    updateJson() {\r\n      document.getElementById(\"mySavedModel\").value = myDiagram.model.toJson();\r\n      myDiagram.isModified = false;\r\n    },\r\n\r\n    // Render Json on the canvas area\r\n    renderJson() {\r\n      myDiagram.model = go.Model.fromJson(\r\n        document.getElementById(\"mySavedModel\").value\r\n      );\r\n    },\r\n\r\n    // Render .py on the code area\r\n    renderCode() {},\r\n\r\n    // To make canvas tidy 200\r\n    layout() {\r\n      this.updateJson();\r\n      myDiagram.layoutDiagram(true);\r\n    },\r\n\r\n    // Go to train page 200\r\n    enterTrain() {\r\n      location.replace(\"/train/\");\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    // this.getJson();\r\n    // // this.updateJson();\r\n    // this.canvasData.file = JSON.stringify(this.canvasData.file);\r\n    // this.renderJson();\r\n    this.canvasData.file = JSON.stringify(this.canvasData.file);\r\n    this.compile();\r\n    // this.canvasData.file = JSON.stringify(this.canvasData.file);\r\n\r\n    const $ = go.GraphObject.make;\r\n\r\n    var bigfont = \"bold 13pt Helvetica, Arial, sans-serif\";\r\n    var smallfont = \"bold 11pt Helvetica, Arial, sans-serif\";\r\n\r\n    function textStyle() {\r\n      return {\r\n        margin: 6,\r\n        wrap: go.TextBlock.WrapFit,\r\n        textAlign: \"center\",\r\n        editable: true,\r\n        font: bigfont,\r\n      };\r\n    }\r\n\r\n    myDiagram = $(go.Diagram, \"myDiagramDiv_1\", {\r\n      \"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom,\r\n      initialAutoScale: go.Diagram.Uniform,\r\n      \"linkingTool.direction\": go.LinkingTool.ForwardsOnly,\r\n      layout: $(go.LayeredDigraphLayout, {\r\n        isInitial: false,\r\n        isOngoing: false,\r\n        layerSpacing: 50,\r\n      }),\r\n      \"undoManager.isEnabled\": true,\r\n    });\r\n\r\n    var nodeSelectionAdornmentTemplate = $(\r\n      go.Adornment,\r\n      \"Auto\",\r\n      $(go.Shape, {\r\n        fill: null,\r\n        stroke: \"#979dac\",\r\n        strokeWidth: 2,\r\n        strokeDashArray: [4, 2],\r\n      }),\r\n      $(go.Placeholder)\r\n    );\r\n\r\n    myDiagram.nodeTemplate = $(\r\n      go.Node,\r\n      \"Auto\",\r\n      {\r\n        locationSpot: go.Spot.Center,\r\n      },\r\n      new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n        go.Point.stringify\r\n      ),\r\n      {\r\n        selectable: true,\r\n        selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n      },\r\n\r\n      $(go.Shape, \"Rectangle\", {\r\n        stroke: null,\r\n        portId: \"\",\r\n        fromLinkable: true,\r\n        toLinkable: true,\r\n        cursor: \"pointer\",\r\n        toEndSegmentLength: 50,\r\n        fromEndSegmentLength: 50,\r\n      }),\r\n      $(\r\n        go.TextBlock,\r\n        \"hello\",\r\n        {\r\n          margin: 6,\r\n          font: bigfont,\r\n          editable: true,\r\n          minSize: new go.Size(40, NaN),\r\n        },\r\n        new go.Binding(\"text\", \"text\").makeTwoWay()\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"Data\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n          margin: new go.Margin(0, 0, 0, 0),\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"Circle\", {\r\n          fill: \"#caffbf\",\r\n          portId: \"\",\r\n          fromLinkable: true,\r\n          cursor: \"pointer\",\r\n\r\n          stroke: \"#74c69d\",\r\n\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"Data\",\r\n          textStyle(),\r\n          {\r\n            stroke: \"#2d6a4f\",\r\n            minSize: new go.Size(40, NaN),\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"End\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"Circle\", {\r\n          fill: \"#ffadad\",\r\n          portId: \"\",\r\n          toLinkable: true,\r\n          cursor: \"pointer\",\r\n          fromEndSegmentLength: 40,\r\n          stroke: \"#df7373\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"End\",\r\n          textStyle(),\r\n          {\r\n            stroke: \"#ad2e24\",\r\n            minSize: new go.Size(40, NaN),\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"ReLU\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"Ellipse\", {\r\n          fill: \"#fdffb6\",\r\n          portId: \"\",\r\n          fromLinkable: true,\r\n          toLinkable: true,\r\n          cursor: \"pointer\",\r\n          fromEndSegmentLength: 40,\r\n          stroke: \"#ffd100\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"ReLU\",\r\n          textStyle(),\r\n          {\r\n            stroke: \"#e2711d\",\r\n\r\n            minSize: new go.Size(60, NaN),\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    var reasonTemplate = $(\r\n      go.Panel,\r\n      $(\r\n        go.Panel,\r\n        \"Table\",\r\n        {\r\n          maxSize: new go.Size(200, 999),\r\n          margin: new go.Margin(0, 3, 10, 3),\r\n          defaultAlignment: go.Spot.Center,\r\n        },\r\n        $(go.RowColumnDefinition, {\r\n          column: 2,\r\n          width: 2,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"input = \",\r\n          {\r\n            margin: new go.Margin(4, 0, 0, 0),\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n\r\n            editable: true,\r\n            font: smallfont,\r\n            row: 2,\r\n            column: 0,\r\n            stroke: \"#3e5c76\",\r\n          },\r\n          new go.Binding(\"text\", \"text0\").makeTwoWay()\r\n        ),\r\n\r\n        $(\r\n          go.TextBlock,\r\n          \"value\",\r\n          {\r\n            margin: new go.Margin(4, 0, 0, 0),\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n\r\n            editable: true,\r\n            stroke: \"#3e5c76\",\r\n            font: smallfont,\r\n            row: 2,\r\n            column: 1,\r\n          },\r\n          new go.Binding(\"text\", \"text1\").makeTwoWay()\r\n        ),\r\n\r\n        $(\r\n          go.TextBlock,\r\n          \"output = \",\r\n          {\r\n            margin: new go.Margin(4, 0, 0, 0),\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n\r\n            editable: true,\r\n            font: smallfont,\r\n            stroke: \"#3e5c76\",\r\n            row: 3,\r\n            column: 0,\r\n          },\r\n          new go.Binding(\"text\", \"text2\").makeTwoWay()\r\n        ),\r\n\r\n        $(\r\n          go.TextBlock,\r\n          \"value\",\r\n          {\r\n            margin: new go.Margin(4, 0, 0, 9),\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n\r\n            editable: true,\r\n            font: smallfont,\r\n            stroke: \"#3e5c76\",\r\n            row: 3,\r\n            column: 1,\r\n          },\r\n          new go.Binding(\"text\", \"text3\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"FC\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: \"#bde0fe\",\r\n          stroke: \"#4ea8de\",\r\n          strokeWidth: 4,\r\n          portId: \"\",\r\n          fromLinkable: true,\r\n          toLinkable: true,\r\n          cursor: \"pointer\",\r\n          toEndSegmentLength: 50,\r\n          fromEndSegmentLength: 40,\r\n        }),\r\n        $(\r\n          go.Panel,\r\n          \"Vertical\",\r\n          {\r\n            defaultAlignment: go.Spot.Center,\r\n          },\r\n\r\n          $(\r\n            go.TextBlock,\r\n            \"FC\",\r\n            textStyle(),\r\n            {\r\n              stroke: \"#3e5c76\",\r\n              margin: new go.Margin(8, 0, 0, 0),\r\n              minSize: new go.Size(100, NaN),\r\n            },\r\n            new go.Binding(\"text\", \"text\").makeTwoWay()\r\n          ),\r\n\r\n          $(\r\n            go.Panel,\r\n            \"Vertical\",\r\n            {\r\n              defaultAlignment: go.Spot.TopLeft,\r\n              itemTemplate: reasonTemplate,\r\n            },\r\n            new go.Binding(\"itemArray\", \"reasonsList\").makeTwoWay()\r\n          )\r\n        )\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"RNN\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: \"#E7C5FC\",\r\n          stroke: \"#CF8BF9\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"RNN\\n(unavailable)\",\r\n          textStyle(),\r\n          {\r\n            margin: 9,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            editable: true,\r\n            stroke: \"#560788\",\r\n            font: smallfont,\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"CNN\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: \"#E7C5FC\",\r\n          stroke: \"#CF8BF9\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"CNN\\n(unavailable)\",\r\n          textStyle(),\r\n          {\r\n            margin: 9,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            editable: true,\r\n            stroke: \"#560788\",\r\n            font: smallfont,\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"LSTM\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: \"#E7C5FC\",\r\n          stroke: \"#CF8BF9\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"LSTM\\n(unavailable)\",\r\n          textStyle(),\r\n          {\r\n            margin: 9,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            editable: true,\r\n            stroke: \"#560788\",\r\n            font: smallfont,\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"Softmax\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: \"#E7C5FC\",\r\n          stroke: \"#CF8BF9\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"Softmax\\n(unavailable)\",\r\n          textStyle(),\r\n          {\r\n            margin: 9,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            editable: true,\r\n            stroke: \"#560788\",\r\n            font: smallfont,\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"Maximum Polling\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: \"#E7C5FC\",\r\n          stroke: \"#CF8BF9\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"Maximum\\nPolling\\n(unavailable)\",\r\n          textStyle(),\r\n          {\r\n            margin: 9,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            editable: true,\r\n            stroke: \"#560788\",\r\n            font: smallfont,\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    var linkSelectionAdornmentTemplate = $(\r\n      go.Adornment,\r\n      \"Link\",\r\n      $(\r\n        go.Shape,\r\n\r\n        {\r\n          isPanelMain: true,\r\n          fill: null,\r\n          stroke: \"deepskyblue\",\r\n          strokeWidth: 2.5,\r\n        }\r\n      )\r\n    );\r\n\r\n    myDiagram.linkTemplate = $(\r\n      go.Link,\r\n      {\r\n        selectable: true,\r\n        selectionAdornmentTemplate: linkSelectionAdornmentTemplate,\r\n      },\r\n      new go.Binding(\"points\").makeTwoWay(),\r\n      {\r\n        toShortLength: 15,\r\n      },\r\n\r\n      $(go.Shape, {\r\n        stroke: \"#979dac\",\r\n        strokeWidth: 2.5,\r\n      }),\r\n      $(go.Shape, {\r\n        toArrow: \"kite\",\r\n        fill: \"#979dac\",\r\n        stroke: null,\r\n        scale: 2,\r\n      })\r\n    );\r\n\r\n    var palette = $(go.Palette, \"myPaletteDiv\", {\r\n      nodeTemplateMap: myDiagram.nodeTemplateMap,\r\n      autoScale: go.Diagram.Uniform,\r\n    });\r\n\r\n    palette.model.nodeDataArray = [\r\n      {\r\n        category: \"Data\",\r\n        reasonsList: [{}],\r\n      },\r\n      {\r\n        category: \"ReLU\",\r\n        reasonsList: [{}],\r\n      },\r\n      {\r\n        category: \"FC\",\r\n        reasonsList: [{}],\r\n      },\r\n      {\r\n        category: \"End\",\r\n        reasonsList: [{}],\r\n      },\r\n      {\r\n        category: \"CNN\",\r\n        reasonsList: [{}],\r\n      },\r\n      {\r\n        category: \"RNN\",\r\n        reasonsList: [{}],\r\n      },\r\n      {\r\n        category: \"LSTM\",\r\n        reasonsList: [{}],\r\n      },\r\n      {\r\n        category: \"Softmax\",\r\n        reasonsList: [{}],\r\n      },\r\n      {\r\n        category: \"Maximum Polling\",\r\n        reasonsList: [{}],\r\n      },\r\n    ];\r\n\r\n    window.myDiagram = myDiagram;\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.body {\r\n  padding: 0;\r\n  margin: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow: visible;\r\n}\r\n</style>\r\n<style scoped src=\"../../new_pages/vendor/fontawesome-free/css/all.min.css\"></style>\r\n<style scoped src=\"../../new_pages/css/sb-admin-2.min.css\"></style>\r\n\r\n<style>\r\n/* required class */\r\n.my-editor {\r\n  /* we dont use `language-` classes anymore so thats why we need to add background and text color manually */\r\n  background: #2d2d2d;\r\n  color: #ccc;\r\n\r\n  /* you must provide font-family font-size line-height. Example: */\r\n  font-family: Fira code, Fira Mono, Consolas, Menlo, Courier, monospace;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  padding: 5px;\r\n}\r\n\r\n/* optional class for removing the outline */\r\n.prism-editor__textarea:focus {\r\n  outline: none;\r\n}\r\n</style>\r\n\r\n    <style scpoed>\r\n#myPaletteDiv {\r\n  border-radius: 7px;\r\n}\r\n\r\n#myDiagramDiv_1 {\r\n  border-radius: 7px;\r\n}\r\n\r\n#myDiagramDiv_2 {\r\n  border-radius: 7px;\r\n}\r\n\r\n#myDiagramDiv_1 {\r\n  resize: horizontal;\r\n  overflow: auto;\r\n}\r\n\r\n::-webkit-resizer {\r\n  /* background: #82929B; */\r\n  /* background-color: #82929B; */\r\n  /* background: url(\"img/arrow.png\"); */\r\n  background: url(\"../../new_pages/img/1.jpg\");\r\n  border-radius: 0.1rem;\r\n  /* border: 8px solid black;\r\n            background: blue; */\r\n  /* outline: 2px dashed green; */\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}