{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-60569357\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = {\n  id: \"page-top\",\n  \"class\": \"body\"\n};\n\nvar _hoisted_2 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"wrapper\"\n  }, [/*#__PURE__*/_createCommentVNode(\" Sidebar \"), /*#__PURE__*/_createElementVNode(\"ul\", {\n    \"class\": \"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\",\n    id: \"accordionSidebar\"\n  }, [/*#__PURE__*/_createCommentVNode(\" Sidebar - Brand \"), /*#__PURE__*/_createElementVNode(\"a\", {\n    \"class\": \"sidebar-brand d-flex align-items-center justify-content-center\"\n  }, [/*#__PURE__*/_createCommentVNode(\" <div class=\\\"sidebar-brand-icon rotate-n-15\\\">\\r\\n                    <i class=\\\"fas fa-laugh-wink\\\"></i>\\r\\n                </div> \"), /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"sidebar-brand-text mx-3\"\n  }, \"NEURAL LEGO\")]), /*#__PURE__*/_createCommentVNode(\" Divider \"), /*#__PURE__*/_createElementVNode(\"hr\", {\n    \"class\": \"sidebar-divider my-0\"\n  }), /*#__PURE__*/_createCommentVNode(\" Nav Item - Dashboard \"), /*#__PURE__*/_createElementVNode(\"li\", {\n    \"class\": \"nav-item\"\n  }, [/*#__PURE__*/_createElementVNode(\"a\", {\n    \"class\": \"nav-link\",\n    href: \"/profile\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fas fa-fw fa-user\"\n  }), /*#__PURE__*/_createElementVNode(\"span\", null, \"User\")])]), /*#__PURE__*/_createCommentVNode(\" Divider \"), /*#__PURE__*/_createElementVNode(\"hr\", {\n    \"class\": \"sidebar-divider my-0\"\n  }), /*#__PURE__*/_createCommentVNode(\" Nav Item - Dashboard \"), /*#__PURE__*/_createElementVNode(\"li\", {\n    \"class\": \"nav-item\"\n  }, [/*#__PURE__*/_createElementVNode(\"a\", {\n    \"class\": \"nav-link\",\n    href: \"/project\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fas fa-fw fa-folder\"\n  }), /*#__PURE__*/_createElementVNode(\"span\", null, \"Project\")])]), /*#__PURE__*/_createCommentVNode(\" Divider \"), /*#__PURE__*/_createElementVNode(\"hr\", {\n    \"class\": \"sidebar-divider my-0\"\n  }), /*#__PURE__*/_createCommentVNode(\" Nav Item - Dashboard \"), /*#__PURE__*/_createElementVNode(\"li\", {\n    \"class\": \"nav-item\"\n  }, [/*#__PURE__*/_createElementVNode(\"a\", {\n    \"class\": \"nav-link\",\n    href: \"/template\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fas fa-fw fa-table\"\n  }), /*#__PURE__*/_createElementVNode(\"span\", null, \"Template\")])]), /*#__PURE__*/_createElementVNode(\"hr\", {\n    \"class\": \"sidebar-divider my-0\"\n  }), /*#__PURE__*/_createCommentVNode(\" Nav Item - Dashboard \"), /*#__PURE__*/_createElementVNode(\"li\", {\n    \"class\": \"nav-item active\"\n  }, [/*#__PURE__*/_createElementVNode(\"a\", {\n    \"class\": \"nav-link\",\n    href: \"draggable.html\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fas fa-fw fa-palette\"\n  }), /*#__PURE__*/_createElementVNode(\"span\", null, \"Canvas\")])]), /*#__PURE__*/_createElementVNode(\"hr\", {\n    \"class\": \"sidebar-divider my-0\"\n  }), /*#__PURE__*/_createCommentVNode(\" Nav Item - Dashboard \"), /*#__PURE__*/_createElementVNode(\"li\", {\n    \"class\": \"nav-item\"\n  }, [/*#__PURE__*/_createElementVNode(\"a\", {\n    \"class\": \"nav-link\",\n    href: \"home.html\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fas fa-fw fa-arrow-circle-left\"\n  }), /*#__PURE__*/_createElementVNode(\"span\", null, \"Log out\")])]), /*#__PURE__*/_createCommentVNode(\" Divider \"), /*#__PURE__*/_createElementVNode(\"hr\", {\n    \"class\": \"sidebar-divider d-none d-md-block\"\n  })]), /*#__PURE__*/_createCommentVNode(\" End of Sidebar \"), /*#__PURE__*/_createCommentVNode(\" Content Wrapper \"), /*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"content-wrapper\",\n    \"class\": \"d-flex flex-column\"\n  }, [/*#__PURE__*/_createCommentVNode(\" Main Content \"), /*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"content\"\n  }, [/*#__PURE__*/_createCommentVNode(\" Topbar \"), /*#__PURE__*/_createElementVNode(\"nav\", {\n    \"class\": \"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\"\n  }, [/*#__PURE__*/_createCommentVNode(\" Sidebar Toggle (Topbar) \"), /*#__PURE__*/_createElementVNode(\"button\", {\n    id: \"sidebarToggleTop\",\n    \"class\": \"btn btn-link d-md-none rounded-circle mr-3\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fa fa-bars\"\n  })]), /*#__PURE__*/_createCommentVNode(\" Topbar Search \"), /*#__PURE__*/_createElementVNode(\"form\", {\n    \"class\": \"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"input-group\"\n  }, [/*#__PURE__*/_createElementVNode(\"input\", {\n    type: \"text\",\n    \"class\": \"form-control bg-light border-0 small\",\n    placeholder: \"Search for...\",\n    \"aria-label\": \"Search\",\n    \"aria-describedby\": \"basic-addon2\"\n  }), /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"input-group-append\"\n  }, [/*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\",\n    type: \"button\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fas fa-search fa-sm\"\n  })])])])]), /*#__PURE__*/_createCommentVNode(\" Topbar Navbar \"), /*#__PURE__*/_createElementVNode(\"ul\", {\n    \"class\": \"navbar-nav ml-auto\"\n  }, [/*#__PURE__*/_createCommentVNode(\" Nav Item - Search Dropdown (Visible Only XS) \"), /*#__PURE__*/_createElementVNode(\"li\", {\n    \"class\": \"nav-item dropdown no-arrow d-sm-none\"\n  }, [/*#__PURE__*/_createElementVNode(\"a\", {\n    \"class\": \"nav-link dropdown-toggle\",\n    href: \"#\",\n    id: \"searchDropdown\",\n    role: \"button\",\n    \"data-toggle\": \"dropdown\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": \"false\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fas fa-search fa-fw\"\n  })]), /*#__PURE__*/_createCommentVNode(\" Dropdown - Messages \"), /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\",\n    \"aria-labelledby\": \"searchDropdown\"\n  }, [/*#__PURE__*/_createElementVNode(\"form\", {\n    \"class\": \"form-inline mr-auto w-100 navbar-search\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"input-group\"\n  }, [/*#__PURE__*/_createElementVNode(\"input\", {\n    type: \"text\",\n    \"class\": \"form-control bg-light border-0 small\",\n    placeholder: \"Search for...\",\n    \"aria-label\": \"Search\",\n    \"aria-describedby\": \"basic-addon2\"\n  }), /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"input-group-append\"\n  }, [/*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\",\n    type: \"button\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fas fa-search fa-sm\"\n  })])])])])])])])]), /*#__PURE__*/_createCommentVNode(\" End of Topbar \"), /*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"allSampleContent\",\n    \"class\": \"p-4 w-full\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"sample\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    style: {\n      \"width\": \"100%\",\n      \"margin-bottom\": \"10px\",\n      \"display\": \"flex\"\n    }\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"myPaletteDiv\",\n    style: {\n      \"width\": \"150px\",\n      \"margin-right\": \"10px\",\n      \"border\": \"solid 4px #82929B\"\n    }\n  }), /*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"myDiagramDiv_1\",\n    style: {\n      \"width\": \"200px\",\n      \"margin-right\": \"10px\",\n      \"height\": \"600px\",\n      \"border\": \"solid 4px #82929B\"\n    }\n  }), /*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"myDiagramDiv_2\",\n    style: {\n      \"flex-grow\": \"1\",\n      \"height\": \"600px\",\n      \"border\": \"solid 4px #82929B\"\n    }\n  })]), /*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\",\n    id: \"SaveButton\",\n    onclick: \"save()\"\n  }, \"Save\"), /*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\",\n    onclick: \"load()\"\n  }, \"Load\"), /*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\",\n    onclick: \"layout()\"\n  }, \"Layout\"), /*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\"\n  }, \"Compile\"), /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"/train\"\n  }, [/*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\"\n  }, \"Train\")]), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createElementVNode(\"textarea\", {\n    id: \"mySavedModel\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"300px\"\n    }\n  }, \"{ \\\"class\\\": \\\"GraphLinksModel\\\",\\r\\n\\\"copiesArrays\\\": true,\\r\\n\\\"copiesArrayObjects\\\": true,\\r\\n\\\"nodeDataArray\\\": [ {\\\"category\\\":\\\"Data\\\", \\\"reasonsList\\\":[ {} ], \\\"key\\\":-2, \\\"loc\\\":\\\"-99.10220015417542 -20.151221229488044\\\"} ],\\r\\n\\\"linkDataArray\\\": []}\\r\\n            \")])])])]), /*#__PURE__*/_createCommentVNode(\" End of Content Wrapper \")], -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_3 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"modal fade\",\n    id: \"logoutModal\",\n    tabindex: \"-1\",\n    role: \"dialog\",\n    \"aria-labelledby\": \"exampleModalLabel\",\n    \"aria-hidden\": \"true\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"modal-dialog\",\n    role: \"document\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"modal-content\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"modal-header\"\n  }, [/*#__PURE__*/_createElementVNode(\"h5\", {\n    \"class\": \"modal-title\",\n    id: \"exampleModalLabel\"\n  }, \"Ready to Leave?\"), /*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"close\",\n    type: \"button\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\"\n  }, [/*#__PURE__*/_createElementVNode(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"×\")])]), /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"modal-body\"\n  }, \"Select \\\"Logout\\\" below if you are ready to end your current session.\"), /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"modal-footer\"\n  }, [/*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"btn btn-secondary\",\n    type: \"button\",\n    \"data-dismiss\": \"modal\"\n  }, \"Cancel\"), /*#__PURE__*/_createElementVNode(\"a\", {\n    \"class\": \"btn btn-primary\",\n    href: \"login.html\"\n  }, \"Logout\")])])])], -1\n  /* HOISTED */\n  );\n});\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Page Wrapper \"), _hoisted_2, _createCommentVNode(\" End of Page Wrapper \"), _createCommentVNode(\" Logout Modal\"), _hoisted_3]);\n}","map":{"version":3,"mappings":"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","names":["id","_createElementVNode","_createCommentVNode","href","type","placeholder","role","style","onclick","tabindex","_createElementBlock","_hoisted_2","_hoisted_3"],"sourceRoot":"","sources":["C:\\qp_box\\_CodeField\\Comp208-Neural-Lego\\frontend\\src\\views\\CanvasView.vue"],"sourcesContent":["<template>\r\n  <div id=\"page-top\" class=\"body\">\r\n    <!-- Page Wrapper -->\r\n    <div id=\"wrapper\">\r\n\r\n        <!-- Sidebar -->\r\n        <ul class=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\r\n\r\n            <!-- Sidebar - Brand -->\r\n\r\n            <a class=\"sidebar-brand d-flex align-items-center justify-content-center\">\r\n                <!-- <div class=\"sidebar-brand-icon rotate-n-15\">\r\n                    <i class=\"fas fa-laugh-wink\"></i>\r\n                </div> -->\r\n                <div class=\"sidebar-brand-text mx-3\">NEURAL LEGO</div>\r\n            </a>\r\n\r\n            <!-- Divider -->\r\n            <hr class=\"sidebar-divider my-0\">\r\n\r\n            <!-- Nav Item - Dashboard -->\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/profile\">\r\n                    <i class=\"fas fa-fw fa-user\"></i>\r\n                    <span>User</span></a>\r\n            </li>\r\n\r\n            <!-- Divider -->\r\n            <hr class=\"sidebar-divider my-0\">\r\n\r\n            <!-- Nav Item - Dashboard -->\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/project\">\r\n                    <i class=\"fas fa-fw fa-folder\"></i>\r\n                    <span>Project</span></a>\r\n            </li>\r\n\r\n            <!-- Divider -->\r\n            <hr class=\"sidebar-divider my-0\">\r\n\r\n            <!-- Nav Item - Dashboard -->\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"/template\">\r\n                    <i class=\"fas fa-fw fa-table\"></i>\r\n                    <span>Template</span></a>\r\n            </li>\r\n\r\n\r\n            <hr class=\"sidebar-divider my-0\">\r\n\r\n            <!-- Nav Item - Dashboard -->\r\n            <li class=\"nav-item active\">\r\n                <a class=\"nav-link\" href=\"draggable.html\">\r\n                    <i class=\"fas fa-fw fa-palette\"></i>\r\n                    <span>Canvas</span></a>\r\n            </li>\r\n\r\n\r\n            <hr class=\"sidebar-divider my-0\">\r\n\r\n            <!-- Nav Item - Dashboard -->\r\n            <li class=\"nav-item \">\r\n                <a class=\"nav-link\" href=\"home.html\">\r\n                    <i class=\"fas fa-fw fa-arrow-circle-left\"></i>\r\n                    <span>Log out</span></a>\r\n            </li>\r\n            <!-- Divider -->\r\n            <hr class=\"sidebar-divider d-none d-md-block\">\r\n        </ul>\r\n        <!-- End of Sidebar -->\r\n\r\n        <!-- Content Wrapper -->\r\n        <div id=\"content-wrapper\" class=\"d-flex flex-column\">\r\n\r\n            <!-- Main Content -->\r\n            <div id=\"content\">\r\n\r\n                <!-- Topbar -->\r\n                <nav class=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\r\n\r\n                    <!-- Sidebar Toggle (Topbar) -->\r\n                    <button id=\"sidebarToggleTop\" class=\"btn btn-link d-md-none rounded-circle mr-3\">\r\n                        <i class=\"fa fa-bars\"></i>\r\n                    </button>\r\n\r\n                    <!-- Topbar Search -->\r\n                    <form class=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\">\r\n                        <div class=\"input-group\">\r\n                            <input type=\"text\" class=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\">\r\n                            <div class=\"input-group-append\">\r\n                                <button class=\"btn btn-primary\" type=\"button\">\r\n                                    <i class=\"fas fa-search fa-sm\"></i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                    <!-- Topbar Navbar -->\r\n                    <ul class=\"navbar-nav ml-auto\">\r\n\r\n                        <!-- Nav Item - Search Dropdown (Visible Only XS) -->\r\n                        <li class=\"nav-item dropdown no-arrow d-sm-none\">\r\n                            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"searchDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                <i class=\"fas fa-search fa-fw\"></i>\r\n                            </a>\r\n                            <!-- Dropdown - Messages -->\r\n                            <div class=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\" aria-labelledby=\"searchDropdown\">\r\n                                <form class=\"form-inline mr-auto w-100 navbar-search\">\r\n                                    <div class=\"input-group\">\r\n                                        <input type=\"text\" class=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\">\r\n                                        <div class=\"input-group-append\">\r\n                                            <button class=\"btn btn-primary\" type=\"button\">\r\n                                                <i class=\"fas fa-search fa-sm\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </ul>\r\n\r\n                </nav>\r\n                <!-- End of Topbar -->\r\n\r\n                <div id=\"allSampleContent\" class=\"p-4 w-full\">\r\n                    \r\n\r\n                    <div id=\"sample\">\r\n\r\n                        <div style=\"width: 100%; margin-bottom: 10px;display: flex\">\r\n                            <div id=\"myPaletteDiv\" style=\"width: 150px; margin-right: 10px; border: solid 4px #82929B\"></div>\r\n\r\n                            <div id=\"myDiagramDiv_1\" style=\"width: 200px;margin-right: 10px;height: 600px;  border: solid 4px #82929B\"></div>\r\n                            <div id=\"myDiagramDiv_2\" style=\"flex-grow:1;height: 600px; border: solid 4px #82929B\"></div>\r\n                        </div>\r\n\r\n                        <button class=\"btn btn-primary\" id=\"SaveButton\" onclick=\"save()\">Save</button>\r\n                        <button class=\"btn btn-primary\" onclick=\"load()\">Load</button>\r\n                        <button class=\"btn btn-primary\" onclick=\"layout()\">Layout</button>\r\n                        <button class=\"btn btn-primary\">Compile</button>\r\n                        <a href=\"/train\"><button class=\"btn btn-primary\">Train</button></a>\r\n                        <br />\r\n                        <textarea id=\"mySavedModel\" style=\"width:100%;height:300px\">{ \"class\": \"GraphLinksModel\",\r\n\"copiesArrays\": true,\r\n\"copiesArrayObjects\": true,\r\n\"nodeDataArray\": [ {\"category\":\"Data\", \"reasonsList\":[ {} ], \"key\":-2, \"loc\":\"-99.10220015417542 -20.151221229488044\"} ],\r\n\"linkDataArray\": []}\r\n            </textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <!-- End of Content Wrapper -->\r\n\r\n    </div>\r\n    <!-- End of Page Wrapper -->\r\n\r\n    <!-- Logout Modal-->\r\n    <div class=\"modal fade\" id=\"logoutModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">Ready to Leave?</h5>\r\n                    <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">×</span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"modal-body\">Select \"Logout\" below if you are ready to end your current session.</div>\r\n                <div class=\"modal-footer\">\r\n                    <button class=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\r\n                    <a class=\"btn btn-primary\" href=\"login.html\">Logout</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport * as go from \"../../public/go.js\";\r\n\r\n//import Prism Editor\r\nimport { PrismEditor } from \"vue-prism-editor\";\r\nimport \"vue-prism-editor/dist/prismeditor.min.css\"; // import the styles somewhere\r\n\r\n// import highlighting library (you can use any library you want just return html string)\r\nimport { highlight, languages } from \"prismjs/components/prism-core\";\r\nimport \"prismjs/components/prism-clike\";\r\nimport \"prismjs/components/prism-javascript\";\r\nimport \"prismjs/themes/prism-twilight.css\"; // import syntax highlighting styles\r\n\r\nexport default {\r\n  name: \"CanvasView\",\r\n\r\n  components: {\r\n    PrismEditor,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      canvasData: {\r\n        file: {\r\n          class: \"GraphLinksModel\",\r\n          nodeDataArray: [\r\n            {\r\n              category: \"Data\",\r\n              key: -1,\r\n              loc: \"42.22500681322674 47.35735117835321\",\r\n            },\r\n            {\r\n              category: \"End\",\r\n              key: -4,\r\n              loc: \"567.1497069414404 47.35735117835318\",\r\n            },\r\n            {\r\n              category: \"ReLU\",\r\n              key: -2,\r\n              loc: \"403.0334278716728 47.357351178353184\",\r\n            },\r\n            {\r\n              category: \"FC\",\r\n              reasonsList: [{ text1: \"512\", text3: \"128\" }],\r\n              key: -3,\r\n              loc: \"216.57893005138874 47.357351178353184\",\r\n            },\r\n          ],\r\n          linkDataArray: [\r\n            {\r\n              from: -3,\r\n              to: -2,\r\n              points: [\r\n                278.70784647632394, 47.35735117835319, 318.70784647632394,\r\n                47.35735117835319, 338.707846476324, 47.3573511783532,\r\n                348.707846476324, 47.3573511783532,\r\n              ],\r\n            },\r\n            {\r\n              from: -2,\r\n              to: -4,\r\n              points: [\r\n                457.3590092670217, 47.3573511783532, 497.3590092670217,\r\n                47.3573511783532, 517.3590092670217, 47.35735117835319,\r\n                527.3590092670217, 47.35735117835319,\r\n              ],\r\n            },\r\n            {\r\n              from: -1,\r\n              to: -3,\r\n              points: [\r\n                84.4500136264535, 47.3573511783532, 94.4500136264535,\r\n                47.3573511783532, 104.45001362645351, 47.35735117835319,\r\n                154.4500136264535, 47.35735117835319,\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        code: `import torch import torch.nn as nn\r\nimport torch.nn.functional as F\r\nimport torch.optim as optim\r\nfrom torchvision import datasets, transforms\r\nimport argparse\r\nimport time\r\nimport os\r\n\r\n#setup training parameters\r\nparser = argparse.ArgumentParser(description='PyTorch MNIST Training')\r\nparser.add_argument('--batch-size', type=int, default=128, metavar='N',\r\n                    help='input batch size for training (default: 128)')\r\nparser.add_argument('--test-batch-size', type=int, default=128, metavar='N',\r\n                    help='input batch size for testing (default: 128)')\r\nparser.add_argument('--epochs', type=int, default=5, metavar='N',\r\n                    help='number of epochs to train')\r\nparser.add_argument('--lr', type=float, default=0.01, metavar='LR',\r\n                    help='learning rate')\r\nparser.add_argument('--no-cuda', action='store_true', default=False,\r\n                    help='disables CUDA training')\r\nparser.add_argument('--seed', type=int, default=1, metavar='S',\r\n                    help='random seed (default: 1)')\r\nparser.add_argument('--model-dir', default='./model-mnist-cnn',\r\n                    help='directory of model for saving checkpoint')\r\nparser.add_argument('--load-model', action='store_true', default=False,\r\n                    help='load model or not')\r\n    \r\nargs = parser.parse_args(args=[]) \r\n    \r\nif not os.path.exists(args.model_dir):\r\n    os.makedirs(args.model_dir)\r\n            \r\n# Judge cuda is available or not\r\nuse_cuda = not args.no_cuda and torch.cuda.is_available()\r\n#device = torch.device(\"cuda\" if use_cuda else \"cpu\")\r\ndevice = torch.device(\"cpu\")\r\n    \r\ntorch.manual_seed(args.seed)\r\nkwargs = {'num_workers': 1, 'pin_memory': True} if use_cuda else {}\r\n    \r\n# Setup data loader\r\ntransform=transforms.Compose([\r\n        transforms.ToTensor(),\r\n        transforms.Normalize((0.1307,), (0.3081,))\r\n        ])\r\ntrainset = datasets.MNIST('data', train=True, download=True,\r\n                    transform=transform)\r\ntestset = datasets.MNIST('data', train=False,\r\n                    transform=transform)\r\ntrain_loader = torch.utils.data.DataLoader(trainset,batch_size=args.batch_size, shuffle=True,**kwargs)\r\ntest_loader = torch.utils.data.DataLoader(testset,batch_size=args.test_batch_size, shuffle=False, **kwargs)\r\n    \r\n    \r\n# Define CNN\r\nclass Net(nn.Module):\r\n    def __init__(self):\r\n        super(Net, self).__init__()\r\n        # in_channels:1  out_channels:32  kernel_size:3  stride:1\r\n        self.conv1 = nn.Conv2d(1, 32, 3, 1)\r\n        # in_channels:32  out_channels:64  kernel_size:3  stride:1\r\n        self.conv2 = nn.Conv2d(32, 64, 3, 1)\r\n        self.fc1 = nn.Linear(9216, 128)\r\n        self.fc2 = nn.Linear(128, 10)\r\n    \r\n    def forward(self, x):\r\n        x = self.conv1(x)\r\n        x = F.relu(x)\r\n        x = self.conv2(x)\r\n        x = F.relu(x)\r\n        x = F.max_pool2d(x, 2)\r\n        x = torch.flatten(x, 1)\r\n        x = self.fc1(x)\r\n        x = F.relu(x)\r\n        x = self.fc2(x)\r\n        output = F.log_softmax(x, dim=1)\r\n        return output\r\n    \r\n    \r\n    \r\n# Train function\r\ndef train(args, model, device, train_loader, optimizer, epoch):\r\n    model.train()\r\n    for batch_idx, (data, target) in enumerate(train_loader):\r\n        data, target = data.to(device), target.to(device)\r\n            \r\n        #clear gradients\r\n        optimizer.zero_grad()\r\n            \r\n        #compute loss\r\n        loss = F.cross_entropy(model(data), target)\r\n            \r\n        #get gradients and update\r\n        loss.backward()\r\n        optimizer.step()\r\n    \r\n# Predict function\r\ndef eval_test(model, device, test_loader):\r\n    model.eval()\r\n    test_loss = 0\r\n    correct = 0\r\n    with torch.no_grad():\r\n        for data, target in test_loader:\r\n            data, target = data.to(device), target.to(device)\r\n            output = model(data)\r\n            test_loss += F.cross_entropy(output, target, size_average=False).item()\r\n            pred = output.max(1, keepdim=True)[1]\r\n            correct += pred.eq(target.view_as(pred)).sum().item()\r\n    test_loss /= len(test_loader.dataset)\r\n    test_accuracy = correct / len(test_loader.dataset)\r\n    return test_loss, test_accuracy\r\n    \r\n# Main function, train the initial model or load the model\r\ndef main():\r\n    model = Net().to(device)\r\n    optimizer = optim.SGD(model.parameters(), lr=args.lr)\r\n        \r\n    if args.load_model:\r\n        # Load model\r\n        model.load_state_dict(torch.load(os.path.join(args.model_dir, 'final_model.pt')))\r\n        trnloss, trnacc = eval_test(model, device, train_loader)\r\n        tstloss, tstacc = eval_test(model, device, test_loader)\r\n        print('trn_loss: {:.4f}, trn_acc: {:.2f}%'.format(trnloss, 100. * trnacc), end=', ')\r\n        print('test_loss: {:.4f}, test_acc: {:.2f}%'.format(tstloss, 100. * tstacc))\r\n            \r\n    else:\r\n        # Train initial model\r\n        for epoch in range(1, args.epochs + 1):\r\n            start_time = time.time()\r\n    \r\n            #training\r\n            train(args, model, device, train_loader, optimizer, epoch)\r\n    \r\n            #get trnloss and testloss\r\n            trnloss, trnacc = eval_test(model, device, train_loader)\r\n            tstloss, tstacc = eval_test(model, device, test_loader)\r\n    \r\n            #print trnloss and testloss\r\n            print('Epoch '+str(epoch)+': '+str(int(time.time()-start_time))+'s', end=', ')\r\n            print('trn_loss: {:.4f}, trn_acc: {:.2f}%'.format(trnloss, 100. * trnacc), end=', ')\r\n            print('test_loss: {:.4f}, test_acc: {:.2f}%'.format(tstloss, 100. * tstacc))\r\n            \r\n        #save model\r\n        torch.save(model.state_dict(), os.path.join(args.model_dir, 'final_model.pt'))\r\n    \r\nif __name__ == '__main__':\r\n    main()\r\n   \t\t `,\r\n      },\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    highlighter(code) {\r\n      return highlight(code, languages.js); // languages.<insert language> to return html with markup\r\n    },\r\n\r\n    getJson() {\r\n      axios({\r\n        method: \"get\",\r\n        url:\r\n          \"/canvas/getJson/\" + localStorage.uid + \"/\" + localStorage.pid + \"/\",\r\n        responseType: \"stream\",\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        // not first time\r\n        if (res.data.status == 200) {\r\n          this.canvas_data.file = res.data;\r\n          this.renderJson();\r\n        }\r\n        // first time\r\n        else if (res.data.status == 204) {\r\n        } else {\r\n          alert(\"can not get user's json!\");\r\n        }\r\n      });\r\n    },\r\n\r\n    getPython() {\r\n      axios({\r\n        method: \"get\",\r\n        url:\r\n          \"/canvas/getPython/\" +\r\n          localStorage.uid +\r\n          \"/\" +\r\n          localStorage.pid +\r\n          \"/\",\r\n        responseType: \"stream\",\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.status == 200) {\r\n          this.canvas_data.code = res.code;\r\n        } else {\r\n          alert(\"can not get user's python!\");\r\n        }\r\n      });\r\n    },\r\n\r\n    download() {\r\n      axios({\r\n        method: \"get\",\r\n        url:\r\n          \"/canvas/download/\" + localStorage.uid + \"/\" + localStorage.pid + \"/\",\r\n        responseType: \"blob\",\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.status == 200) {\r\n          let blob = new Blob([res], {\r\n            type: \"application/zip;charset-UTF-8\",\r\n          });\r\n\r\n          const url = URL.createObjectURL(blob);\r\n          const a = document.createElement(\"a\");\r\n          a.style.display = \"none\";\r\n          a.href = url;\r\n          a.download = \"projectttt.zip\";\r\n          a.click();\r\n          URL.revokeObjectURL(url);\r\n        } else {\r\n          alert(\"can not get user's json!\");\r\n        }\r\n      });\r\n    },\r\n\r\n    // Update json first, then send to backend and get python code\r\n    compile() {\r\n      // Update json\r\n      this.getJson();\r\n      // console.log(this.canvasData.file);\r\n      // this.renderJson();\r\n      // console.log(this.canvasData.file);\r\n      // this.updateJson();\r\n      // console.log(this.canvasData.file);\r\n\r\n      // send json to backend\r\n      // this.canvasData.file = myDiagram.model.toJson();\r\n\r\n      let formData = new FormData();\r\n      formData.append(\"file\", this.canvasData.file);\r\n      axios({\r\n        method: \"post\",\r\n        url:\r\n          \"/canvas/compile/\" + localStorage.uid + \"/\" + localStorage.pid + \"/\",\r\n        data: formData,\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        // If compile successful 200, backend update database, frontend get data and reload\r\n        if (res.data.status == \"200\") {\r\n          this.getPython();\r\n          console.log(\"compile ok!\");\r\n        }\r\n        // If complie fails 500, frontend alert error\r\n        else if (res.data.status == \"500\") {\r\n          alert(\"The network model is not valid!\");\r\n        }\r\n        location.replace(\"/canvas/\");\r\n      });\r\n    },\r\n\r\n    // Update Json accroding to user's operation\r\n    updateJson() {\r\n      document.getElementById(\"mySavedModel\").value = myDiagram.model.toJson();\r\n      myDiagram.isModified = false;\r\n    },\r\n\r\n    // Render Json on the canvas area\r\n    renderJson() {\r\n      myDiagram.model = go.Model.fromJson(\r\n        document.getElementById(\"mySavedModel\").value\r\n      );\r\n    },\r\n\r\n    // Render .py on the code area\r\n    renderCode() {},\r\n\r\n    // To make canvas tidy 200\r\n    layout() {\r\n      this.updateJson();\r\n      myDiagram.layoutDiagram(true);\r\n    },\r\n\r\n    // Go to train page 200\r\n    enterTrain() {\r\n      location.replace(\"/train/\");\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    // this.getJson();\r\n    // // this.updateJson();\r\n    // this.canvasData.file = JSON.stringify(this.canvasData.file);\r\n    // this.renderJson();\r\n    this.canvasData.file = JSON.stringify(this.canvasData.file);\r\n    this.compile();\r\n    // this.canvasData.file = JSON.stringify(this.canvasData.file);\r\n\r\n    const $ = go.GraphObject.make; // for conciseness in defining templates\r\n    var yellowgrad = $(go.Brush, \"Linear\", {\r\n      0: \"#bde0fe\",\r\n      1: \"#bde0fe\",\r\n    });\r\n    var greengrad = $(go.Brush, \"Linear\", {\r\n      0: \"#fdffb6\",\r\n      1: \"#fdffb6\",\r\n    });\r\n    var bluegrad = $(go.Brush, \"Linear\", {\r\n      0: \"#caffbf\",\r\n      1: \"#caffbf\",\r\n    });\r\n    var redgrad = $(go.Brush, \"Linear\", {\r\n      0: \"#ffadad\",\r\n      1: \"#ffadad\",\r\n    });\r\n    var whitegrad = $(go.Brush, \"Linear\", {\r\n      0: \"#E7C5FC\",\r\n      1: \"#E7C5FC\",\r\n    });\r\n    var bigfont = \"bold 15pt Helvetica, Arial, sans-serif\";\r\n    var smallfont = \"bold 13pt Helvetica, Arial, sans-serif\";\r\n\r\n    // Common text styling\r\n    function textStyle() {\r\n      return {\r\n        margin: 6,\r\n        wrap: go.TextBlock.WrapFit,\r\n        textAlign: \"center\",\r\n        editable: true,\r\n        font: bigfont,\r\n      };\r\n    }\r\n\r\n    const myDiagram = $(go.Diagram, \"myDiagramDiv\", {\r\n      initialAutoScale: go.Diagram.Uniform,\r\n      \"linkingTool.direction\": go.LinkingTool.ForwardsOnly,\r\n      layout: $(go.LayeredDigraphLayout, {\r\n        isInitial: false,\r\n        isOngoing: false,\r\n        layerSpacing: 50,\r\n      }),\r\n      \"undoManager.isEnabled\": true,\r\n    });\r\n\r\n    var nodeSelectionAdornmentTemplate = $(\r\n      go.Adornment,\r\n      \"Auto\",\r\n      $(go.Shape, {\r\n        fill: null,\r\n        stroke: \"#979dac\",\r\n        strokeWidth: 2,\r\n        strokeDashArray: [4, 2],\r\n      }),\r\n      $(go.Placeholder)\r\n    );\r\n\r\n    // define the Node template\r\n    myDiagram.nodeTemplate = $(\r\n      go.Node,\r\n      \"Auto\",\r\n      {\r\n        locationSpot: go.Spot.Center,\r\n      },\r\n      new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n        go.Point.stringify\r\n      ),\r\n      {\r\n        selectable: true,\r\n        selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n      },\r\n      // define the node's outer shape, which will surround the TextBlock\r\n      $(go.Shape, \"Rectangle\", {\r\n        fill: yellowgrad,\r\n        stroke: null,\r\n        portId: \"\",\r\n        fromLinkable: true,\r\n        toLinkable: true,\r\n        cursor: \"pointer\",\r\n        toEndSegmentLength: 50,\r\n        fromEndSegmentLength: 50,\r\n      }),\r\n      $(\r\n        go.TextBlock,\r\n        \"ReLU\",\r\n        {\r\n          margin: 6,\r\n          font: bigfont,\r\n          editable: true,\r\n          minSize: new go.Size(40, NaN),\r\n        },\r\n        new go.Binding(\"text\", \"text\").makeTwoWay()\r\n      )\r\n    );\r\n    // Data\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"Data\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n          margin: new go.Margin(0, 0, 0, 0),\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"Circle\", {\r\n          fill: bluegrad,\r\n          portId: \"\",\r\n          fromLinkable: true,\r\n          cursor: \"pointer\",\r\n          //fromEndSegmentLength: 40,\r\n          stroke: \"#74c69d\",\r\n\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"Data\",\r\n          textStyle(),\r\n          {\r\n            stroke: \"#2d6a4f\",\r\n            minSize: new go.Size(40, NaN),\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"End\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"Circle\", {\r\n          fill: redgrad,\r\n          portId: \"\",\r\n          toLinkable: true,\r\n          cursor: \"pointer\",\r\n          fromEndSegmentLength: 40,\r\n          stroke: \"#df7373\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"End\",\r\n          textStyle(),\r\n          {\r\n            stroke: \"#ad2e24\",\r\n            minSize: new go.Size(40, NaN),\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"ReLU\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"Ellipse\", {\r\n          fill: greengrad,\r\n          portId: \"\",\r\n          fromLinkable: true,\r\n          toLinkable: true,\r\n          cursor: \"pointer\",\r\n          fromEndSegmentLength: 40,\r\n          stroke: \"#ffd100\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"ReLU\",\r\n          textStyle(),\r\n          {\r\n            stroke: \"#e2711d\",\r\n            // locationSpot: go.Spot.Center,\r\n            //margin: new go.Margin(10, 0, 0, 0),\r\n            minSize: new go.Size(60, NaN),\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    var reasonTemplate = $(\r\n      go.Panel,\r\n      $(\r\n        go.Panel,\r\n        \"Table\",\r\n        {\r\n          maxSize: new go.Size(200, 999),\r\n          margin: new go.Margin(0, 3, 10, 3),\r\n          defaultAlignment: go.Spot.Center,\r\n        },\r\n        $(go.RowColumnDefinition, {\r\n          column: 2,\r\n          width: 2,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"input = \",\r\n          {\r\n            margin: new go.Margin(4, 0, 0, 0),\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            //stroke: \"whitesmoke\",\r\n            editable: true,\r\n            font: smallfont,\r\n            row: 2,\r\n            column: 0,\r\n            stroke: \"#3e5c76\",\r\n          },\r\n          new go.Binding(\"text\", \"text0\").makeTwoWay()\r\n        ),\r\n\r\n        $(\r\n          go.TextBlock,\r\n          \"value\",\r\n          {\r\n            margin: new go.Margin(4, 0, 0, 0),\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            //stroke: \"whitesmoke\",\r\n            editable: true,\r\n            stroke: \"#3e5c76\",\r\n            font: smallfont,\r\n            row: 2,\r\n            column: 1,\r\n          },\r\n          new go.Binding(\"text\", \"text1\").makeTwoWay()\r\n        ),\r\n\r\n        $(\r\n          go.TextBlock,\r\n          \"output = \",\r\n          {\r\n            margin: new go.Margin(4, 0, 0, 0),\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            //stroke: \"whitesmoke\",\r\n            editable: true,\r\n            font: smallfont,\r\n            stroke: \"#3e5c76\",\r\n            row: 3,\r\n            column: 0,\r\n          },\r\n          new go.Binding(\"text\", \"text2\").makeTwoWay()\r\n        ),\r\n\r\n        $(\r\n          go.TextBlock,\r\n          \"value\",\r\n          {\r\n            margin: new go.Margin(4, 0, 0, 9),\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            //stroke: \"whitesmoke\",\r\n            editable: true,\r\n            font: smallfont,\r\n            stroke: \"#3e5c76\",\r\n            row: 3,\r\n            column: 1,\r\n          },\r\n          new go.Binding(\"text\", \"text3\").makeTwoWay()\r\n        )\r\n      ) // end Table Panel\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"FC\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: yellowgrad,\r\n          stroke: \"#4ea8de\",\r\n          strokeWidth: 4,\r\n          portId: \"\",\r\n          fromLinkable: true,\r\n          toLinkable: true,\r\n          cursor: \"pointer\",\r\n          toEndSegmentLength: 50,\r\n          fromEndSegmentLength: 40,\r\n        }),\r\n        $(\r\n          go.Panel,\r\n          \"Vertical\",\r\n          {\r\n            defaultAlignment: go.Spot.Center,\r\n          },\r\n\r\n          $(\r\n            go.TextBlock,\r\n            \"FC\",\r\n            textStyle(),\r\n            {\r\n              stroke: \"#3e5c76\",\r\n              margin: new go.Margin(8, 0, 0, 0),\r\n              minSize: new go.Size(100, NaN),\r\n              //maxSize: new go.Size(200, NaN)\r\n            },\r\n            new go.Binding(\"text\", \"text\").makeTwoWay()\r\n          ),\r\n\r\n          $(\r\n            go.Panel,\r\n            \"Vertical\",\r\n            {\r\n              defaultAlignment: go.Spot.TopLeft,\r\n              itemTemplate: reasonTemplate,\r\n            },\r\n            new go.Binding(\"itemArray\", \"reasonsList\").makeTwoWay()\r\n          )\r\n        )\r\n      )\r\n    );\r\n\r\n    var linkSelectionAdornmentTemplate = $(\r\n      go.Adornment,\r\n      \"Link\",\r\n      $(\r\n        go.Shape,\r\n        // isPanelMain declares that this Shape shares the Link.geometry\r\n        {\r\n          isPanelMain: true,\r\n          fill: null,\r\n          stroke: \"deepskyblue\",\r\n          strokeWidth: 2.5,\r\n        }\r\n      ) // use selection object's strokeWidth\r\n    );\r\n    // replace the default Link template in the linkTemplateMap\r\n    myDiagram.linkTemplate = $(\r\n      go.Link, // the whole link panel\r\n      {\r\n        selectable: true,\r\n        selectionAdornmentTemplate: linkSelectionAdornmentTemplate,\r\n      },\r\n      new go.Binding(\"points\").makeTwoWay(),\r\n      {\r\n        //curve: go.Link.Bezier,\r\n        toShortLength: 15,\r\n      },\r\n      //new go.Binding(\"curviness\", \"curviness\"),\r\n      $(\r\n        go.Shape, // the link shape\r\n        {\r\n          stroke: \"#979dac\",\r\n          strokeWidth: 2.5,\r\n        }\r\n      ),\r\n      $(\r\n        go.Shape, // the arrowhead\r\n        {\r\n          toArrow: \"kite\",\r\n          fill: \"#979dac\",\r\n          stroke: null,\r\n          scale: 2,\r\n        }\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"RNN\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: whitegrad,\r\n          stroke: \"#CF8BF9\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"RNN\\n(unavailable)\",\r\n          textStyle(),\r\n          {\r\n            margin: 9,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            editable: true,\r\n            stroke: \"#560788\",\r\n            font: smallfont,\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n        // no ports, because no links are allowed to connect with a comment\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"CNN\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: whitegrad,\r\n          stroke: \"#CF8BF9\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"CNN\\n(unavailable)\",\r\n          textStyle(),\r\n          {\r\n            margin: 9,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            editable: true,\r\n            stroke: \"#560788\",\r\n            font: smallfont,\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n        // no ports, because no links are allowed to connect with a comment\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"LSTM\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: whitegrad,\r\n          stroke: \"#CF8BF9\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"LSTM\\n(unavailable)\",\r\n          textStyle(),\r\n          {\r\n            margin: 9,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            editable: true,\r\n            stroke: \"#560788\",\r\n            font: smallfont,\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n        // no ports, because no links are allowed to connect with a comment\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"Softmax\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: whitegrad,\r\n          stroke: \"#CF8BF9\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"Softmax\\n(unavailable)\",\r\n          textStyle(),\r\n          {\r\n            margin: 9,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            editable: true,\r\n            stroke: \"#560788\",\r\n            font: smallfont,\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n        // no ports, because no links are allowed to connect with a comment\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"Maximum Polling\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: whitegrad,\r\n          stroke: \"#CF8BF9\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"Maximum\\nPolling\\n(unavailable)\",\r\n          textStyle(),\r\n          {\r\n            margin: 9,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            editable: true,\r\n            stroke: \"#560788\",\r\n            font: smallfont,\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n        // no ports, because no links are allowed to connect with a comment\r\n      )\r\n    );\r\n\r\n    var palette = $(\r\n      go.Palette,\r\n      \"myPaletteDiv\", // create a new Palette in the HTML DIV element\r\n      {\r\n        // share the template map with the Palette\r\n        nodeTemplateMap: myDiagram.nodeTemplateMap,\r\n        autoScale: go.Diagram.Uniform, // everything always fits in viewport\r\n      }\r\n    );\r\n\r\n    palette.model.nodeDataArray = [\r\n      {\r\n        category: \"Data\",\r\n      },\r\n      {\r\n        category: \"ReLU\",\r\n      },\r\n      {\r\n        category: \"FC\",\r\n        reasonsList: [{}],\r\n      },\r\n      {\r\n        category: \"End\",\r\n      },\r\n      {\r\n        category: \"CNN\",\r\n      },\r\n      {\r\n        category: \"RNN\",\r\n      },\r\n      {\r\n        category: \"LSTM\",\r\n      },\r\n      {\r\n        category: \"Softmax\",\r\n      },\r\n      {\r\n        category: \"Maximum Polling\",\r\n      },\r\n    ];\r\n\r\n    window.myDiagram = myDiagram;\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.body {\r\n  padding: 0;\r\n  margin: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow: visible;\r\n}\r\n</style>\r\n<style scoped src=\"../../new_pages/vendor/fontawesome-free/css/all.min.css\"></style>\r\n<style scoped src=\"../../new_pages/css/sb-admin-2.min.css\"></style>\r\n\r\n<style>\r\n/* required class */\r\n.my-editor {\r\n  /* we dont use `language-` classes anymore so thats why we need to add background and text color manually */\r\n  background: #2d2d2d;\r\n  color: #ccc;\r\n\r\n  /* you must provide font-family font-size line-height. Example: */\r\n  font-family: Fira code, Fira Mono, Consolas, Menlo, Courier, monospace;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  padding: 5px;\r\n}\r\n\r\n/* optional class for removing the outline */\r\n.prism-editor__textarea:focus {\r\n  outline: none;\r\n}\r\n</style>\r\n\r\n    <style scpoed>\r\n        #myPaletteDiv {\r\n            border-radius: 7px;\r\n        }\r\n        \r\n        #myDiagramDiv_1 {\r\n            border-radius: 7px;\r\n        }\r\n        \r\n        #myDiagramDiv_2 {\r\n            border-radius: 7px;\r\n        }\r\n        \r\n        #myDiagramDiv_1 {\r\n            resize: horizontal;\r\n            overflow: auto;\r\n        }\r\n        \r\n         ::-webkit-resizer {\r\n            /* background: #82929B; */\r\n            /* background-color: #82929B; */\r\n            /* background: url(\"img/arrow.png\"); */\r\n            background: url(\"../../new_pages/img/1.jpg\");\r\n            border-radius: 0.1rem;\r\n            /* border: 8px solid black;\r\n            background: blue; */\r\n            /* outline: 2px dashed green; */\r\n        }\r\n    </style>"]},"metadata":{},"sourceType":"module"}