{"ast":null,"code":"import axios from \"axios\";\nimport * as go from \"/public/go.js\";\nimport { marked } from \"marked\";\nimport { debounce } from \"lodash-es\";\nexport default {\n  name: \"CanvasView\",\n  data: function data() {\n    return {\n      canvasData: {\n        file: {},\n        code: {}\n      },\n      input: \"python import numpy as np\"\n    };\n  },\n  mounted: function mounted() {\n    var $ = go.GraphObject.make; // for conciseness in defining templates\n\n    var yellowgrad = $(go.Brush, \"Linear\", {\n      0: \"#bde0fe\",\n      1: \"#bde0fe\"\n    });\n    var greengrad = $(go.Brush, \"Linear\", {\n      0: \"#fdffb6\",\n      1: \"#fdffb6\"\n    });\n    var bluegrad = $(go.Brush, \"Linear\", {\n      0: \"#caffbf\",\n      1: \"#caffbf\"\n    });\n    var redgrad = $(go.Brush, \"Linear\", {\n      0: \"#ffadad\",\n      1: \"#ffadad\"\n    });\n    var whitegrad = $(go.Brush, \"Linear\", {\n      0: \"#E7C5FC\",\n      1: \"#E7C5FC\"\n    });\n    var bigfont = \"bold 15pt Helvetica, Arial, sans-serif\";\n    var smallfont = \"bold 13pt Helvetica, Arial, sans-serif\"; // Common text styling\n\n    function textStyle() {\n      return {\n        margin: 6,\n        wrap: go.TextBlock.WrapFit,\n        textAlign: \"center\",\n        editable: true,\n        font: bigfont\n      };\n    }\n\n    var myDiagram = $(go.Diagram, \"myDiagramDiv\", {\n      initialAutoScale: go.Diagram.Uniform,\n      \"linkingTool.direction\": go.LinkingTool.ForwardsOnly,\n      layout: $(go.LayeredDigraphLayout, {\n        isInitial: false,\n        isOngoing: false,\n        layerSpacing: 50\n      }),\n      \"undoManager.isEnabled\": true\n    });\n    var nodeSelectionAdornmentTemplate = $(go.Adornment, \"Auto\", $(go.Shape, {\n      fill: null,\n      stroke: \"#979dac\",\n      strokeWidth: 2,\n      strokeDashArray: [4, 2]\n    }), $(go.Placeholder)); // define the Node template\n\n    myDiagram.nodeTemplate = $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, // define the node's outer shape, which will surround the TextBlock\n    $(go.Shape, \"Rectangle\", {\n      fill: yellowgrad,\n      stroke: null,\n      portId: \"\",\n      fromLinkable: true,\n      toLinkable: true,\n      cursor: \"pointer\",\n      toEndSegmentLength: 50,\n      fromEndSegmentLength: 50\n    }), $(go.TextBlock, \"ReLU\", {\n      margin: 6,\n      font: bigfont,\n      editable: true,\n      minSize: new go.Size(40, NaN)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay())); // Data\n\n    myDiagram.nodeTemplateMap.add(\"Data\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center,\n      margin: new go.Margin(0, 0, 0, 0)\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"Circle\", {\n      fill: bluegrad,\n      portId: \"\",\n      fromLinkable: true,\n      cursor: \"pointer\",\n      //fromEndSegmentLength: 40,\n      stroke: \"#74c69d\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"Data\", textStyle(), {\n      stroke: \"#2d6a4f\",\n      minSize: new go.Size(40, NaN)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay())));\n    myDiagram.nodeTemplateMap.add(\"End\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"Circle\", {\n      fill: redgrad,\n      portId: \"\",\n      toLinkable: true,\n      cursor: \"pointer\",\n      fromEndSegmentLength: 40,\n      stroke: \"#df7373\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"End\", textStyle(), {\n      stroke: \"#ad2e24\",\n      minSize: new go.Size(40, NaN)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay())));\n    myDiagram.nodeTemplateMap.add(\"ReLU\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"Ellipse\", {\n      fill: greengrad,\n      portId: \"\",\n      fromLinkable: true,\n      toLinkable: true,\n      cursor: \"pointer\",\n      fromEndSegmentLength: 40,\n      stroke: \"#ffd100\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"ReLU\", textStyle(), {\n      stroke: \"#e2711d\",\n      // locationSpot: go.Spot.Center,\n      //margin: new go.Margin(10, 0, 0, 0),\n      minSize: new go.Size(60, NaN)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay())));\n    var reasonTemplate = $(go.Panel, $(go.Panel, \"Table\", {\n      maxSize: new go.Size(200, 999),\n      margin: new go.Margin(0, 3, 10, 3),\n      defaultAlignment: go.Spot.Center\n    }, $(go.RowColumnDefinition, {\n      column: 2,\n      width: 2\n    }), $(go.TextBlock, \"input = \", {\n      margin: new go.Margin(4, 0, 0, 0),\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      //stroke: \"whitesmoke\",\n      editable: true,\n      font: smallfont,\n      row: 2,\n      column: 0,\n      stroke: \"#3e5c76\"\n    }, new go.Binding(\"text\", \"text0\").makeTwoWay()), $(go.TextBlock, \"value\", {\n      margin: new go.Margin(4, 0, 0, 0),\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      //stroke: \"whitesmoke\",\n      editable: true,\n      stroke: \"#3e5c76\",\n      font: smallfont,\n      row: 2,\n      column: 1\n    }, new go.Binding(\"text\", \"text1\").makeTwoWay()), $(go.TextBlock, \"output = \", {\n      margin: new go.Margin(4, 0, 0, 0),\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      //stroke: \"whitesmoke\",\n      editable: true,\n      font: smallfont,\n      stroke: \"#3e5c76\",\n      row: 3,\n      column: 0\n    }, new go.Binding(\"text\", \"text2\").makeTwoWay()), $(go.TextBlock, \"value\", {\n      margin: new go.Margin(4, 0, 0, 9),\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      //stroke: \"whitesmoke\",\n      editable: true,\n      font: smallfont,\n      stroke: \"#3e5c76\",\n      row: 3,\n      column: 1\n    }, new go.Binding(\"text\", \"text3\").makeTwoWay())) // end Table Panel\n    );\n    myDiagram.nodeTemplateMap.add(\"FC\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"RoundedRectangle\", {\n      fill: yellowgrad,\n      stroke: \"#4ea8de\",\n      strokeWidth: 4,\n      portId: \"\",\n      fromLinkable: true,\n      toLinkable: true,\n      cursor: \"pointer\",\n      toEndSegmentLength: 50,\n      fromEndSegmentLength: 40\n    }), $(go.Panel, \"Vertical\", {\n      defaultAlignment: go.Spot.Center\n    }, $(go.TextBlock, \"FC\", textStyle(), {\n      stroke: \"#3e5c76\",\n      margin: new go.Margin(8, 0, 0, 0),\n      minSize: new go.Size(100, NaN) //maxSize: new go.Size(200, NaN)\n\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()), $(go.Panel, \"Vertical\", {\n      defaultAlignment: go.Spot.TopLeft,\n      itemTemplate: reasonTemplate\n    }, new go.Binding(\"itemArray\", \"reasonsList\").makeTwoWay()))));\n    var linkSelectionAdornmentTemplate = $(go.Adornment, \"Link\", $(go.Shape, // isPanelMain declares that this Shape shares the Link.geometry\n    {\n      isPanelMain: true,\n      fill: null,\n      stroke: \"deepskyblue\",\n      strokeWidth: 2.5\n    }) // use selection object's strokeWidth\n    ); // replace the default Link template in the linkTemplateMap\n\n    myDiagram.linkTemplate = $(go.Link, // the whole link panel\n    {\n      selectable: true,\n      selectionAdornmentTemplate: linkSelectionAdornmentTemplate\n    }, new go.Binding(\"points\").makeTwoWay(), {\n      //curve: go.Link.Bezier,\n      toShortLength: 15\n    }, //new go.Binding(\"curviness\", \"curviness\"),\n    $(go.Shape, // the link shape\n    {\n      stroke: \"#979dac\",\n      strokeWidth: 2.5\n    }), $(go.Shape, // the arrowhead\n    {\n      toArrow: \"kite\",\n      fill: \"#979dac\",\n      stroke: null,\n      scale: 2\n    }));\n    myDiagram.nodeTemplateMap.add(\"RNN\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"RoundedRectangle\", {\n      fill: whitegrad,\n      stroke: \"#CF8BF9\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"RNN\\n(unavailable)\", textStyle(), {\n      margin: 9,\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true,\n      stroke: \"#560788\",\n      font: smallfont\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n    ));\n    myDiagram.nodeTemplateMap.add(\"CNN\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"RoundedRectangle\", {\n      fill: whitegrad,\n      stroke: \"#CF8BF9\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"CNN\\n(unavailable)\", textStyle(), {\n      margin: 9,\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true,\n      stroke: \"#560788\",\n      font: smallfont\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n    ));\n    myDiagram.nodeTemplateMap.add(\"LSTM\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"RoundedRectangle\", {\n      fill: whitegrad,\n      stroke: \"#CF8BF9\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"LSTM\\n(unavailable)\", textStyle(), {\n      margin: 9,\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true,\n      stroke: \"#560788\",\n      font: smallfont\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n    ));\n    myDiagram.nodeTemplateMap.add(\"Softmax\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"RoundedRectangle\", {\n      fill: whitegrad,\n      stroke: \"#CF8BF9\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"Softmax\\n(unavailable)\", textStyle(), {\n      margin: 9,\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true,\n      stroke: \"#560788\",\n      font: smallfont\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n    ));\n    myDiagram.nodeTemplateMap.add(\"Maximum Polling\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"RoundedRectangle\", {\n      fill: whitegrad,\n      stroke: \"#CF8BF9\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"Maximum\\nPolling\\n(unavailable)\", textStyle(), {\n      margin: 9,\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true,\n      stroke: \"#560788\",\n      font: smallfont\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n    ));\n    var palette = $(go.Palette, \"myPaletteDiv\", // create a new Palette in the HTML DIV element\n    {\n      // share the template map with the Palette\n      nodeTemplateMap: myDiagram.nodeTemplateMap,\n      autoScale: go.Diagram.Uniform // everything always fits in viewport\n\n    });\n    palette.model.nodeDataArray = [{\n      category: \"Data\"\n    }, {\n      category: \"ReLU\"\n    }, {\n      category: \"FC\",\n      reasonsList: [{}]\n    }, {\n      category: \"End\"\n    }, {\n      category: \"CNN\"\n    }, {\n      category: \"RNN\"\n    }, {\n      category: \"LSTM\"\n    }, {\n      category: \"Softmax\"\n    }, {\n      category: \"Maximum Polling\"\n    }];\n    window.myDiagram = myDiagram;\n  },\n  computed: {\n    output: function output() {\n      return marked(this.input);\n    }\n  },\n  methods: {\n    layout: function layout() {\n      myDiagram.layoutDiagram(true);\n    },\n    save: function save() {\n      document.getElementById(\"mySavedModel\").value = myDiagram.model.toJson();\n      myDiagram.isModified = false;\n    },\n    load: function load() {\n      myDiagram.model = go.Model.fromJson(document.getElementById(\"mySavedModel\").value);\n    },\n    compile: function compile(event) {\n      event.preventDefault();\n      this.canvasData.file = myDiagram.model.toJson();\n      console.log(myDiagram.model.toJson());\n      console.log(this.canvasData.file);\n      axios({\n        method: \"post\",\n        url: \"/canvas/\",\n        data: {\n          file: this.canvasData.file\n        }\n      });\n    },\n    // code\n    update: debounce(function (e) {\n      this.input = e.target.value;\n    }, 100)\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","go","marked","debounce","name","data","canvasData","file","code","input","mounted","$","GraphObject","make","yellowgrad","Brush","greengrad","bluegrad","redgrad","whitegrad","bigfont","smallfont","textStyle","margin","wrap","TextBlock","WrapFit","textAlign","editable","font","myDiagram","Diagram","initialAutoScale","Uniform","LinkingTool","ForwardsOnly","layout","LayeredDigraphLayout","isInitial","isOngoing","layerSpacing","nodeSelectionAdornmentTemplate","Adornment","Shape","fill","stroke","strokeWidth","strokeDashArray","Placeholder","nodeTemplate","Node","locationSpot","Spot","Center","Binding","Point","parse","makeTwoWay","stringify","selectable","selectionAdornmentTemplate","portId","fromLinkable","toLinkable","cursor","toEndSegmentLength","fromEndSegmentLength","minSize","Size","NaN","nodeTemplateMap","add","Margin","reasonTemplate","Panel","maxSize","defaultAlignment","RowColumnDefinition","column","width","row","TopLeft","itemTemplate","linkSelectionAdornmentTemplate","isPanelMain","linkTemplate","Link","toShortLength","toArrow","scale","palette","Palette","autoScale","model","nodeDataArray","category","reasonsList","window","computed","output","methods","layoutDiagram","save","document","getElementById","value","toJson","isModified","load","Model","fromJson","compile","event","preventDefault","console","log","method","url","update","e","target"],"sourceRoot":"","sources":["/home/jerry/Comp208-Neural-Lego/frontend/src/views/CanvasView.vue"],"sourcesContent":["<template>\n  <div id=\"page-top\" class=\"body\">\n    <!-- Page Wrapper -->\n    <div id=\"wrapper\">\n      <!-- Sidebar -->\n      <ul\n        class=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\"\n        id=\"accordionSidebar\"\n      >\n        <!-- Sidebar - Brand -->\n\n        <a\n          class=\"sidebar-brand d-flex align-items-center justify-content-center\"\n        >\n          <div class=\"sidebar-brand-text mx-3\">NEURAL LEGO</div>\n        </a>\n\n        <!-- Divider -->\n        <hr class=\"sidebar-divider my-0\" />\n\n        <!-- Nav Item - Dashboard -->\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"/profile\">\n            <i class=\"fas fa-fw fa-user\"></i>\n            <span>User</span></a\n          >\n        </li>\n\n        <!-- Divider -->\n        <hr class=\"sidebar-divider my-0\" />\n\n        <!-- Nav Item - Dashboard -->\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"/project\">\n            <i class=\"fas fa-fw fa-folder\"></i>\n            <span>Project</span></a\n          >\n        </li>\n\n        <!-- Divider -->\n        <hr class=\"sidebar-divider my-0\" />\n\n        <!-- Nav Item - Dashboard -->\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"/template\">\n            <i class=\"fas fa-fw fa-table\"></i>\n            <span>Template</span></a\n          >\n        </li>\n\n        <hr class=\"sidebar-divider my-0\" />\n\n        <!-- Nav Item - Dashboard -->\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" href=\"/canvas\">\n            <i class=\"fas fa-fw fa-palette\"></i>\n            <span>Canvas</span></a\n          >\n        </li>\n\n        <hr class=\"sidebar-divider my-0\" />\n\n        <!-- Nav Item - Dashboard -->\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"/register\">\n            <i class=\"fas fa-fw fa-arrow-circle-left\"></i>\n            <span>Log out</span></a\n          >\n        </li>\n        <!-- Divider -->\n        <hr class=\"sidebar-divider d-none d-md-block\" />\n      </ul>\n      <!-- End of Sidebar -->\n\n      <!-- Content Wrapper -->\n      <div id=\"content-wrapper\" class=\"d-flex flex-column\">\n        <!-- Main Content -->\n        <div id=\"content\">\n          <!-- Topbar -->\n          <nav\n            class=\"\n              navbar navbar-expand navbar-light\n              bg-white\n              topbar\n              mb-4\n              static-top\n              shadow\n            \"\n          >\n            <!-- Sidebar Toggle (Topbar) -->\n            <button\n              id=\"sidebarToggleTop\"\n              class=\"btn btn-link d-md-none rounded-circle mr-3\"\n            >\n              <i class=\"fa fa-bars\"></i>\n            </button>\n\n            <!-- Topbar Search -->\n            <form\n              class=\"\n                d-none d-sm-inline-block\n                form-inline\n                mr-auto\n                ml-md-3\n                my-2 my-md-0\n                mw-100\n                navbar-search\n              \"\n            >\n              <div class=\"input-group\">\n                <input\n                  type=\"text\"\n                  class=\"form-control bg-light border-0 small\"\n                  placeholder=\"Search for...\"\n                  aria-label=\"Search\"\n                  aria-describedby=\"basic-addon2\"\n                />\n                <div class=\"input-group-append\">\n                  <button class=\"btn btn-primary\" type=\"button\">\n                    <i class=\"fas fa-search fa-sm\"></i>\n                  </button>\n                </div>\n              </div>\n            </form>\n\n            <!-- Topbar Navbar -->\n            <ul class=\"navbar-nav ml-auto\">\n              <!-- Nav Item - Search Dropdown (Visible Only XS) -->\n              <li class=\"nav-item dropdown no-arrow d-sm-none\">\n                <a\n                  class=\"nav-link dropdown-toggle\"\n                  href=\"#\"\n                  id=\"searchDropdown\"\n                  role=\"button\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  <i class=\"fas fa-search fa-fw\"></i>\n                </a>\n                <!-- Dropdown - Messages -->\n                <div\n                  class=\"\n                    dropdown-menu dropdown-menu-right\n                    p-3\n                    shadow\n                    animated--grow-in\n                  \"\n                  aria-labelledby=\"searchDropdown\"\n                >\n                  <form class=\"form-inline mr-auto w-100 navbar-search\">\n                    <div class=\"input-group\">\n                      <input\n                        type=\"text\"\n                        class=\"form-control bg-light border-0 small\"\n                        placeholder=\"Search for...\"\n                        aria-label=\"Search\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                      <div class=\"input-group-append\">\n                        <button class=\"btn btn-primary\" type=\"button\">\n                          <i class=\"fas fa-search fa-sm\"></i>\n                        </button>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </li>\n            </ul>\n          </nav>\n          <!-- End of Topbar -->\n\n          <div id=\"allSampleContent\" class=\"p-4 w-full\">\n            <div id=\"sample\">\n              <div\n                style=\"\n                  width: 100%;\n                  margin-bottom: 10px;\n                  display: flex;\n                  justify-content: space-between;\n                \"\n              >\n                <!-- End of Sidebar -->\n                <div\n                  id=\"myPaletteDiv\"\n                  style=\"\n                    width: 150px;\n                    margin-right: 10px;\n                    border: solid 4px #82929b;\n                  \"\n                ></div>\n                <div\n                  id=\"myDiagramDiv\"\n                  style=\"\n                    flex-grow: 3;\n                    margin-right: 10px;\n                    height: 600px;\n                    border: solid 4px #82929b;\n                  \"\n                ></div>\n                <div\n                  id=\"myDiagramDiv\"\n                  style=\"flex-grow: 2; height: 600px; border: solid 4px #82929b\"\n                >\n                  <highlight-code lang=\"javascript\">\n                    let str = 'Hello, World!'; console.log(str);\n                  </highlight-code>\n                </div>\n              </div>\n\n              <button class=\"btn btn-primary\" type=\"submit\" @click=\"save()\">\n                Save\n              </button>\n              <button class=\"btn btn-primary\" type=\"submit\" @click=\"load()\">\n                Load\n              </button>\n              <button class=\"btn btn-primary\" type=\"submit\" @click=\"layout()\">\n                Layout\n              </button>\n\n              <form style=\"display: inline-block\" method=\"POST\">\n                <input\n                  v-model=\"canvasData.file\"\n                  type=\"hidden\"\n                  class=\"form-control\"\n                  id=\"file\"\n                  name=\"file\"\n                />\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary\"\n                  @click=\"compile($event)\"\n                >\n                  Compile\n                </button>\n              </form>\n\n              <a href=\"#\"><button class=\"btn btn-primary\">Train</button></a>\n              <br />\n              <textarea id=\"mySavedModel\" style=\"width: 100%; height: 300px\">\n{ \"class\": \"GraphLinksModel\", \n\"nodeDataArray\": [ {\"category\":\"Data\", \"key\":-1, \"loc\":\"-70.5 -90.19999980926514\"} ], \n\"linkDataArray\": []}\n  </textarea\n              >\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- End of Content Wrapper -->\n    </div>\n    <!-- End of Page Wrapper -->\n\n    <!-- Logout Modal-->\n    <div\n      class=\"modal fade\"\n      id=\"logoutModal\"\n      tabindex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"exampleModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Ready to Leave?</h5>\n            <button\n              class=\"close\"\n              type=\"button\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">×</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            Select \"Logout\" below if you are ready to end your current session.\n          </div>\n          <div class=\"modal-footer\">\n            <button\n              class=\"btn btn-secondary\"\n              type=\"button\"\n              data-dismiss=\"modal\"\n            >\n              Cancel\n            </button>\n            <a class=\"btn btn-primary\" href=\"/login\">Logout</a>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"editor\">\n      <textarea class=\"input\" :value=\"input\" @input=\"update\"></textarea>\n      <div class=\"output\" v-html=\"output\"></div>\n    </div>\n  </div>\n</template>\n\n\n\n<script>\nimport axios from \"axios\";\nimport * as go from \"/public/go.js\";\n\nimport { marked } from \"marked\";\nimport { debounce } from \"lodash-es\";\n\nexport default {\n  name: \"CanvasView\",\n  data() {\n    return {\n      canvasData: {\n        file: {},\n        code: {},\n      },\n      input: \"python import numpy as np\",\n    };\n  },\n  mounted() {\n    const $ = go.GraphObject.make; // for conciseness in defining templates\n\n    var yellowgrad = $(go.Brush, \"Linear\", {\n      0: \"#bde0fe\",\n      1: \"#bde0fe\",\n    });\n    var greengrad = $(go.Brush, \"Linear\", {\n      0: \"#fdffb6\",\n      1: \"#fdffb6\",\n    });\n    var bluegrad = $(go.Brush, \"Linear\", {\n      0: \"#caffbf\",\n      1: \"#caffbf\",\n    });\n    var redgrad = $(go.Brush, \"Linear\", {\n      0: \"#ffadad\",\n      1: \"#ffadad\",\n    });\n    var whitegrad = $(go.Brush, \"Linear\", {\n      0: \"#E7C5FC\",\n      1: \"#E7C5FC\",\n    });\n    var bigfont = \"bold 15pt Helvetica, Arial, sans-serif\";\n    var smallfont = \"bold 13pt Helvetica, Arial, sans-serif\";\n\n    // Common text styling\n    function textStyle() {\n      return {\n        margin: 6,\n        wrap: go.TextBlock.WrapFit,\n        textAlign: \"center\",\n        editable: true,\n        font: bigfont,\n      };\n    }\n\n    const myDiagram = $(go.Diagram, \"myDiagramDiv\", {\n      initialAutoScale: go.Diagram.Uniform,\n      \"linkingTool.direction\": go.LinkingTool.ForwardsOnly,\n      layout: $(go.LayeredDigraphLayout, {\n        isInitial: false,\n        isOngoing: false,\n        layerSpacing: 50,\n      }),\n      \"undoManager.isEnabled\": true,\n    });\n\n    var nodeSelectionAdornmentTemplate = $(\n      go.Adornment,\n      \"Auto\",\n      $(go.Shape, {\n        fill: null,\n        stroke: \"#979dac\",\n        strokeWidth: 2,\n        strokeDashArray: [4, 2],\n      }),\n      $(go.Placeholder)\n    );\n\n    // define the Node template\n    myDiagram.nodeTemplate = $(\n      go.Node,\n      \"Auto\",\n      {\n        locationSpot: go.Spot.Center,\n      },\n      new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n        go.Point.stringify\n      ),\n      {\n        selectable: true,\n        selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\n      },\n      // define the node's outer shape, which will surround the TextBlock\n      $(go.Shape, \"Rectangle\", {\n        fill: yellowgrad,\n        stroke: null,\n        portId: \"\",\n        fromLinkable: true,\n        toLinkable: true,\n        cursor: \"pointer\",\n        toEndSegmentLength: 50,\n        fromEndSegmentLength: 50,\n      }),\n      $(\n        go.TextBlock,\n        \"ReLU\",\n        {\n          margin: 6,\n          font: bigfont,\n          editable: true,\n          minSize: new go.Size(40, NaN),\n        },\n        new go.Binding(\"text\", \"text\").makeTwoWay()\n      )\n    );\n    // Data\n    myDiagram.nodeTemplateMap.add(\n      \"Data\",\n      $(\n        go.Node,\n        \"Auto\",\n        {\n          locationSpot: go.Spot.Center,\n          margin: new go.Margin(0, 0, 0, 0),\n        },\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n          go.Point.stringify\n        ),\n        {\n          selectable: true,\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\n        },\n        $(go.Shape, \"Circle\", {\n          fill: bluegrad,\n          portId: \"\",\n          fromLinkable: true,\n          cursor: \"pointer\",\n          //fromEndSegmentLength: 40,\n          stroke: \"#74c69d\",\n\n          strokeWidth: 4,\n        }),\n        $(\n          go.TextBlock,\n          \"Data\",\n          textStyle(),\n          {\n            stroke: \"#2d6a4f\",\n            minSize: new go.Size(40, NaN),\n          },\n          new go.Binding(\"text\", \"text\").makeTwoWay()\n        )\n      )\n    );\n\n    myDiagram.nodeTemplateMap.add(\n      \"End\",\n      $(\n        go.Node,\n        \"Auto\",\n        {\n          locationSpot: go.Spot.Center,\n        },\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n          go.Point.stringify\n        ),\n        {\n          selectable: true,\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\n        },\n        $(go.Shape, \"Circle\", {\n          fill: redgrad,\n          portId: \"\",\n          toLinkable: true,\n          cursor: \"pointer\",\n          fromEndSegmentLength: 40,\n          stroke: \"#df7373\",\n          strokeWidth: 4,\n        }),\n        $(\n          go.TextBlock,\n          \"End\",\n          textStyle(),\n          {\n            stroke: \"#ad2e24\",\n            minSize: new go.Size(40, NaN),\n          },\n          new go.Binding(\"text\", \"text\").makeTwoWay()\n        )\n      )\n    );\n\n    myDiagram.nodeTemplateMap.add(\n      \"ReLU\",\n      $(\n        go.Node,\n        \"Auto\",\n        {\n          locationSpot: go.Spot.Center,\n        },\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n          go.Point.stringify\n        ),\n        {\n          selectable: true,\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\n        },\n        $(go.Shape, \"Ellipse\", {\n          fill: greengrad,\n          portId: \"\",\n          fromLinkable: true,\n          toLinkable: true,\n          cursor: \"pointer\",\n          fromEndSegmentLength: 40,\n          stroke: \"#ffd100\",\n          strokeWidth: 4,\n        }),\n        $(\n          go.TextBlock,\n          \"ReLU\",\n          textStyle(),\n          {\n            stroke: \"#e2711d\",\n            // locationSpot: go.Spot.Center,\n            //margin: new go.Margin(10, 0, 0, 0),\n            minSize: new go.Size(60, NaN),\n          },\n          new go.Binding(\"text\", \"text\").makeTwoWay()\n        )\n      )\n    );\n\n    var reasonTemplate = $(\n      go.Panel,\n      $(\n        go.Panel,\n        \"Table\",\n        {\n          maxSize: new go.Size(200, 999),\n          margin: new go.Margin(0, 3, 10, 3),\n          defaultAlignment: go.Spot.Center,\n        },\n        $(go.RowColumnDefinition, {\n          column: 2,\n          width: 2,\n        }),\n        $(\n          go.TextBlock,\n          \"input = \",\n          {\n            margin: new go.Margin(4, 0, 0, 0),\n            maxSize: new go.Size(200, NaN),\n            wrap: go.TextBlock.WrapFit,\n            //stroke: \"whitesmoke\",\n            editable: true,\n            font: smallfont,\n            row: 2,\n            column: 0,\n            stroke: \"#3e5c76\",\n          },\n          new go.Binding(\"text\", \"text0\").makeTwoWay()\n        ),\n\n        $(\n          go.TextBlock,\n          \"value\",\n          {\n            margin: new go.Margin(4, 0, 0, 0),\n            maxSize: new go.Size(200, NaN),\n            wrap: go.TextBlock.WrapFit,\n            //stroke: \"whitesmoke\",\n            editable: true,\n            stroke: \"#3e5c76\",\n            font: smallfont,\n            row: 2,\n            column: 1,\n          },\n          new go.Binding(\"text\", \"text1\").makeTwoWay()\n        ),\n\n        $(\n          go.TextBlock,\n          \"output = \",\n          {\n            margin: new go.Margin(4, 0, 0, 0),\n            maxSize: new go.Size(200, NaN),\n            wrap: go.TextBlock.WrapFit,\n            //stroke: \"whitesmoke\",\n            editable: true,\n            font: smallfont,\n            stroke: \"#3e5c76\",\n            row: 3,\n            column: 0,\n          },\n          new go.Binding(\"text\", \"text2\").makeTwoWay()\n        ),\n\n        $(\n          go.TextBlock,\n          \"value\",\n          {\n            margin: new go.Margin(4, 0, 0, 9),\n            maxSize: new go.Size(200, NaN),\n            wrap: go.TextBlock.WrapFit,\n            //stroke: \"whitesmoke\",\n            editable: true,\n            font: smallfont,\n            stroke: \"#3e5c76\",\n            row: 3,\n            column: 1,\n          },\n          new go.Binding(\"text\", \"text3\").makeTwoWay()\n        )\n      ) // end Table Panel\n    );\n\n    myDiagram.nodeTemplateMap.add(\n      \"FC\",\n      $(\n        go.Node,\n        \"Auto\",\n        {\n          locationSpot: go.Spot.Center,\n        },\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n          go.Point.stringify\n        ),\n        {\n          selectable: true,\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\n        },\n        $(go.Shape, \"RoundedRectangle\", {\n          fill: yellowgrad,\n          stroke: \"#4ea8de\",\n          strokeWidth: 4,\n          portId: \"\",\n          fromLinkable: true,\n          toLinkable: true,\n          cursor: \"pointer\",\n          toEndSegmentLength: 50,\n          fromEndSegmentLength: 40,\n        }),\n        $(\n          go.Panel,\n          \"Vertical\",\n          {\n            defaultAlignment: go.Spot.Center,\n          },\n\n          $(\n            go.TextBlock,\n            \"FC\",\n            textStyle(),\n            {\n              stroke: \"#3e5c76\",\n              margin: new go.Margin(8, 0, 0, 0),\n              minSize: new go.Size(100, NaN),\n              //maxSize: new go.Size(200, NaN)\n            },\n            new go.Binding(\"text\", \"text\").makeTwoWay()\n          ),\n\n          $(\n            go.Panel,\n            \"Vertical\",\n            {\n              defaultAlignment: go.Spot.TopLeft,\n              itemTemplate: reasonTemplate,\n            },\n            new go.Binding(\"itemArray\", \"reasonsList\").makeTwoWay()\n          )\n        )\n      )\n    );\n\n    var linkSelectionAdornmentTemplate = $(\n      go.Adornment,\n      \"Link\",\n      $(\n        go.Shape,\n        // isPanelMain declares that this Shape shares the Link.geometry\n        {\n          isPanelMain: true,\n          fill: null,\n          stroke: \"deepskyblue\",\n          strokeWidth: 2.5,\n        }\n      ) // use selection object's strokeWidth\n    );\n    // replace the default Link template in the linkTemplateMap\n    myDiagram.linkTemplate = $(\n      go.Link, // the whole link panel\n      {\n        selectable: true,\n        selectionAdornmentTemplate: linkSelectionAdornmentTemplate,\n      },\n      new go.Binding(\"points\").makeTwoWay(),\n      {\n        //curve: go.Link.Bezier,\n        toShortLength: 15,\n      },\n      //new go.Binding(\"curviness\", \"curviness\"),\n      $(\n        go.Shape, // the link shape\n        {\n          stroke: \"#979dac\",\n          strokeWidth: 2.5,\n        }\n      ),\n      $(\n        go.Shape, // the arrowhead\n        {\n          toArrow: \"kite\",\n          fill: \"#979dac\",\n          stroke: null,\n          scale: 2,\n        }\n      )\n    );\n\n    myDiagram.nodeTemplateMap.add(\n      \"RNN\",\n      $(\n        go.Node,\n        \"Auto\",\n        {\n          locationSpot: go.Spot.Center,\n        },\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n          go.Point.stringify\n        ),\n        {\n          selectable: true,\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\n        },\n        $(go.Shape, \"RoundedRectangle\", {\n          fill: whitegrad,\n          stroke: \"#CF8BF9\",\n          strokeWidth: 4,\n        }),\n        $(\n          go.TextBlock,\n          \"RNN\\n(unavailable)\",\n          textStyle(),\n          {\n            margin: 9,\n            maxSize: new go.Size(200, NaN),\n            wrap: go.TextBlock.WrapFit,\n            editable: true,\n            stroke: \"#560788\",\n            font: smallfont,\n          },\n          new go.Binding(\"text\", \"text\").makeTwoWay()\n        )\n        // no ports, because no links are allowed to connect with a comment\n      )\n    );\n\n    myDiagram.nodeTemplateMap.add(\n      \"CNN\",\n      $(\n        go.Node,\n        \"Auto\",\n        {\n          locationSpot: go.Spot.Center,\n        },\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n          go.Point.stringify\n        ),\n        {\n          selectable: true,\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\n        },\n        $(go.Shape, \"RoundedRectangle\", {\n          fill: whitegrad,\n          stroke: \"#CF8BF9\",\n          strokeWidth: 4,\n        }),\n        $(\n          go.TextBlock,\n          \"CNN\\n(unavailable)\",\n          textStyle(),\n          {\n            margin: 9,\n            maxSize: new go.Size(200, NaN),\n            wrap: go.TextBlock.WrapFit,\n            editable: true,\n            stroke: \"#560788\",\n            font: smallfont,\n          },\n          new go.Binding(\"text\", \"text\").makeTwoWay()\n        )\n        // no ports, because no links are allowed to connect with a comment\n      )\n    );\n\n    myDiagram.nodeTemplateMap.add(\n      \"LSTM\",\n      $(\n        go.Node,\n        \"Auto\",\n        {\n          locationSpot: go.Spot.Center,\n        },\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n          go.Point.stringify\n        ),\n        {\n          selectable: true,\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\n        },\n        $(go.Shape, \"RoundedRectangle\", {\n          fill: whitegrad,\n          stroke: \"#CF8BF9\",\n          strokeWidth: 4,\n        }),\n        $(\n          go.TextBlock,\n          \"LSTM\\n(unavailable)\",\n          textStyle(),\n          {\n            margin: 9,\n            maxSize: new go.Size(200, NaN),\n            wrap: go.TextBlock.WrapFit,\n            editable: true,\n            stroke: \"#560788\",\n            font: smallfont,\n          },\n          new go.Binding(\"text\", \"text\").makeTwoWay()\n        )\n        // no ports, because no links are allowed to connect with a comment\n      )\n    );\n\n    myDiagram.nodeTemplateMap.add(\n      \"Softmax\",\n      $(\n        go.Node,\n        \"Auto\",\n        {\n          locationSpot: go.Spot.Center,\n        },\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n          go.Point.stringify\n        ),\n        {\n          selectable: true,\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\n        },\n        $(go.Shape, \"RoundedRectangle\", {\n          fill: whitegrad,\n          stroke: \"#CF8BF9\",\n          strokeWidth: 4,\n        }),\n        $(\n          go.TextBlock,\n          \"Softmax\\n(unavailable)\",\n          textStyle(),\n          {\n            margin: 9,\n            maxSize: new go.Size(200, NaN),\n            wrap: go.TextBlock.WrapFit,\n            editable: true,\n            stroke: \"#560788\",\n            font: smallfont,\n          },\n          new go.Binding(\"text\", \"text\").makeTwoWay()\n        )\n        // no ports, because no links are allowed to connect with a comment\n      )\n    );\n\n    myDiagram.nodeTemplateMap.add(\n      \"Maximum Polling\",\n      $(\n        go.Node,\n        \"Auto\",\n        {\n          locationSpot: go.Spot.Center,\n        },\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n          go.Point.stringify\n        ),\n        {\n          selectable: true,\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\n        },\n        $(go.Shape, \"RoundedRectangle\", {\n          fill: whitegrad,\n          stroke: \"#CF8BF9\",\n          strokeWidth: 4,\n        }),\n        $(\n          go.TextBlock,\n          \"Maximum\\nPolling\\n(unavailable)\",\n          textStyle(),\n          {\n            margin: 9,\n            maxSize: new go.Size(200, NaN),\n            wrap: go.TextBlock.WrapFit,\n            editable: true,\n            stroke: \"#560788\",\n            font: smallfont,\n          },\n          new go.Binding(\"text\", \"text\").makeTwoWay()\n        )\n        // no ports, because no links are allowed to connect with a comment\n      )\n    );\n\n    var palette = $(\n      go.Palette,\n      \"myPaletteDiv\", // create a new Palette in the HTML DIV element\n      {\n        // share the template map with the Palette\n        nodeTemplateMap: myDiagram.nodeTemplateMap,\n        autoScale: go.Diagram.Uniform, // everything always fits in viewport\n      }\n    );\n\n    palette.model.nodeDataArray = [\n      {\n        category: \"Data\",\n      },\n      {\n        category: \"ReLU\",\n      },\n      {\n        category: \"FC\",\n        reasonsList: [{}],\n      },\n      {\n        category: \"End\",\n      },\n      {\n        category: \"CNN\",\n      },\n      {\n        category: \"RNN\",\n      },\n      {\n        category: \"LSTM\",\n      },\n      {\n        category: \"Softmax\",\n      },\n      {\n        category: \"Maximum Polling\",\n      },\n    ];\n\n    window.myDiagram = myDiagram;\n  },\n\n  computed: {\n    output() {\n      return marked(this.input);\n    },\n  },\n\n  methods: {\n    layout() {\n      myDiagram.layoutDiagram(true);\n    },\n    save() {\n      document.getElementById(\"mySavedModel\").value = myDiagram.model.toJson();\n      myDiagram.isModified = false;\n    },\n    load() {\n      myDiagram.model = go.Model.fromJson(\n        document.getElementById(\"mySavedModel\").value\n      );\n    },\n    compile(event) {\n      event.preventDefault();\n      this.canvasData.file = myDiagram.model.toJson();\n      console.log(myDiagram.model.toJson());\n      console.log(this.canvasData.file);\n\n      axios({\n        method: \"post\",\n        url: \"/canvas/\",\n        data: {\n          file: this.canvasData.file,\n        },\n      });\n    },\n\n    // code\n    update: debounce(function (e) {\n      this.input = e.target.value;\n    }, 100),\n  },\n};\n</script>\n\n\n\n<style scoped>\n.body {\n  padding: 0;\n  margin: 0;\n  height: 100%;\n  width: 100%;\n  overflow: visible;\n}\n</style>\n<style scoped src=\"../../new_pages/vendor/fontawesome-free/css/all.min.css\"></style>\n<style scoped src=\"../../new_pages/css/sb-admin-2.min.css\"></style>"]},"metadata":{},"sourceType":"module"}