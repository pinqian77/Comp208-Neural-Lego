{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-60569357\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = {\n  id: \"page-top\",\n  \"class\": \"body\"\n};\nvar _hoisted_2 = {\n  id: \"wrapper\"\n};\n\nvar _hoisted_3 = /*#__PURE__*/_createStaticVNode(\"<ul class=\\\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\\\" id=\\\"accordionSidebar\\\" data-v-60569357><!-- Sidebar - Brand --><a class=\\\"sidebar-brand d-flex align-items-center justify-content-center\\\" data-v-60569357><!-- &lt;div class=&quot;sidebar-brand-icon rotate-n-15&quot;&gt;\\r\\n                    &lt;i class=&quot;fas fa-laugh-wink&quot;&gt;&lt;/i&gt;\\r\\n                &lt;/div&gt; --><div class=\\\"sidebar-brand-text mx-3\\\" data-v-60569357>NEURAL LEGO</div></a><!-- Divider --><hr class=\\\"sidebar-divider my-0\\\" data-v-60569357><!-- Nav Item - Dashboard --><li class=\\\"nav-item\\\" data-v-60569357><a class=\\\"nav-link\\\" href=\\\"/profile\\\" data-v-60569357><i class=\\\"fas fa-fw fa-user\\\" data-v-60569357></i><span data-v-60569357>User</span></a></li><!-- Divider --><hr class=\\\"sidebar-divider my-0\\\" data-v-60569357><!-- Nav Item - Dashboard --><li class=\\\"nav-item\\\" data-v-60569357><a class=\\\"nav-link\\\" href=\\\"/project\\\" data-v-60569357><i class=\\\"fas fa-fw fa-folder\\\" data-v-60569357></i><span data-v-60569357>Project</span></a></li><!-- Divider --><hr class=\\\"sidebar-divider my-0\\\" data-v-60569357><!-- Nav Item - Dashboard --><li class=\\\"nav-item\\\" data-v-60569357><a class=\\\"nav-link\\\" href=\\\"/template\\\" data-v-60569357><i class=\\\"fas fa-fw fa-table\\\" data-v-60569357></i><span data-v-60569357>Template</span></a></li><hr class=\\\"sidebar-divider my-0\\\" data-v-60569357><!-- Nav Item - Dashboard --><li class=\\\"nav-item active\\\" data-v-60569357><a class=\\\"nav-link\\\" href=\\\"draggable.html\\\" data-v-60569357><i class=\\\"fas fa-fw fa-palette\\\" data-v-60569357></i><span data-v-60569357>Canvas</span></a></li><hr class=\\\"sidebar-divider my-0\\\" data-v-60569357><!-- Nav Item - Dashboard --><li class=\\\"nav-item\\\" data-v-60569357><a class=\\\"nav-link\\\" href=\\\"home.html\\\" data-v-60569357><i class=\\\"fas fa-fw fa-arrow-circle-left\\\" data-v-60569357></i><span data-v-60569357>Log out</span></a></li><!-- Divider --><hr class=\\\"sidebar-divider d-none d-md-block\\\" data-v-60569357></ul>\", 1);\n\nvar _hoisted_4 = {\n  id: \"content-wrapper\",\n  \"class\": \"d-flex flex-column\"\n};\nvar _hoisted_5 = {\n  id: \"content\"\n};\n\nvar _hoisted_6 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"nav\", {\n    \"class\": \"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\"\n  }, [/*#__PURE__*/_createCommentVNode(\" Sidebar Toggle (Topbar) \"), /*#__PURE__*/_createElementVNode(\"button\", {\n    id: \"sidebarToggleTop\",\n    \"class\": \"btn btn-link d-md-none rounded-circle mr-3\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fa fa-bars\"\n  })]), /*#__PURE__*/_createCommentVNode(\" Topbar Search \"), /*#__PURE__*/_createElementVNode(\"form\", {\n    \"class\": \"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"input-group\"\n  }, [/*#__PURE__*/_createElementVNode(\"input\", {\n    type: \"text\",\n    \"class\": \"form-control bg-light border-0 small\",\n    placeholder: \"Search for...\",\n    \"aria-label\": \"Search\",\n    \"aria-describedby\": \"basic-addon2\"\n  }), /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"input-group-append\"\n  }, [/*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\",\n    type: \"button\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fas fa-search fa-sm\"\n  })])])])]), /*#__PURE__*/_createCommentVNode(\" Topbar Navbar \"), /*#__PURE__*/_createElementVNode(\"ul\", {\n    \"class\": \"navbar-nav ml-auto\"\n  }, [/*#__PURE__*/_createCommentVNode(\" Nav Item - Search Dropdown (Visible Only XS) \"), /*#__PURE__*/_createElementVNode(\"li\", {\n    \"class\": \"nav-item dropdown no-arrow d-sm-none\"\n  }, [/*#__PURE__*/_createElementVNode(\"a\", {\n    \"class\": \"nav-link dropdown-toggle\",\n    href: \"#\",\n    id: \"searchDropdown\",\n    role: \"button\",\n    \"data-toggle\": \"dropdown\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": \"false\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fas fa-search fa-fw\"\n  })]), /*#__PURE__*/_createCommentVNode(\" Dropdown - Messages \"), /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\",\n    \"aria-labelledby\": \"searchDropdown\"\n  }, [/*#__PURE__*/_createElementVNode(\"form\", {\n    \"class\": \"form-inline mr-auto w-100 navbar-search\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"input-group\"\n  }, [/*#__PURE__*/_createElementVNode(\"input\", {\n    type: \"text\",\n    \"class\": \"form-control bg-light border-0 small\",\n    placeholder: \"Search for...\",\n    \"aria-label\": \"Search\",\n    \"aria-describedby\": \"basic-addon2\"\n  }), /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"input-group-append\"\n  }, [/*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\",\n    type: \"button\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fas fa-search fa-sm\"\n  })])])])])])])])], -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_7 = {\n  id: \"allSampleContent\",\n  \"class\": \"p-4 w-full\"\n};\nvar _hoisted_8 = {\n  id: \"sample\"\n};\n\nvar _hoisted_9 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    style: {\n      \"width\": \"100%\",\n      \"margin-bottom\": \"10px\",\n      \"display\": \"flex\"\n    }\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"myPaletteDiv\",\n    style: {\n      \"width\": \"150px\",\n      \"margin-right\": \"10px\",\n      \"border\": \"solid 4px #82929b\"\n    }\n  }), /*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"myDiagramDiv_1\",\n    style: {\n      \"width\": \"650px\",\n      \"margin-right\": \"10px\",\n      \"height\": \"600px\",\n      \"border\": \"solid 4px #82929b\"\n    }\n  }), /*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"myDiagramDiv_2\",\n    style: {\n      \"flex-grow\": \"1\",\n      \"height\": \"600px\",\n      \"border\": \"solid 4px #82929b\"\n    }\n  })], -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_10 = {\n  style: {\n    \"display\": \"inline-block\"\n  },\n  method: \"POST\"\n};\n\nvar _hoisted_11 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"input\", {\n    type: \"hidden\",\n    \"class\": \"form-control\",\n    id: \"file\",\n    name: \"file\"\n  }, null, -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_12 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_13 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_14 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"textarea\", {\n    id: \"mySavedModel\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"300px\"\n    }\n  }, \"\\r\\n{ \\\"class\\\": \\\"GraphLinksModel\\\",\\r\\n\\\"copiesArrays\\\": true,\\r\\n\\\"copiesArrayObjects\\\": true,\\r\\n\\\"nodeDataArray\\\": [ {\\\"category\\\":\\\"Data\\\", \\\"reasonsList\\\":[ {} ], \\\"key\\\":-2, \\\"loc\\\":\\\"-99.10220015417542 -20.151221229488044\\\"} ],\\r\\n\\\"linkDataArray\\\": []}\\r\\n            \", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_15 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"modal fade\",\n    id: \"logoutModal\",\n    tabindex: \"-1\",\n    role: \"dialog\",\n    \"aria-labelledby\": \"exampleModalLabel\",\n    \"aria-hidden\": \"true\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"modal-dialog\",\n    role: \"document\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"modal-content\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"modal-header\"\n  }, [/*#__PURE__*/_createElementVNode(\"h5\", {\n    \"class\": \"modal-title\",\n    id: \"exampleModalLabel\"\n  }, \"Ready to Leave?\"), /*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"close\",\n    type: \"button\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\"\n  }, [/*#__PURE__*/_createElementVNode(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"Ã—\")])]), /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"modal-body\"\n  }, \" Select \\\"Logout\\\" below if you are ready to end your current session. \"), /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"modal-footer\"\n  }, [/*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"btn btn-secondary\",\n    type: \"button\",\n    \"data-dismiss\": \"modal\"\n  }, \" Cancel \"), /*#__PURE__*/_createElementVNode(\"a\", {\n    \"class\": \"btn btn-primary\",\n    href: \"login.html\"\n  }, \"Logout\")])])])], -1\n  /* HOISTED */\n  );\n});\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Page Wrapper \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Sidebar \"), _hoisted_3, _createCommentVNode(\" End of Sidebar \"), _createCommentVNode(\" Content Wrapper \"), _createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" Main Content \"), _createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" Topbar \"), _hoisted_6, _createCommentVNode(\" End of Topbar \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createCommentVNode(\" <button class=\\\"btn btn-primary\\\" id=\\\"SaveButton\\\" @click=\\\"save()\\\">\\r\\n                Save\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-primary\\\" @click=\\\"load()\\\">Load</button>\\r\\n              <button class=\\\"btn btn-primary\\\" @click=\\\"layout()\\\">Layout</button>\\r\\n              <button class=\\\"btn btn-primary\\\">Compile</button>\\r\\n              <a href=\\\"/train\\\"\\r\\n                ><button class=\\\"btn btn-primary\\\">Train</button></a\\r\\n              > \"), _createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\",\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return $options.load();\n    })\n  }, \"Load\"), _createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\",\n    type: \"submit\",\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return $options.layout();\n    })\n  }, \" Layout \"), _createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\",\n    type: \"submit\",\n    onClick: _cache[2] || (_cache[2] = function ($event) {\n      return $options.download();\n    })\n  }, \" Download \"), _createElementVNode(\"form\", _hoisted_10, [_hoisted_11, _createElementVNode(\"button\", {\n    type: \"submit\",\n    \"class\": \"btn btn-primary\",\n    onClick: _cache[3] || (_cache[3] = function ($event) {\n      return $options.compile();\n    })\n  }, \" Compile \")]), _createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\",\n    onClick: _cache[4] || (_cache[4] = function ($event) {\n      return $options.enterTrain();\n    })\n  }, \" Train \"), _hoisted_12, _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"mySavedModel\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"300px\"\n    },\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n      return $data.canvasData.file = $event;\n    })\n  }, \"\\r\\n              \", 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.canvasData.file]]), _hoisted_13, _hoisted_14])])])]), _createCommentVNode(\" End of Content Wrapper \")]), _createCommentVNode(\" End of Page Wrapper \"), _createCommentVNode(\" Logout Modal\"), _hoisted_15]);\n}","map":{"version":3,"mappings":"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","names":["id","_createElementVNode","_createCommentVNode","type","placeholder","href","role","style","method","name","tabindex","_createElementBlock","_hoisted_3","_hoisted_6","_hoisted_9","onClick","$options","_hoisted_11","_hoisted_12","$data","file","$event","_hoisted_13","_hoisted_14","_hoisted_15"],"sourceRoot":"","sources":["C:\\qp_box\\_CodeField\\Comp208-Neural-Lego\\frontend\\src\\views\\CanvasView.vue"],"sourcesContent":["<template>\r\n  <div id=\"page-top\" class=\"body\">\r\n    <!-- Page Wrapper -->\r\n    <div id=\"wrapper\">\r\n      <!-- Sidebar -->\r\n      <ul\r\n        class=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\"\r\n        id=\"accordionSidebar\"\r\n      >\r\n        <!-- Sidebar - Brand -->\r\n\r\n        <a\r\n          class=\"sidebar-brand d-flex align-items-center justify-content-center\"\r\n        >\r\n          <!-- <div class=\"sidebar-brand-icon rotate-n-15\">\r\n                    <i class=\"fas fa-laugh-wink\"></i>\r\n                </div> -->\r\n          <div class=\"sidebar-brand-text mx-3\">NEURAL LEGO</div>\r\n        </a>\r\n\r\n        <!-- Divider -->\r\n        <hr class=\"sidebar-divider my-0\" />\r\n\r\n        <!-- Nav Item - Dashboard -->\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"/profile\">\r\n            <i class=\"fas fa-fw fa-user\"></i>\r\n            <span>User</span></a\r\n          >\r\n        </li>\r\n\r\n        <!-- Divider -->\r\n        <hr class=\"sidebar-divider my-0\" />\r\n\r\n        <!-- Nav Item - Dashboard -->\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"/project\">\r\n            <i class=\"fas fa-fw fa-folder\"></i>\r\n            <span>Project</span></a\r\n          >\r\n        </li>\r\n\r\n        <!-- Divider -->\r\n        <hr class=\"sidebar-divider my-0\" />\r\n\r\n        <!-- Nav Item - Dashboard -->\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"/template\">\r\n            <i class=\"fas fa-fw fa-table\"></i>\r\n            <span>Template</span></a\r\n          >\r\n        </li>\r\n\r\n        <hr class=\"sidebar-divider my-0\" />\r\n\r\n        <!-- Nav Item - Dashboard -->\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" href=\"draggable.html\">\r\n            <i class=\"fas fa-fw fa-palette\"></i>\r\n            <span>Canvas</span></a\r\n          >\r\n        </li>\r\n\r\n        <hr class=\"sidebar-divider my-0\" />\r\n\r\n        <!-- Nav Item - Dashboard -->\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"home.html\">\r\n            <i class=\"fas fa-fw fa-arrow-circle-left\"></i>\r\n            <span>Log out</span></a\r\n          >\r\n        </li>\r\n        <!-- Divider -->\r\n        <hr class=\"sidebar-divider d-none d-md-block\" />\r\n      </ul>\r\n      <!-- End of Sidebar -->\r\n\r\n      <!-- Content Wrapper -->\r\n      <div id=\"content-wrapper\" class=\"d-flex flex-column\">\r\n        <!-- Main Content -->\r\n        <div id=\"content\">\r\n          <!-- Topbar -->\r\n          <nav\r\n            class=\"\r\n              navbar navbar-expand navbar-light\r\n              bg-white\r\n              topbar\r\n              mb-4\r\n              static-top\r\n              shadow\r\n            \"\r\n          >\r\n            <!-- Sidebar Toggle (Topbar) -->\r\n            <button\r\n              id=\"sidebarToggleTop\"\r\n              class=\"btn btn-link d-md-none rounded-circle mr-3\"\r\n            >\r\n              <i class=\"fa fa-bars\"></i>\r\n            </button>\r\n\r\n            <!-- Topbar Search -->\r\n            <form\r\n              class=\"\r\n                d-none d-sm-inline-block\r\n                form-inline\r\n                mr-auto\r\n                ml-md-3\r\n                my-2 my-md-0\r\n                mw-100\r\n                navbar-search\r\n              \"\r\n            >\r\n              <div class=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control bg-light border-0 small\"\r\n                  placeholder=\"Search for...\"\r\n                  aria-label=\"Search\"\r\n                  aria-describedby=\"basic-addon2\"\r\n                />\r\n                <div class=\"input-group-append\">\r\n                  <button class=\"btn btn-primary\" type=\"button\">\r\n                    <i class=\"fas fa-search fa-sm\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <!-- Topbar Navbar -->\r\n            <ul class=\"navbar-nav ml-auto\">\r\n              <!-- Nav Item - Search Dropdown (Visible Only XS) -->\r\n              <li class=\"nav-item dropdown no-arrow d-sm-none\">\r\n                <a\r\n                  class=\"nav-link dropdown-toggle\"\r\n                  href=\"#\"\r\n                  id=\"searchDropdown\"\r\n                  role=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  <i class=\"fas fa-search fa-fw\"></i>\r\n                </a>\r\n                <!-- Dropdown - Messages -->\r\n                <div\r\n                  class=\"\r\n                    dropdown-menu dropdown-menu-right\r\n                    p-3\r\n                    shadow\r\n                    animated--grow-in\r\n                  \"\r\n                  aria-labelledby=\"searchDropdown\"\r\n                >\r\n                  <form class=\"form-inline mr-auto w-100 navbar-search\">\r\n                    <div class=\"input-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control bg-light border-0 small\"\r\n                        placeholder=\"Search for...\"\r\n                        aria-label=\"Search\"\r\n                        aria-describedby=\"basic-addon2\"\r\n                      />\r\n                      <div class=\"input-group-append\">\r\n                        <button class=\"btn btn-primary\" type=\"button\">\r\n                          <i class=\"fas fa-search fa-sm\"></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n          <!-- End of Topbar -->\r\n\r\n          <div id=\"allSampleContent\" class=\"p-4 w-full\">\r\n            <div id=\"sample\">\r\n              <div style=\"width: 100%; margin-bottom: 10px; display: flex\">\r\n                <div\r\n                  id=\"myPaletteDiv\"\r\n                  style=\"\r\n                    width: 150px;\r\n                    margin-right: 10px;\r\n                    border: solid 4px #82929b;\r\n                  \"\r\n                ></div>\r\n\r\n                <div\r\n                  id=\"myDiagramDiv_1\"\r\n                  style=\"\r\n                    width: 650px;\r\n                    margin-right: 10px;\r\n                    height: 600px;\r\n                    border: solid 4px #82929b;\r\n                  \"\r\n                ></div>\r\n                <div\r\n                  id=\"myDiagramDiv_2\"\r\n                  style=\"flex-grow: 1; height: 600px; border: solid 4px #82929b\"\r\n                ></div>\r\n              </div>\r\n\r\n              <!-- <button class=\"btn btn-primary\" id=\"SaveButton\" @click=\"save()\">\r\n                Save\r\n              </button>\r\n              <button class=\"btn btn-primary\" @click=\"load()\">Load</button>\r\n              <button class=\"btn btn-primary\" @click=\"layout()\">Layout</button>\r\n              <button class=\"btn btn-primary\">Compile</button>\r\n              <a href=\"/train\"\r\n                ><button class=\"btn btn-primary\">Train</button></a\r\n              > -->\r\n              <button class=\"btn btn-primary\" @click=\"load()\">Load</button>\r\n              <button class=\"btn btn-primary\" type=\"submit\" @click=\"layout()\">\r\n                Layout\r\n              </button>\r\n\r\n              <button class=\"btn btn-primary\" type=\"submit\" @click=\"download()\">\r\n                Download\r\n              </button>\r\n\r\n              <form style=\"display: inline-block\" method=\"POST\">\r\n                <input\r\n                  type=\"hidden\"\r\n                  class=\"form-control\"\r\n                  id=\"file\"\r\n                  name=\"file\"\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn btn-primary\"\r\n                  @click=\"compile()\"\r\n                >\r\n                  Compile\r\n                </button>\r\n              </form>\r\n\r\n              <button class=\"btn btn-primary\" @click=\"enterTrain()\">\r\n                Train\r\n              </button>\r\n              <br />\r\n\r\n              <textarea\r\n                id=\"mySavedModel\"\r\n                style=\"width: 100%; height: 300px\"\r\n                v-model=\"canvasData.file\"\r\n              >\r\n              </textarea>\r\n\r\n              <br />\r\n              <textarea id=\"mySavedModel\" style=\"width: 100%; height: 300px\">\r\n{ \"class\": \"GraphLinksModel\",\r\n\"copiesArrays\": true,\r\n\"copiesArrayObjects\": true,\r\n\"nodeDataArray\": [ {\"category\":\"Data\", \"reasonsList\":[ {} ], \"key\":-2, \"loc\":\"-99.10220015417542 -20.151221229488044\"} ],\r\n\"linkDataArray\": []}\r\n            </textarea\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- End of Content Wrapper -->\r\n    </div>\r\n    <!-- End of Page Wrapper -->\r\n\r\n    <!-- Logout Modal-->\r\n    <div\r\n      class=\"modal fade\"\r\n      id=\"logoutModal\"\r\n      tabindex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"exampleModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Ready to Leave?</h5>\r\n            <button\r\n              class=\"close\"\r\n              type=\"button\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">Ã—</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            Select \"Logout\" below if you are ready to end your current session.\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button\r\n              class=\"btn btn-secondary\"\r\n              type=\"button\"\r\n              data-dismiss=\"modal\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <a class=\"btn btn-primary\" href=\"login.html\">Logout</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport * as go from \"../../public/go.js\";\r\n\r\n//import Prism Editor\r\nimport { PrismEditor } from \"vue-prism-editor\";\r\nimport \"vue-prism-editor/dist/prismeditor.min.css\"; // import the styles somewhere\r\n\r\n// import highlighting library (you can use any library you want just return html string)\r\nimport { highlight, languages } from \"prismjs/components/prism-core\";\r\nimport \"prismjs/components/prism-clike\";\r\nimport \"prismjs/components/prism-javascript\";\r\nimport \"prismjs/themes/prism-twilight.css\"; // import syntax highlighting styles\r\n\r\nexport default {\r\n  name: \"CanvasView\",\r\n\r\n  components: {\r\n    PrismEditor,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      canvasData: {\r\n        file: {\r\n          class: \"GraphLinksModel\",\r\n          nodeDataArray: [\r\n            {\r\n              category: \"Data\",\r\n              key: -1,\r\n              loc: \"42.22500681322674 47.35735117835321\",\r\n            },\r\n            {\r\n              category: \"End\",\r\n              key: -4,\r\n              loc: \"567.1497069414404 47.35735117835318\",\r\n            },\r\n            {\r\n              category: \"ReLU\",\r\n              key: -2,\r\n              loc: \"403.0334278716728 47.357351178353184\",\r\n            },\r\n            {\r\n              category: \"FC\",\r\n              reasonsList: [{ text1: \"512\", text3: \"128\" }],\r\n              key: -3,\r\n              loc: \"216.57893005138874 47.357351178353184\",\r\n            },\r\n          ],\r\n          linkDataArray: [\r\n            {\r\n              from: -3,\r\n              to: -2,\r\n              points: [\r\n                278.70784647632394, 47.35735117835319, 318.70784647632394,\r\n                47.35735117835319, 338.707846476324, 47.3573511783532,\r\n                348.707846476324, 47.3573511783532,\r\n              ],\r\n            },\r\n            {\r\n              from: -2,\r\n              to: -4,\r\n              points: [\r\n                457.3590092670217, 47.3573511783532, 497.3590092670217,\r\n                47.3573511783532, 517.3590092670217, 47.35735117835319,\r\n                527.3590092670217, 47.35735117835319,\r\n              ],\r\n            },\r\n            {\r\n              from: -1,\r\n              to: -3,\r\n              points: [\r\n                84.4500136264535, 47.3573511783532, 94.4500136264535,\r\n                47.3573511783532, 104.45001362645351, 47.35735117835319,\r\n                154.4500136264535, 47.35735117835319,\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        code: `import torch import torch.nn as nn\r\nimport torch.nn.functional as F\r\nimport torch.optim as optim\r\nfrom torchvision import datasets, transforms\r\nimport argparse\r\nimport time\r\nimport os\r\n\r\n#setup training parameters\r\nparser = argparse.ArgumentParser(description='PyTorch MNIST Training')\r\nparser.add_argument('--batch-size', type=int, default=128, metavar='N',\r\n                    help='input batch size for training (default: 128)')\r\nparser.add_argument('--test-batch-size', type=int, default=128, metavar='N',\r\n                    help='input batch size for testing (default: 128)')\r\nparser.add_argument('--epochs', type=int, default=5, metavar='N',\r\n                    help='number of epochs to train')\r\nparser.add_argument('--lr', type=float, default=0.01, metavar='LR',\r\n                    help='learning rate')\r\nparser.add_argument('--no-cuda', action='store_true', default=False,\r\n                    help='disables CUDA training')\r\nparser.add_argument('--seed', type=int, default=1, metavar='S',\r\n                    help='random seed (default: 1)')\r\nparser.add_argument('--model-dir', default='./model-mnist-cnn',\r\n                    help='directory of model for saving checkpoint')\r\nparser.add_argument('--load-model', action='store_true', default=False,\r\n                    help='load model or not')\r\n    \r\nargs = parser.parse_args(args=[]) \r\n    \r\nif not os.path.exists(args.model_dir):\r\n    os.makedirs(args.model_dir)\r\n            \r\n# Judge cuda is available or not\r\nuse_cuda = not args.no_cuda and torch.cuda.is_available()\r\n#device = torch.device(\"cuda\" if use_cuda else \"cpu\")\r\ndevice = torch.device(\"cpu\")\r\n    \r\ntorch.manual_seed(args.seed)\r\nkwargs = {'num_workers': 1, 'pin_memory': True} if use_cuda else {}\r\n    \r\n# Setup data loader\r\ntransform=transforms.Compose([\r\n        transforms.ToTensor(),\r\n        transforms.Normalize((0.1307,), (0.3081,))\r\n        ])\r\ntrainset = datasets.MNIST('data', train=True, download=True,\r\n                    transform=transform)\r\ntestset = datasets.MNIST('data', train=False,\r\n                    transform=transform)\r\ntrain_loader = torch.utils.data.DataLoader(trainset,batch_size=args.batch_size, shuffle=True,**kwargs)\r\ntest_loader = torch.utils.data.DataLoader(testset,batch_size=args.test_batch_size, shuffle=False, **kwargs)\r\n    \r\n    \r\n# Define CNN\r\nclass Net(nn.Module):\r\n    def __init__(self):\r\n        super(Net, self).__init__()\r\n        # in_channels:1  out_channels:32  kernel_size:3  stride:1\r\n        self.conv1 = nn.Conv2d(1, 32, 3, 1)\r\n        # in_channels:32  out_channels:64  kernel_size:3  stride:1\r\n        self.conv2 = nn.Conv2d(32, 64, 3, 1)\r\n        self.fc1 = nn.Linear(9216, 128)\r\n        self.fc2 = nn.Linear(128, 10)\r\n    \r\n    def forward(self, x):\r\n        x = self.conv1(x)\r\n        x = F.relu(x)\r\n        x = self.conv2(x)\r\n        x = F.relu(x)\r\n        x = F.max_pool2d(x, 2)\r\n        x = torch.flatten(x, 1)\r\n        x = self.fc1(x)\r\n        x = F.relu(x)\r\n        x = self.fc2(x)\r\n        output = F.log_softmax(x, dim=1)\r\n        return output\r\n    \r\n    \r\n    \r\n# Train function\r\ndef train(args, model, device, train_loader, optimizer, epoch):\r\n    model.train()\r\n    for batch_idx, (data, target) in enumerate(train_loader):\r\n        data, target = data.to(device), target.to(device)\r\n            \r\n        #clear gradients\r\n        optimizer.zero_grad()\r\n            \r\n        #compute loss\r\n        loss = F.cross_entropy(model(data), target)\r\n            \r\n        #get gradients and update\r\n        loss.backward()\r\n        optimizer.step()\r\n    \r\n# Predict function\r\ndef eval_test(model, device, test_loader):\r\n    model.eval()\r\n    test_loss = 0\r\n    correct = 0\r\n    with torch.no_grad():\r\n        for data, target in test_loader:\r\n            data, target = data.to(device), target.to(device)\r\n            output = model(data)\r\n            test_loss += F.cross_entropy(output, target, size_average=False).item()\r\n            pred = output.max(1, keepdim=True)[1]\r\n            correct += pred.eq(target.view_as(pred)).sum().item()\r\n    test_loss /= len(test_loader.dataset)\r\n    test_accuracy = correct / len(test_loader.dataset)\r\n    return test_loss, test_accuracy\r\n    \r\n# Main function, train the initial model or load the model\r\ndef main():\r\n    model = Net().to(device)\r\n    optimizer = optim.SGD(model.parameters(), lr=args.lr)\r\n        \r\n    if args.load_model:\r\n        # Load model\r\n        model.load_state_dict(torch.load(os.path.join(args.model_dir, 'final_model.pt')))\r\n        trnloss, trnacc = eval_test(model, device, train_loader)\r\n        tstloss, tstacc = eval_test(model, device, test_loader)\r\n        print('trn_loss: {:.4f}, trn_acc: {:.2f}%'.format(trnloss, 100. * trnacc), end=', ')\r\n        print('test_loss: {:.4f}, test_acc: {:.2f}%'.format(tstloss, 100. * tstacc))\r\n            \r\n    else:\r\n        # Train initial model\r\n        for epoch in range(1, args.epochs + 1):\r\n            start_time = time.time()\r\n    \r\n            #training\r\n            train(args, model, device, train_loader, optimizer, epoch)\r\n    \r\n            #get trnloss and testloss\r\n            trnloss, trnacc = eval_test(model, device, train_loader)\r\n            tstloss, tstacc = eval_test(model, device, test_loader)\r\n    \r\n            #print trnloss and testloss\r\n            print('Epoch '+str(epoch)+': '+str(int(time.time()-start_time))+'s', end=', ')\r\n            print('trn_loss: {:.4f}, trn_acc: {:.2f}%'.format(trnloss, 100. * trnacc), end=', ')\r\n            print('test_loss: {:.4f}, test_acc: {:.2f}%'.format(tstloss, 100. * tstacc))\r\n            \r\n        #save model\r\n        torch.save(model.state_dict(), os.path.join(args.model_dir, 'final_model.pt'))\r\n    \r\nif __name__ == '__main__':\r\n    main()\r\n   \t\t `,\r\n      },\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    // layout() {\r\n    //   myDiagram.layoutDiagram(true);\r\n    // },\r\n\r\n    // save() {\r\n    //   document.getElementById(\"mySavedModel\").value = myDiagram.model.toJson();\r\n    //   myDiagram.isModified = false;\r\n    // },\r\n\r\n    load() {\r\n      myDiagram.model = go.Model.fromJson(\r\n        document.getElementById(\"mySavedModel\").value\r\n      );\r\n    },\r\n\r\n    highlighter(code) {\r\n      return highlight(code, languages.js); // languages.<insert language> to return html with markup\r\n    },\r\n\r\n    getJson() {\r\n      axios({\r\n        method: \"get\",\r\n        url:\r\n          \"/canvas/getJson/\" + localStorage.uid + \"/\" + localStorage.pid + \"/\",\r\n        responseType: \"stream\",\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        // not first time\r\n        if (res.data.status == 200) {\r\n          this.canvas_data.file = res.data;\r\n          this.renderJson();\r\n        }\r\n        // first time\r\n        else if (res.data.status == 204) {\r\n        } else {\r\n          alert(\"can not get user's json!\");\r\n        }\r\n      });\r\n    },\r\n\r\n    getPython() {\r\n      axios({\r\n        method: \"get\",\r\n        url:\r\n          \"/canvas/getPython/\" +\r\n          localStorage.uid +\r\n          \"/\" +\r\n          localStorage.pid +\r\n          \"/\",\r\n        responseType: \"stream\",\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.status == 200) {\r\n          this.canvas_data.code = res.code;\r\n        } else {\r\n          alert(\"can not get user's python!\");\r\n        }\r\n      });\r\n    },\r\n\r\n    download() {\r\n      axios({\r\n        method: \"get\",\r\n        url:\r\n          \"/canvas/download/\" + localStorage.uid + \"/\" + localStorage.pid + \"/\",\r\n        responseType: \"blob\",\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.status == 200) {\r\n          let blob = new Blob([res], {\r\n            type: \"application/zip;charset-UTF-8\",\r\n          });\r\n\r\n          const url = URL.createObjectURL(blob);\r\n          const a = document.createElement(\"a\");\r\n          a.style.display = \"none\";\r\n          a.href = url;\r\n          a.download = \"projectttt.zip\";\r\n          a.click();\r\n          URL.revokeObjectURL(url);\r\n        } else {\r\n          alert(\"can not get user's json!\");\r\n        }\r\n      });\r\n    },\r\n\r\n    // Update json first, then send to backend and get python code\r\n    compile() {\r\n      // Update json\r\n      this.getJson();\r\n      // console.log(this.canvasData.file);\r\n      // this.renderJson();\r\n      // console.log(this.canvasData.file);\r\n      // this.updateJson();\r\n      // console.log(this.canvasData.file);\r\n\r\n      // send json to backend\r\n      // this.canvasData.file = myDiagram.model.toJson();\r\n\r\n      let formData = new FormData();\r\n      formData.append(\"file\", this.canvasData.file);\r\n      axios({\r\n        method: \"post\",\r\n        url:\r\n          \"/canvas/compile/\" + localStorage.uid + \"/\" + localStorage.pid + \"/\",\r\n        data: formData,\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        // If compile successful 200, backend update database, frontend get data and reload\r\n        if (res.data.status == \"200\") {\r\n          this.getPython();\r\n          console.log(\"compile ok!\");\r\n        }\r\n        // If complie fails 500, frontend alert error\r\n        else if (res.data.status == \"500\") {\r\n          alert(\"The network model is not valid!\");\r\n        }\r\n        location.replace(\"/canvas/\");\r\n      });\r\n    },\r\n\r\n    // Update Json accroding to user's operation\r\n    updateJson() {\r\n      document.getElementById(\"mySavedModel\").value = myDiagram.model.toJson();\r\n      myDiagram.isModified = false;\r\n    },\r\n\r\n    // Render Json on the canvas area\r\n    renderJson() {\r\n      myDiagram.model = go.Model.fromJson(\r\n        document.getElementById(\"mySavedModel\").value\r\n      );\r\n    },\r\n\r\n    // Render .py on the code area\r\n    renderCode() {},\r\n\r\n    // To make canvas tidy 200\r\n    layout() {\r\n      // layout\r\n      this.updateJson();\r\n      myDiagram.layoutDiagram(true);\r\n    },\r\n\r\n    // Go to train page 200\r\n    enterTrain() {\r\n      location.replace(\"/train/\");\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    // Load\r\n    // this.getJson();\r\n    // // this.updateJson();\r\n    // this.canvasData.file = JSON.stringify(this.canvasData.file);\r\n    // this.renderJson();\r\n\r\n    this.canvasData.file = JSON.stringify(this.canvasData.file);\r\n    // this.compile();\r\n\r\n    // this.canvasData.file = JSON.stringify(this.canvasData.file);\r\n\r\n    const $ = go.GraphObject.make;\r\n\r\n    var bigfont = \"bold 13pt Helvetica, Arial, sans-serif\";\r\n    var smallfont = \"bold 11pt Helvetica, Arial, sans-serif\";\r\n\r\n    function textStyle() {\r\n      return {\r\n        margin: 6,\r\n        wrap: go.TextBlock.WrapFit,\r\n        textAlign: \"center\",\r\n        editable: true,\r\n        font: bigfont,\r\n      };\r\n    }\r\n\r\n    const myDiagram = $(go.Diagram, \"myDiagramDiv_1\", {\r\n      \"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom,\r\n      initialAutoScale: go.Diagram.Uniform,\r\n      \"linkingTool.direction\": go.LinkingTool.ForwardsOnly,\r\n      layout: $(go.LayeredDigraphLayout, {\r\n        isInitial: false,\r\n        isOngoing: false,\r\n        layerSpacing: 50,\r\n      }),\r\n      \"undoManager.isEnabled\": true,\r\n    });\r\n\r\n    var nodeSelectionAdornmentTemplate = $(\r\n      go.Adornment,\r\n      \"Auto\",\r\n      $(go.Shape, {\r\n        fill: null,\r\n        stroke: \"#979dac\",\r\n        strokeWidth: 2,\r\n        strokeDashArray: [4, 2],\r\n      }),\r\n      $(go.Placeholder)\r\n    );\r\n\r\n    myDiagram.nodeTemplate = $(\r\n      go.Node,\r\n      \"Auto\",\r\n      {\r\n        locationSpot: go.Spot.Center,\r\n      },\r\n      new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n        go.Point.stringify\r\n      ),\r\n      {\r\n        selectable: true,\r\n        selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n      },\r\n\r\n      $(go.Shape, \"Rectangle\", {\r\n        stroke: null,\r\n        portId: \"\",\r\n        fromLinkable: true,\r\n        toLinkable: true,\r\n        cursor: \"pointer\",\r\n        toEndSegmentLength: 50,\r\n        fromEndSegmentLength: 50,\r\n      }),\r\n      $(\r\n        go.TextBlock,\r\n        \"hello\",\r\n        {\r\n          margin: 6,\r\n          font: bigfont,\r\n          editable: true,\r\n          minSize: new go.Size(40, NaN),\r\n        },\r\n        new go.Binding(\"text\", \"text\").makeTwoWay()\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"Data\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n          margin: new go.Margin(0, 0, 0, 0),\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"Circle\", {\r\n          fill: \"#caffbf\",\r\n          portId: \"\",\r\n          fromLinkable: true,\r\n          cursor: \"pointer\",\r\n\r\n          stroke: \"#74c69d\",\r\n\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"Data\",\r\n          textStyle(),\r\n          {\r\n            stroke: \"#2d6a4f\",\r\n            minSize: new go.Size(40, NaN),\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"End\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"Circle\", {\r\n          fill: \"#ffadad\",\r\n          portId: \"\",\r\n          toLinkable: true,\r\n          cursor: \"pointer\",\r\n          fromEndSegmentLength: 40,\r\n          stroke: \"#df7373\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"End\",\r\n          textStyle(),\r\n          {\r\n            stroke: \"#ad2e24\",\r\n            minSize: new go.Size(40, NaN),\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"ReLU\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"Ellipse\", {\r\n          fill: \"#fdffb6\",\r\n          portId: \"\",\r\n          fromLinkable: true,\r\n          toLinkable: true,\r\n          cursor: \"pointer\",\r\n          fromEndSegmentLength: 40,\r\n          stroke: \"#ffd100\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"ReLU\",\r\n          textStyle(),\r\n          {\r\n            stroke: \"#e2711d\",\r\n\r\n            minSize: new go.Size(60, NaN),\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    var reasonTemplate = $(\r\n      go.Panel,\r\n      $(\r\n        go.Panel,\r\n        \"Table\",\r\n        {\r\n          maxSize: new go.Size(200, 999),\r\n          margin: new go.Margin(0, 3, 10, 3),\r\n          defaultAlignment: go.Spot.Center,\r\n        },\r\n        $(go.RowColumnDefinition, {\r\n          column: 2,\r\n          width: 2,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"input = \",\r\n          {\r\n            margin: new go.Margin(4, 0, 0, 0),\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n\r\n            editable: true,\r\n            font: smallfont,\r\n            row: 2,\r\n            column: 0,\r\n            stroke: \"#3e5c76\",\r\n          },\r\n          new go.Binding(\"text\", \"text0\").makeTwoWay()\r\n        ),\r\n\r\n        $(\r\n          go.TextBlock,\r\n          \"value\",\r\n          {\r\n            margin: new go.Margin(4, 0, 0, 0),\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n\r\n            editable: true,\r\n            stroke: \"#3e5c76\",\r\n            font: smallfont,\r\n            row: 2,\r\n            column: 1,\r\n          },\r\n          new go.Binding(\"text\", \"text1\").makeTwoWay()\r\n        ),\r\n\r\n        $(\r\n          go.TextBlock,\r\n          \"output = \",\r\n          {\r\n            margin: new go.Margin(4, 0, 0, 0),\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n\r\n            editable: true,\r\n            font: smallfont,\r\n            stroke: \"#3e5c76\",\r\n            row: 3,\r\n            column: 0,\r\n          },\r\n          new go.Binding(\"text\", \"text2\").makeTwoWay()\r\n        ),\r\n\r\n        $(\r\n          go.TextBlock,\r\n          \"value\",\r\n          {\r\n            margin: new go.Margin(4, 0, 0, 9),\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n\r\n            editable: true,\r\n            font: smallfont,\r\n            stroke: \"#3e5c76\",\r\n            row: 3,\r\n            column: 1,\r\n          },\r\n          new go.Binding(\"text\", \"text3\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"FC\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: \"#bde0fe\",\r\n          stroke: \"#4ea8de\",\r\n          strokeWidth: 4,\r\n          portId: \"\",\r\n          fromLinkable: true,\r\n          toLinkable: true,\r\n          cursor: \"pointer\",\r\n          toEndSegmentLength: 50,\r\n          fromEndSegmentLength: 40,\r\n        }),\r\n        $(\r\n          go.Panel,\r\n          \"Vertical\",\r\n          {\r\n            defaultAlignment: go.Spot.Center,\r\n          },\r\n\r\n          $(\r\n            go.TextBlock,\r\n            \"FC\",\r\n            textStyle(),\r\n            {\r\n              stroke: \"#3e5c76\",\r\n              margin: new go.Margin(8, 0, 0, 0),\r\n              minSize: new go.Size(100, NaN),\r\n            },\r\n            new go.Binding(\"text\", \"text\").makeTwoWay()\r\n          ),\r\n\r\n          $(\r\n            go.Panel,\r\n            \"Vertical\",\r\n            {\r\n              defaultAlignment: go.Spot.TopLeft,\r\n              itemTemplate: reasonTemplate,\r\n            },\r\n            new go.Binding(\"itemArray\", \"reasonsList\").makeTwoWay()\r\n          )\r\n        )\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"RNN\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: \"#E7C5FC\",\r\n          stroke: \"#CF8BF9\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"RNN\\n(unavailable)\",\r\n          textStyle(),\r\n          {\r\n            margin: 9,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            editable: true,\r\n            stroke: \"#560788\",\r\n            font: smallfont,\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"CNN\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: \"#E7C5FC\",\r\n          stroke: \"#CF8BF9\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"CNN\\n(unavailable)\",\r\n          textStyle(),\r\n          {\r\n            margin: 9,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            editable: true,\r\n            stroke: \"#560788\",\r\n            font: smallfont,\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"LSTM\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: \"#E7C5FC\",\r\n          stroke: \"#CF8BF9\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"LSTM\\n(unavailable)\",\r\n          textStyle(),\r\n          {\r\n            margin: 9,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            editable: true,\r\n            stroke: \"#560788\",\r\n            font: smallfont,\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"Softmax\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: \"#E7C5FC\",\r\n          stroke: \"#CF8BF9\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"Softmax\\n(unavailable)\",\r\n          textStyle(),\r\n          {\r\n            margin: 9,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            editable: true,\r\n            stroke: \"#560788\",\r\n            font: smallfont,\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"Maximum Polling\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: \"#E7C5FC\",\r\n          stroke: \"#CF8BF9\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"Maximum\\nPolling\\n(unavailable)\",\r\n          textStyle(),\r\n          {\r\n            margin: 9,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            editable: true,\r\n            stroke: \"#560788\",\r\n            font: smallfont,\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    var linkSelectionAdornmentTemplate = $(\r\n      go.Adornment,\r\n      \"Link\",\r\n      $(\r\n        go.Shape,\r\n\r\n        {\r\n          isPanelMain: true,\r\n          fill: null,\r\n          stroke: \"deepskyblue\",\r\n          strokeWidth: 2.5,\r\n        }\r\n      )\r\n    );\r\n\r\n    myDiagram.linkTemplate = $(\r\n      go.Link,\r\n      {\r\n        selectable: true,\r\n        selectionAdornmentTemplate: linkSelectionAdornmentTemplate,\r\n      },\r\n      new go.Binding(\"points\").makeTwoWay(),\r\n      {\r\n        toShortLength: 15,\r\n      },\r\n\r\n      $(go.Shape, {\r\n        stroke: \"#979dac\",\r\n        strokeWidth: 2.5,\r\n      }),\r\n      $(go.Shape, {\r\n        toArrow: \"kite\",\r\n        fill: \"#979dac\",\r\n        stroke: null,\r\n        scale: 2,\r\n      })\r\n    );\r\n\r\n    var palette = $(go.Palette, \"myPaletteDiv\", {\r\n      nodeTemplateMap: myDiagram.nodeTemplateMap,\r\n      autoScale: go.Diagram.Uniform,\r\n    });\r\n\r\n    palette.model.nodeDataArray = [\r\n      {\r\n        category: \"Data\",\r\n        reasonsList: [{}],\r\n      },\r\n      {\r\n        category: \"ReLU\",\r\n        reasonsList: [{}],\r\n      },\r\n      {\r\n        category: \"FC\",\r\n        reasonsList: [{}],\r\n      },\r\n      {\r\n        category: \"End\",\r\n        reasonsList: [{}],\r\n      },\r\n      {\r\n        category: \"CNN\",\r\n        reasonsList: [{}],\r\n      },\r\n      {\r\n        category: \"RNN\",\r\n        reasonsList: [{}],\r\n      },\r\n      {\r\n        category: \"LSTM\",\r\n        reasonsList: [{}],\r\n      },\r\n      {\r\n        category: \"Softmax\",\r\n        reasonsList: [{}],\r\n      },\r\n      {\r\n        category: \"Maximum Polling\",\r\n        reasonsList: [{}],\r\n      },\r\n    ];\r\n\r\n    window.myDiagram = myDiagram;\r\n\r\n    this.load();\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.body {\r\n  padding: 0;\r\n  margin: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow: visible;\r\n}\r\n</style>\r\n<style scoped src=\"../../new_pages/vendor/fontawesome-free/css/all.min.css\"></style>\r\n<style scoped src=\"../../new_pages/css/sb-admin-2.min.css\"></style>\r\n\r\n<style>\r\n/* required class */\r\n.my-editor {\r\n  /* we dont use `language-` classes anymore so thats why we need to add background and text color manually */\r\n  background: #2d2d2d;\r\n  color: #ccc;\r\n\r\n  /* you must provide font-family font-size line-height. Example: */\r\n  font-family: Fira code, Fira Mono, Consolas, Menlo, Courier, monospace;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  padding: 5px;\r\n}\r\n\r\n/* optional class for removing the outline */\r\n.prism-editor__textarea:focus {\r\n  outline: none;\r\n}\r\n</style>\r\n\r\n    <style scpoed>\r\n#myPaletteDiv {\r\n  border-radius: 7px;\r\n}\r\n\r\n#myDiagramDiv_1 {\r\n  border-radius: 7px;\r\n}\r\n\r\n#myDiagramDiv_2 {\r\n  border-radius: 7px;\r\n}\r\n\r\n#myDiagramDiv_1 {\r\n  resize: horizontal;\r\n  overflow: auto;\r\n}\r\n\r\n::-webkit-resizer {\r\n  /* background: #82929B; */\r\n  /* background-color: #82929B; */\r\n  /* background: url(\"img/arrow.png\"); */\r\n  background: url(\"../../new_pages/img/1.jpg\");\r\n  border-radius: 0.1rem;\r\n  /* border: 8px solid black;\r\n            background: blue; */\r\n  /* outline: 2px dashed green; */\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}