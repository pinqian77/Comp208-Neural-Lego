{"ast":null,"code":"import axios from \"axios\";\nimport * as go from \"/public/go.js\";\nexport default {\n  name: \"CanvasView\",\n  mounted: function mounted() {\n    var $ = go.GraphObject.make; // for conciseness in defining templates\n\n    var yellowgrad = $(go.Brush, \"Linear\", {\n      0: \"#bde0fe\",\n      1: \"#bde0fe\"\n    });\n    var greengrad = $(go.Brush, \"Linear\", {\n      0: \"#fdffb6\",\n      1: \"#fdffb6\"\n    });\n    var bluegrad = $(go.Brush, \"Linear\", {\n      0: \"#caffbf\",\n      1: \"#caffbf\"\n    });\n    var redgrad = $(go.Brush, \"Linear\", {\n      0: \"#ffadad\",\n      1: \"#ffadad\"\n    });\n    var whitegrad = $(go.Brush, \"Linear\", {\n      0: \"#E7C5FC\",\n      1: \"#E7C5FC\"\n    });\n    var bigfont = \"bold 15pt Helvetica, Arial, sans-serif\";\n    var smallfont = \"bold 13pt Helvetica, Arial, sans-serif\"; // Common text styling\n\n    function textStyle() {\n      return {\n        margin: 6,\n        wrap: go.TextBlock.WrapFit,\n        textAlign: \"center\",\n        editable: true,\n        font: bigfont\n      };\n    }\n\n    var myDiagram = $(go.Diagram, \"myDiagramDiv\", {\n      initialAutoScale: go.Diagram.Uniform,\n      \"linkingTool.direction\": go.LinkingTool.ForwardsOnly,\n      layout: $(go.LayeredDigraphLayout, {\n        isInitial: false,\n        isOngoing: false,\n        layerSpacing: 50\n      }),\n      \"undoManager.isEnabled\": true\n    });\n    var nodeSelectionAdornmentTemplate = $(go.Adornment, \"Auto\", $(go.Shape, {\n      fill: null,\n      stroke: \"#979dac\",\n      strokeWidth: 2,\n      strokeDashArray: [4, 2]\n    }), $(go.Placeholder)); // define the Node template\n\n    myDiagram.nodeTemplate = $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, // define the node's outer shape, which will surround the TextBlock\n    $(go.Shape, \"Rectangle\", {\n      fill: yellowgrad,\n      stroke: null,\n      portId: \"\",\n      fromLinkable: true,\n      toLinkable: true,\n      cursor: \"pointer\",\n      toEndSegmentLength: 50,\n      fromEndSegmentLength: 50\n    }), $(go.TextBlock, \"ReLU\", {\n      margin: 6,\n      font: bigfont,\n      editable: true,\n      minSize: new go.Size(40, NaN)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay())); // Data\n\n    myDiagram.nodeTemplateMap.add(\"Data\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center,\n      margin: new go.Margin(0, 0, 0, 0)\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"Circle\", {\n      fill: bluegrad,\n      portId: \"\",\n      fromLinkable: true,\n      cursor: \"pointer\",\n      //fromEndSegmentLength: 40,\n      stroke: \"#74c69d\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"Data\", textStyle(), {\n      stroke: \"#2d6a4f\",\n      minSize: new go.Size(40, NaN)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay())));\n    myDiagram.nodeTemplateMap.add(\"End\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"Circle\", {\n      fill: redgrad,\n      portId: \"\",\n      toLinkable: true,\n      cursor: \"pointer\",\n      fromEndSegmentLength: 40,\n      stroke: \"#df7373\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"End\", textStyle(), {\n      stroke: \"#ad2e24\",\n      minSize: new go.Size(40, NaN)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay())));\n    myDiagram.nodeTemplateMap.add(\"ReLU\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"Ellipse\", {\n      fill: greengrad,\n      portId: \"\",\n      fromLinkable: true,\n      toLinkable: true,\n      cursor: \"pointer\",\n      fromEndSegmentLength: 40,\n      stroke: \"#ffd100\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"ReLU\", textStyle(), {\n      stroke: \"#e2711d\",\n      // locationSpot: go.Spot.Center,\n      //margin: new go.Margin(10, 0, 0, 0),\n      minSize: new go.Size(60, NaN)\n    }, new go.Binding(\"text\", \"text\").makeTwoWay())));\n    var reasonTemplate = $(go.Panel, $(go.Panel, \"Table\", {\n      maxSize: new go.Size(200, 999),\n      margin: new go.Margin(0, 3, 10, 3),\n      defaultAlignment: go.Spot.Center\n    }, $(go.RowColumnDefinition, {\n      column: 2,\n      width: 2\n    }), $(go.TextBlock, \"input = \", {\n      margin: new go.Margin(4, 0, 0, 0),\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      //stroke: \"whitesmoke\",\n      editable: true,\n      font: smallfont,\n      row: 2,\n      column: 0,\n      stroke: \"#3e5c76\"\n    }, new go.Binding(\"text\", \"text0\").makeTwoWay()), $(go.TextBlock, \"value\", {\n      margin: new go.Margin(4, 0, 0, 0),\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      //stroke: \"whitesmoke\",\n      editable: true,\n      stroke: \"#3e5c76\",\n      font: smallfont,\n      row: 2,\n      column: 1\n    }, new go.Binding(\"text\", \"text1\").makeTwoWay()), $(go.TextBlock, \"output = \", {\n      margin: new go.Margin(4, 0, 0, 0),\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      //stroke: \"whitesmoke\",\n      editable: true,\n      font: smallfont,\n      stroke: \"#3e5c76\",\n      row: 3,\n      column: 0\n    }, new go.Binding(\"text\", \"text2\").makeTwoWay()), $(go.TextBlock, \"value\", {\n      margin: new go.Margin(4, 0, 0, 9),\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      //stroke: \"whitesmoke\",\n      editable: true,\n      font: smallfont,\n      stroke: \"#3e5c76\",\n      row: 3,\n      column: 1\n    }, new go.Binding(\"text\", \"text3\").makeTwoWay())) // end Table Panel\n    );\n    myDiagram.nodeTemplateMap.add(\"FC\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"RoundedRectangle\", {\n      fill: yellowgrad,\n      stroke: \"#4ea8de\",\n      strokeWidth: 4,\n      portId: \"\",\n      fromLinkable: true,\n      toLinkable: true,\n      cursor: \"pointer\",\n      toEndSegmentLength: 50,\n      fromEndSegmentLength: 40\n    }), $(go.Panel, \"Vertical\", {\n      defaultAlignment: go.Spot.Center\n    }, $(go.TextBlock, \"FC\", textStyle(), {\n      stroke: \"#3e5c76\",\n      margin: new go.Margin(8, 0, 0, 0),\n      minSize: new go.Size(100, NaN) //maxSize: new go.Size(200, NaN)\n\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()), $(go.Panel, \"Vertical\", {\n      defaultAlignment: go.Spot.TopLeft,\n      itemTemplate: reasonTemplate\n    }, new go.Binding(\"itemArray\", \"reasonsList\").makeTwoWay()))));\n    var linkSelectionAdornmentTemplate = $(go.Adornment, \"Link\", $(go.Shape, // isPanelMain declares that this Shape shares the Link.geometry\n    {\n      isPanelMain: true,\n      fill: null,\n      stroke: \"deepskyblue\",\n      strokeWidth: 2.5\n    }) // use selection object's strokeWidth\n    ); // replace the default Link template in the linkTemplateMap\n\n    myDiagram.linkTemplate = $(go.Link, // the whole link panel\n    {\n      selectable: true,\n      selectionAdornmentTemplate: linkSelectionAdornmentTemplate\n    }, new go.Binding(\"points\").makeTwoWay(), {\n      //curve: go.Link.Bezier,\n      toShortLength: 15\n    }, //new go.Binding(\"curviness\", \"curviness\"),\n    $(go.Shape, // the link shape\n    {\n      stroke: \"#979dac\",\n      strokeWidth: 2.5\n    }), $(go.Shape, // the arrowhead\n    {\n      toArrow: \"kite\",\n      fill: \"#979dac\",\n      stroke: null,\n      scale: 2\n    }));\n    myDiagram.nodeTemplateMap.add(\"RNN\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"RoundedRectangle\", {\n      fill: whitegrad,\n      stroke: \"#CF8BF9\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"RNN\\n(unavailable)\", textStyle(), {\n      margin: 9,\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true,\n      stroke: \"#560788\",\n      font: smallfont\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n    ));\n    myDiagram.nodeTemplateMap.add(\"CNN\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"RoundedRectangle\", {\n      fill: whitegrad,\n      stroke: \"#CF8BF9\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"CNN\\n(unavailable)\", textStyle(), {\n      margin: 9,\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true,\n      stroke: \"#560788\",\n      font: smallfont\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n    ));\n    myDiagram.nodeTemplateMap.add(\"LSTM\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"RoundedRectangle\", {\n      fill: whitegrad,\n      stroke: \"#CF8BF9\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"LSTM\\n(unavailable)\", textStyle(), {\n      margin: 9,\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true,\n      stroke: \"#560788\",\n      font: smallfont\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n    ));\n    myDiagram.nodeTemplateMap.add(\"Softmax\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"RoundedRectangle\", {\n      fill: whitegrad,\n      stroke: \"#CF8BF9\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"Softmax\\n(unavailable)\", textStyle(), {\n      margin: 9,\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true,\n      stroke: \"#560788\",\n      font: smallfont\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n    ));\n    myDiagram.nodeTemplateMap.add(\"Maximum Polling\", $(go.Node, \"Auto\", {\n      locationSpot: go.Spot.Center\n    }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n      selectable: true,\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n    }, $(go.Shape, \"RoundedRectangle\", {\n      fill: whitegrad,\n      stroke: \"#CF8BF9\",\n      strokeWidth: 4\n    }), $(go.TextBlock, \"Maximum\\nPolling\\n(unavailable)\", textStyle(), {\n      margin: 9,\n      maxSize: new go.Size(200, NaN),\n      wrap: go.TextBlock.WrapFit,\n      editable: true,\n      stroke: \"#560788\",\n      font: smallfont\n    }, new go.Binding(\"text\", \"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n    ));\n    var palette = $(go.Palette, \"myPaletteDiv\", // create a new Palette in the HTML DIV element\n    {\n      // share the template map with the Palette\n      nodeTemplateMap: myDiagram.nodeTemplateMap,\n      autoScale: go.Diagram.Uniform // everything always fits in viewport\n\n    });\n    palette.model.nodeDataArray = [{\n      category: \"Data\"\n    }, {\n      category: \"ReLU\"\n    }, {\n      category: \"FC\",\n      reasonsList: [{}]\n    }, {\n      category: \"End\"\n    }, {\n      category: \"CNN\"\n    }, {\n      category: \"RNN\"\n    }, {\n      category: \"LSTM\"\n    }, {\n      category: \"Softmax\"\n    }, {\n      category: \"Maximum Polling\"\n    }];\n    window.myDiagram = myDiagram;\n  },\n  data: function data() {\n    return {\n      canvasData: {\n        topology: \"\"\n      }\n    };\n  },\n  methods: {\n    layout: function layout() {\n      myDiagram.layoutDiagram(true);\n    },\n    save: function save() {\n      console.log(document.getElementById(\"mySavedModel\").value);\n      console.log(\"---------------\");\n      console.log(myDiagram.model.toJson());\n      document.getElementById(\"mySavedModel\").value = myDiagram.model.toJson();\n      myDiagram.isModified = false;\n    },\n    load: function load() {\n      myDiagram.model = go.Model.fromJson(document.getElementById(\"mySavedModel\").value);\n    },\n    compile: function compile() {\n      console.log(canvasData.topology);\n      console.log(myDiagram.model.toJson());\n      axios.post({\n        url: \"/compile\",\n        data: {\n          topology: myDiagram.model.toJson()\n        },\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","go","name","mounted","$","GraphObject","make","yellowgrad","Brush","greengrad","bluegrad","redgrad","whitegrad","bigfont","smallfont","textStyle","margin","wrap","TextBlock","WrapFit","textAlign","editable","font","myDiagram","Diagram","initialAutoScale","Uniform","LinkingTool","ForwardsOnly","layout","LayeredDigraphLayout","isInitial","isOngoing","layerSpacing","nodeSelectionAdornmentTemplate","Adornment","Shape","fill","stroke","strokeWidth","strokeDashArray","Placeholder","nodeTemplate","Node","locationSpot","Spot","Center","Binding","Point","parse","makeTwoWay","stringify","selectable","selectionAdornmentTemplate","portId","fromLinkable","toLinkable","cursor","toEndSegmentLength","fromEndSegmentLength","minSize","Size","NaN","nodeTemplateMap","add","Margin","reasonTemplate","Panel","maxSize","defaultAlignment","RowColumnDefinition","column","width","row","TopLeft","itemTemplate","linkSelectionAdornmentTemplate","isPanelMain","linkTemplate","Link","toShortLength","toArrow","scale","palette","Palette","autoScale","model","nodeDataArray","category","reasonsList","window","data","canvasData","topology","methods","layoutDiagram","save","console","log","document","getElementById","value","toJson","isModified","load","Model","fromJson","compile","post","url","headers"],"sourceRoot":"","sources":["C:\\qp_box\\_CodeField\\Neural-Lego\\frontend\\src\\views\\CanvasView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"allSampleContent\" class=\"p-4 w-full\">\r\n      <div id=\"sample\">\r\n        <div\r\n          style=\"\r\n            width: 100%;\r\n            margin-bottom: 10px;\r\n            display: flex;\r\n            justify-content: space-between;\r\n          \"\r\n        >\r\n          <div\r\n            id=\"myPaletteDiv\"\r\n            style=\"\r\n              width: 150px;\r\n              margin-right: 10px;\r\n              background-color: whitesmoke;\r\n              border: solid 4px #82929b;\r\n            \"\r\n          ></div>\r\n          <div\r\n            id=\"myDiagramDiv\"\r\n            style=\"\r\n              flex-grow: 3;\r\n              margin-right: 10px;\r\n              height: 600px;\r\n              background-color: whitesmoke;\r\n              border: solid 4px #82929b;\r\n            \"\r\n          ></div>\r\n          <div\r\n            id=\"myDiagramDiv\"\r\n            style=\"\r\n              flex-grow: 2;\r\n              height: 600px;\r\n              background-color: whitesmoke;\r\n              border: solid 4px #82929b;\r\n            \"\r\n          ></div>\r\n        </div>\r\n\r\n        <button type=\"submit\" @click=\"save()\">Save</button>\r\n        <button type=\"submit\" @click=\"load()\">Load</button>\r\n        <button type=\"submit\" @click=\"layout()\">Layout</button>\r\n\r\n        <form method=\"post\">\r\n          <input\r\n            v-model=\"canvasData.topology\"\r\n            type=\"hidden\"\r\n            class=\"form-control\"\r\n            id=\"topology\"\r\n            name=\"topology\"\r\n          />\r\n          <button type=\"submit\" @click=\"compile()\">Compile</button>\r\n        </form>\r\n        <br />\r\n        <textarea id=\"mySavedModel\" style=\"width: 100%; height: 300px\">\r\n        {\"class\": \"GraphLinksModel\", \r\n         \"nodeDataArray\": [{\"category\":\"Data\", \"key\":-1, \"loc\":\"-70.5 -90.19999980926514\"}], \r\n         \"linkDataArray\": []}</textarea\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport * as go from \"/public/go.js\";\r\n\r\nexport default {\r\n  name: \"CanvasView\",\r\n  mounted() {\r\n    const $ = go.GraphObject.make; // for conciseness in defining templates\r\n\r\n    var yellowgrad = $(go.Brush, \"Linear\", {\r\n      0: \"#bde0fe\",\r\n      1: \"#bde0fe\",\r\n    });\r\n    var greengrad = $(go.Brush, \"Linear\", {\r\n      0: \"#fdffb6\",\r\n      1: \"#fdffb6\",\r\n    });\r\n    var bluegrad = $(go.Brush, \"Linear\", {\r\n      0: \"#caffbf\",\r\n      1: \"#caffbf\",\r\n    });\r\n    var redgrad = $(go.Brush, \"Linear\", {\r\n      0: \"#ffadad\",\r\n      1: \"#ffadad\",\r\n    });\r\n    var whitegrad = $(go.Brush, \"Linear\", {\r\n      0: \"#E7C5FC\",\r\n      1: \"#E7C5FC\",\r\n    });\r\n    var bigfont = \"bold 15pt Helvetica, Arial, sans-serif\";\r\n    var smallfont = \"bold 13pt Helvetica, Arial, sans-serif\";\r\n\r\n    // Common text styling\r\n    function textStyle() {\r\n      return {\r\n        margin: 6,\r\n        wrap: go.TextBlock.WrapFit,\r\n        textAlign: \"center\",\r\n        editable: true,\r\n        font: bigfont,\r\n      };\r\n    }\r\n\r\n    const myDiagram = $(go.Diagram, \"myDiagramDiv\", {\r\n      initialAutoScale: go.Diagram.Uniform,\r\n      \"linkingTool.direction\": go.LinkingTool.ForwardsOnly,\r\n      layout: $(go.LayeredDigraphLayout, {\r\n        isInitial: false,\r\n        isOngoing: false,\r\n        layerSpacing: 50,\r\n      }),\r\n      \"undoManager.isEnabled\": true,\r\n    });\r\n\r\n    var nodeSelectionAdornmentTemplate = $(\r\n      go.Adornment,\r\n      \"Auto\",\r\n      $(go.Shape, {\r\n        fill: null,\r\n        stroke: \"#979dac\",\r\n        strokeWidth: 2,\r\n        strokeDashArray: [4, 2],\r\n      }),\r\n      $(go.Placeholder)\r\n    );\r\n\r\n    // define the Node template\r\n    myDiagram.nodeTemplate = $(\r\n      go.Node,\r\n      \"Auto\",\r\n      {\r\n        locationSpot: go.Spot.Center,\r\n      },\r\n      new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n        go.Point.stringify\r\n      ),\r\n      {\r\n        selectable: true,\r\n        selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n      },\r\n      // define the node's outer shape, which will surround the TextBlock\r\n      $(go.Shape, \"Rectangle\", {\r\n        fill: yellowgrad,\r\n        stroke: null,\r\n        portId: \"\",\r\n        fromLinkable: true,\r\n        toLinkable: true,\r\n        cursor: \"pointer\",\r\n        toEndSegmentLength: 50,\r\n        fromEndSegmentLength: 50,\r\n      }),\r\n      $(\r\n        go.TextBlock,\r\n        \"ReLU\",\r\n        {\r\n          margin: 6,\r\n          font: bigfont,\r\n          editable: true,\r\n          minSize: new go.Size(40, NaN),\r\n        },\r\n        new go.Binding(\"text\", \"text\").makeTwoWay()\r\n      )\r\n    );\r\n    // Data\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"Data\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n          margin: new go.Margin(0, 0, 0, 0),\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"Circle\", {\r\n          fill: bluegrad,\r\n          portId: \"\",\r\n          fromLinkable: true,\r\n          cursor: \"pointer\",\r\n          //fromEndSegmentLength: 40,\r\n          stroke: \"#74c69d\",\r\n\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"Data\",\r\n          textStyle(),\r\n          {\r\n            stroke: \"#2d6a4f\",\r\n            minSize: new go.Size(40, NaN),\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"End\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"Circle\", {\r\n          fill: redgrad,\r\n          portId: \"\",\r\n          toLinkable: true,\r\n          cursor: \"pointer\",\r\n          fromEndSegmentLength: 40,\r\n          stroke: \"#df7373\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"End\",\r\n          textStyle(),\r\n          {\r\n            stroke: \"#ad2e24\",\r\n            minSize: new go.Size(40, NaN),\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"ReLU\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"Ellipse\", {\r\n          fill: greengrad,\r\n          portId: \"\",\r\n          fromLinkable: true,\r\n          toLinkable: true,\r\n          cursor: \"pointer\",\r\n          fromEndSegmentLength: 40,\r\n          stroke: \"#ffd100\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"ReLU\",\r\n          textStyle(),\r\n          {\r\n            stroke: \"#e2711d\",\r\n            // locationSpot: go.Spot.Center,\r\n            //margin: new go.Margin(10, 0, 0, 0),\r\n            minSize: new go.Size(60, NaN),\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n      )\r\n    );\r\n\r\n    var reasonTemplate = $(\r\n      go.Panel,\r\n      $(\r\n        go.Panel,\r\n        \"Table\",\r\n        {\r\n          maxSize: new go.Size(200, 999),\r\n          margin: new go.Margin(0, 3, 10, 3),\r\n          defaultAlignment: go.Spot.Center,\r\n        },\r\n        $(go.RowColumnDefinition, {\r\n          column: 2,\r\n          width: 2,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"input = \",\r\n          {\r\n            margin: new go.Margin(4, 0, 0, 0),\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            //stroke: \"whitesmoke\",\r\n            editable: true,\r\n            font: smallfont,\r\n            row: 2,\r\n            column: 0,\r\n            stroke: \"#3e5c76\",\r\n          },\r\n          new go.Binding(\"text\", \"text0\").makeTwoWay()\r\n        ),\r\n\r\n        $(\r\n          go.TextBlock,\r\n          \"value\",\r\n          {\r\n            margin: new go.Margin(4, 0, 0, 0),\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            //stroke: \"whitesmoke\",\r\n            editable: true,\r\n            stroke: \"#3e5c76\",\r\n            font: smallfont,\r\n            row: 2,\r\n            column: 1,\r\n          },\r\n          new go.Binding(\"text\", \"text1\").makeTwoWay()\r\n        ),\r\n\r\n        $(\r\n          go.TextBlock,\r\n          \"output = \",\r\n          {\r\n            margin: new go.Margin(4, 0, 0, 0),\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            //stroke: \"whitesmoke\",\r\n            editable: true,\r\n            font: smallfont,\r\n            stroke: \"#3e5c76\",\r\n            row: 3,\r\n            column: 0,\r\n          },\r\n          new go.Binding(\"text\", \"text2\").makeTwoWay()\r\n        ),\r\n\r\n        $(\r\n          go.TextBlock,\r\n          \"value\",\r\n          {\r\n            margin: new go.Margin(4, 0, 0, 9),\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            //stroke: \"whitesmoke\",\r\n            editable: true,\r\n            font: smallfont,\r\n            stroke: \"#3e5c76\",\r\n            row: 3,\r\n            column: 1,\r\n          },\r\n          new go.Binding(\"text\", \"text3\").makeTwoWay()\r\n        )\r\n      ) // end Table Panel\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"FC\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: yellowgrad,\r\n          stroke: \"#4ea8de\",\r\n          strokeWidth: 4,\r\n          portId: \"\",\r\n          fromLinkable: true,\r\n          toLinkable: true,\r\n          cursor: \"pointer\",\r\n          toEndSegmentLength: 50,\r\n          fromEndSegmentLength: 40,\r\n        }),\r\n        $(\r\n          go.Panel,\r\n          \"Vertical\",\r\n          {\r\n            defaultAlignment: go.Spot.Center,\r\n          },\r\n\r\n          $(\r\n            go.TextBlock,\r\n            \"FC\",\r\n            textStyle(),\r\n            {\r\n              stroke: \"#3e5c76\",\r\n              margin: new go.Margin(8, 0, 0, 0),\r\n              minSize: new go.Size(100, NaN),\r\n              //maxSize: new go.Size(200, NaN)\r\n            },\r\n            new go.Binding(\"text\", \"text\").makeTwoWay()\r\n          ),\r\n\r\n          $(\r\n            go.Panel,\r\n            \"Vertical\",\r\n            {\r\n              defaultAlignment: go.Spot.TopLeft,\r\n              itemTemplate: reasonTemplate,\r\n            },\r\n            new go.Binding(\"itemArray\", \"reasonsList\").makeTwoWay()\r\n          )\r\n        )\r\n      )\r\n    );\r\n\r\n    var linkSelectionAdornmentTemplate = $(\r\n      go.Adornment,\r\n      \"Link\",\r\n      $(\r\n        go.Shape,\r\n        // isPanelMain declares that this Shape shares the Link.geometry\r\n        {\r\n          isPanelMain: true,\r\n          fill: null,\r\n          stroke: \"deepskyblue\",\r\n          strokeWidth: 2.5,\r\n        }\r\n      ) // use selection object's strokeWidth\r\n    );\r\n    // replace the default Link template in the linkTemplateMap\r\n    myDiagram.linkTemplate = $(\r\n      go.Link, // the whole link panel\r\n      {\r\n        selectable: true,\r\n        selectionAdornmentTemplate: linkSelectionAdornmentTemplate,\r\n      },\r\n      new go.Binding(\"points\").makeTwoWay(),\r\n      {\r\n        //curve: go.Link.Bezier,\r\n        toShortLength: 15,\r\n      },\r\n      //new go.Binding(\"curviness\", \"curviness\"),\r\n      $(\r\n        go.Shape, // the link shape\r\n        {\r\n          stroke: \"#979dac\",\r\n          strokeWidth: 2.5,\r\n        }\r\n      ),\r\n      $(\r\n        go.Shape, // the arrowhead\r\n        {\r\n          toArrow: \"kite\",\r\n          fill: \"#979dac\",\r\n          stroke: null,\r\n          scale: 2,\r\n        }\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"RNN\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: whitegrad,\r\n          stroke: \"#CF8BF9\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"RNN\\n(unavailable)\",\r\n          textStyle(),\r\n          {\r\n            margin: 9,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            editable: true,\r\n            stroke: \"#560788\",\r\n            font: smallfont,\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n        // no ports, because no links are allowed to connect with a comment\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"CNN\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: whitegrad,\r\n          stroke: \"#CF8BF9\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"CNN\\n(unavailable)\",\r\n          textStyle(),\r\n          {\r\n            margin: 9,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            editable: true,\r\n            stroke: \"#560788\",\r\n            font: smallfont,\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n        // no ports, because no links are allowed to connect with a comment\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"LSTM\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: whitegrad,\r\n          stroke: \"#CF8BF9\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"LSTM\\n(unavailable)\",\r\n          textStyle(),\r\n          {\r\n            margin: 9,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            editable: true,\r\n            stroke: \"#560788\",\r\n            font: smallfont,\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n        // no ports, because no links are allowed to connect with a comment\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"Softmax\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: whitegrad,\r\n          stroke: \"#CF8BF9\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"Softmax\\n(unavailable)\",\r\n          textStyle(),\r\n          {\r\n            margin: 9,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            editable: true,\r\n            stroke: \"#560788\",\r\n            font: smallfont,\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n        // no ports, because no links are allowed to connect with a comment\r\n      )\r\n    );\r\n\r\n    myDiagram.nodeTemplateMap.add(\r\n      \"Maximum Polling\",\r\n      $(\r\n        go.Node,\r\n        \"Auto\",\r\n        {\r\n          locationSpot: go.Spot.Center,\r\n        },\r\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n          go.Point.stringify\r\n        ),\r\n        {\r\n          selectable: true,\r\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n        },\r\n        $(go.Shape, \"RoundedRectangle\", {\r\n          fill: whitegrad,\r\n          stroke: \"#CF8BF9\",\r\n          strokeWidth: 4,\r\n        }),\r\n        $(\r\n          go.TextBlock,\r\n          \"Maximum\\nPolling\\n(unavailable)\",\r\n          textStyle(),\r\n          {\r\n            margin: 9,\r\n            maxSize: new go.Size(200, NaN),\r\n            wrap: go.TextBlock.WrapFit,\r\n            editable: true,\r\n            stroke: \"#560788\",\r\n            font: smallfont,\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        )\r\n        // no ports, because no links are allowed to connect with a comment\r\n      )\r\n    );\r\n\r\n    var palette = $(\r\n      go.Palette,\r\n      \"myPaletteDiv\", // create a new Palette in the HTML DIV element\r\n      {\r\n        // share the template map with the Palette\r\n        nodeTemplateMap: myDiagram.nodeTemplateMap,\r\n        autoScale: go.Diagram.Uniform, // everything always fits in viewport\r\n      }\r\n    );\r\n\r\n    palette.model.nodeDataArray = [\r\n      {\r\n        category: \"Data\",\r\n      },\r\n      {\r\n        category: \"ReLU\",\r\n      },\r\n      {\r\n        category: \"FC\",\r\n        reasonsList: [{}],\r\n      },\r\n      {\r\n        category: \"End\",\r\n      },\r\n      {\r\n        category: \"CNN\",\r\n      },\r\n      {\r\n        category: \"RNN\",\r\n      },\r\n      {\r\n        category: \"LSTM\",\r\n      },\r\n      {\r\n        category: \"Softmax\",\r\n      },\r\n      {\r\n        category: \"Maximum Polling\",\r\n      },\r\n    ];\r\n\r\n    window.myDiagram = myDiagram;\r\n  },\r\n  data() {\r\n    return {\r\n      canvasData: {\r\n        topology: \"\",\r\n      },\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    layout() {\r\n      myDiagram.layoutDiagram(true);\r\n    },\r\n    save() {\r\n      console.log(document.getElementById(\"mySavedModel\").value);\r\n      console.log(\"---------------\");\r\n      console.log(myDiagram.model.toJson());\r\n\r\n      document.getElementById(\"mySavedModel\").value = myDiagram.model.toJson();\r\n      myDiagram.isModified = false;\r\n    },\r\n    load() {\r\n      myDiagram.model = go.Model.fromJson(\r\n        document.getElementById(\"mySavedModel\").value\r\n      );\r\n    },\r\n    compile() {\r\n      console.log(canvasData.topology);\r\n      console.log(myDiagram.model.toJson());\r\n      axios.post({\r\n        url: \"/compile\",\r\n        data: {\r\n          topology: myDiagram.model.toJson(),\r\n        },\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n#myPaletteDiv:hover {\r\n  /* box-shadow: 1px 1px #82929B, 2px 2px #82929B, 3px 3px #82929B;\r\n            -webkit-transform: translateX(-3px);\r\n            transform: translateX(-3px);\r\n            transition: .5s ease; */\r\n  /* -webkit-transform: scale(1.2); */\r\n  /* -ms-transform: scale(1.2); */\r\n  transform: scale(1.015);\r\n  transition: 1s ease;\r\n}\r\n\r\n#myDiagramDiv:hover {\r\n  /* box-shadow: 1px 1px #82929B, 2px 2px #82929B, 3px 3px #82929B;\r\n            -webkit-transform: translateX(-3px);\r\n            transform: translateX(-3px);\r\n            transition: .5s ease; */\r\n  /* -webkit-transform: scale(1.2); */\r\n  /* -ms-transform: scale(1.2); */\r\n  transform: scale(1.01);\r\n  transition: 1s ease;\r\n}\r\n\r\n#myPaletteDiv {\r\n  border-radius: 7px;\r\n}\r\n\r\n#myDiagramDiv {\r\n  border-radius: 7px;\r\n}\r\n\r\n.button,\r\nbutton {\r\n  --tw-bg-opacity: 1;\r\n  background-color: rgba(31, 73, 99, var(--tw-bg-opacity));\r\n  border-radius: 0.25rem;\r\n  display: inline-block;\r\n  margin: 0.25rem;\r\n  font-size: 12pt;\r\n  font-family: Helvetica, Arial;\r\n  padding-top: 0.25rem;\r\n  padding-bottom: 0.25rem;\r\n  padding-left: 0.5rem;\r\n  padding-right: 0.5rem;\r\n  --tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\r\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),\r\n    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\r\n  --tw-text-opacity: 1;\r\n  color: rgba(255, 255, 255, var(--tw-text-opacity));\r\n}\r\n\r\n.button:hover,\r\nbutton:hover {\r\n  --tw-bg-opacity: 1;\r\n  background-color: rgba(98, 127, 145, var(--tw-bg-opacity));\r\n  --tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\r\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),\r\n    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\r\n  --tw-text-opacity: 1;\r\n  color: rgba(255, 255, 255, var(--tw-text-opacity));\r\n  transition-property: background-color, border-color, color, fill, stroke;\r\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\r\n  transition-duration: 150ms;\r\n  transition-duration: 0.2s;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}