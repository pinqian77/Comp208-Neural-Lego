{"ast":null,"code":"export default {\n  name: \"canvasView\",\n  data: function data() {\n    return {};\n  },\n  methods: {}\n};\n\nfunction init() {\n  var $ = go.GraphObject.make; // for conciseness in defining templates\n\n  var yellowgrad = $(go.Brush, \"Linear\", {\n    0: \"#bde0fe\",\n    1: \"#bde0fe\"\n  });\n  var greengrad = $(go.Brush, \"Linear\", {\n    0: \"#fdffb6\",\n    1: \"#fdffb6\"\n  });\n  var bluegrad = $(go.Brush, \"Linear\", {\n    0: \"#caffbf\",\n    1: \"#caffbf\"\n  });\n  var redgrad = $(go.Brush, \"Linear\", {\n    0: \"#ffadad\",\n    1: \"#ffadad\"\n  });\n  var whitegrad = $(go.Brush, \"Linear\", {\n    0: \"#E7C5FC\",\n    1: \"#E7C5FC\"\n  });\n  var bigfont = \"bold 15pt Helvetica, Arial, sans-serif\";\n  var smallfont = \"bold 13pt Helvetica, Arial, sans-serif\"; // Common text styling\n\n  function textStyle() {\n    return {\n      margin: 6,\n      wrap: go.TextBlock.WrapFit,\n      textAlign: \"center\",\n      editable: true,\n      font: bigfont\n    };\n  }\n\n  myDiagram = $(go.Diagram, \"myDiagramDiv\", {\n    // // have mouse wheel events zoom in and out instead of scroll up and down\n    //\"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom,\n    initialAutoScale: go.Diagram.Uniform,\n    \"linkingTool.direction\": go.LinkingTool.ForwardsOnly,\n    layout: $(go.LayeredDigraphLayout, {\n      isInitial: false,\n      isOngoing: false,\n      layerSpacing: 50\n    }),\n    \"undoManager.isEnabled\": true\n  });\n  var nodeSelectionAdornmentTemplate = $(go.Adornment, \"Auto\", $(go.Shape, {\n    fill: null,\n    stroke: \"#979dac\",\n    strokeWidth: 2,\n    strokeDashArray: [4, 2]\n  }), $(go.Placeholder)); // define the Node template\n\n  myDiagram.nodeTemplate = $(go.Node, \"Auto\", {\n    locationSpot: go.Spot.Center\n  }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n    selectable: true,\n    selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n  }, // define the node's outer shape, which will surround the TextBlock\n  $(go.Shape, \"Rectangle\", {\n    fill: yellowgrad,\n    stroke: null,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true,\n    cursor: \"pointer\",\n    toEndSegmentLength: 50,\n    fromEndSegmentLength: 50\n  }), $(go.TextBlock, \"ReLU\", {\n    margin: 6,\n    font: bigfont,\n    editable: true,\n    minSize: new go.Size(40, NaN)\n  }, new go.Binding(\"text\", \"text\").makeTwoWay())); // Data\n\n  myDiagram.nodeTemplateMap.add(\"Data\", $(go.Node, \"Auto\", {\n    locationSpot: go.Spot.Center,\n    margin: new go.Margin(0, 0, 0, 0)\n  }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n    selectable: true,\n    selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n  }, $(go.Shape, \"Circle\", {\n    fill: bluegrad,\n    portId: \"\",\n    fromLinkable: true,\n    cursor: \"pointer\",\n    //fromEndSegmentLength: 40,\n    stroke: \"#74c69d\",\n    strokeWidth: 4\n  }), $(go.TextBlock, \"Data\", textStyle(), {\n    stroke: \"#2d6a4f\",\n    minSize: new go.Size(40, NaN)\n  }, new go.Binding(\"text\", \"text\").makeTwoWay())));\n  myDiagram.nodeTemplateMap.add(\"End\", $(go.Node, \"Auto\", {\n    locationSpot: go.Spot.Center\n  }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n    selectable: true,\n    selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n  }, $(go.Shape, \"Circle\", {\n    fill: redgrad,\n    portId: \"\",\n    toLinkable: true,\n    cursor: \"pointer\",\n    fromEndSegmentLength: 40,\n    stroke: \"#df7373\",\n    strokeWidth: 4\n  }), $(go.TextBlock, \"End\", textStyle(), {\n    stroke: \"#ad2e24\",\n    minSize: new go.Size(40, NaN)\n  }, new go.Binding(\"text\", \"text\").makeTwoWay())));\n  myDiagram.nodeTemplateMap.add(\"ReLU\", $(go.Node, \"Auto\", {\n    locationSpot: go.Spot.Center\n  }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n    selectable: true,\n    selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n  }, $(go.Shape, \"Ellipse\", {\n    fill: greengrad,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true,\n    cursor: \"pointer\",\n    fromEndSegmentLength: 40,\n    stroke: \"#ffd100\",\n    strokeWidth: 4\n  }), $(go.TextBlock, \"ReLU\", textStyle(), {\n    stroke: \"#e2711d\",\n    // locationSpot: go.Spot.Center,\n    //margin: new go.Margin(10, 0, 0, 0),\n    minSize: new go.Size(60, NaN)\n  }, new go.Binding(\"text\", \"text\").makeTwoWay())));\n  var reasonTemplate = $(go.Panel, $(go.Panel, \"Table\", {\n    maxSize: new go.Size(200, 999),\n    margin: new go.Margin(0, 3, 10, 3),\n    defaultAlignment: go.Spot.Center\n  }, $(go.RowColumnDefinition, {\n    column: 2,\n    width: 2\n  }), $(go.TextBlock, \"input = \", {\n    margin: new go.Margin(4, 0, 0, 0),\n    maxSize: new go.Size(200, NaN),\n    wrap: go.TextBlock.WrapFit,\n    //stroke: \"whitesmoke\",\n    editable: true,\n    font: smallfont,\n    row: 2,\n    column: 0,\n    stroke: \"#3e5c76\"\n  }, new go.Binding(\"text\", \"text0\").makeTwoWay()), $(go.TextBlock, \"value\", {\n    margin: new go.Margin(4, 0, 0, 0),\n    maxSize: new go.Size(200, NaN),\n    wrap: go.TextBlock.WrapFit,\n    //stroke: \"whitesmoke\",\n    editable: true,\n    stroke: \"#3e5c76\",\n    font: smallfont,\n    row: 2,\n    column: 1\n  }, new go.Binding(\"text\", \"text1\").makeTwoWay()), $(go.TextBlock, \"output = \", {\n    margin: new go.Margin(4, 0, 0, 0),\n    maxSize: new go.Size(200, NaN),\n    wrap: go.TextBlock.WrapFit,\n    //stroke: \"whitesmoke\",\n    editable: true,\n    font: smallfont,\n    stroke: \"#3e5c76\",\n    row: 3,\n    column: 0\n  }, new go.Binding(\"text\", \"text2\").makeTwoWay()), $(go.TextBlock, \"value\", {\n    margin: new go.Margin(4, 0, 0, 9),\n    maxSize: new go.Size(200, NaN),\n    wrap: go.TextBlock.WrapFit,\n    //stroke: \"whitesmoke\",\n    editable: true,\n    font: smallfont,\n    stroke: \"#3e5c76\",\n    row: 3,\n    column: 1\n  }, new go.Binding(\"text\", \"text3\").makeTwoWay())) // end Table Panel\n  );\n  myDiagram.nodeTemplateMap.add(\"FC\", $(go.Node, \"Auto\", {\n    locationSpot: go.Spot.Center\n  }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n    selectable: true,\n    selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n  }, $(go.Shape, \"RoundedRectangle\", {\n    fill: yellowgrad,\n    stroke: \"#4ea8de\",\n    strokeWidth: 4,\n    portId: \"\",\n    fromLinkable: true,\n    toLinkable: true,\n    cursor: \"pointer\",\n    toEndSegmentLength: 50,\n    fromEndSegmentLength: 40\n  }), $(go.Panel, \"Vertical\", {\n    defaultAlignment: go.Spot.Center\n  }, $(go.TextBlock, \"FC\", textStyle(), {\n    stroke: \"#3e5c76\",\n    margin: new go.Margin(8, 0, 0, 0),\n    minSize: new go.Size(100, NaN) //maxSize: new go.Size(200, NaN)\n\n  }, new go.Binding(\"text\", \"text\").makeTwoWay()), $(go.Panel, \"Vertical\", {\n    defaultAlignment: go.Spot.TopLeft,\n    itemTemplate: reasonTemplate\n  }, new go.Binding(\"itemArray\", \"reasonsList\").makeTwoWay()))));\n  var linkSelectionAdornmentTemplate = $(go.Adornment, \"Link\", $(go.Shape, // isPanelMain declares that this Shape shares the Link.geometry\n  {\n    isPanelMain: true,\n    fill: null,\n    stroke: \"deepskyblue\",\n    strokeWidth: 2.5\n  }) // use selection object's strokeWidth\n  ); // replace the default Link template in the linkTemplateMap\n\n  myDiagram.linkTemplate = $(go.Link, // the whole link panel\n  {\n    selectable: true,\n    selectionAdornmentTemplate: linkSelectionAdornmentTemplate\n  }, new go.Binding(\"points\").makeTwoWay(), {\n    //curve: go.Link.Bezier,\n    toShortLength: 15\n  }, //new go.Binding(\"curviness\", \"curviness\"),\n  $(go.Shape, // the link shape\n  {\n    stroke: \"#979dac\",\n    strokeWidth: 2.5\n  }), $(go.Shape, // the arrowhead\n  {\n    toArrow: \"kite\",\n    fill: \"#979dac\",\n    stroke: null,\n    scale: 2\n  }));\n  myDiagram.nodeTemplateMap.add(\"RNN\", $(go.Node, \"Auto\", {\n    locationSpot: go.Spot.Center\n  }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n    selectable: true,\n    selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n  }, $(go.Shape, \"RoundedRectangle\", {\n    fill: whitegrad,\n    stroke: \"#CF8BF9\",\n    strokeWidth: 4\n  }), $(go.TextBlock, \"RNN\\n(unavailable)\", textStyle(), {\n    margin: 9,\n    maxSize: new go.Size(200, NaN),\n    wrap: go.TextBlock.WrapFit,\n    editable: true,\n    stroke: \"#560788\",\n    font: smallfont\n  }, new go.Binding(\"text\", \"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n  ));\n  myDiagram.nodeTemplateMap.add(\"CNN\", $(go.Node, \"Auto\", {\n    locationSpot: go.Spot.Center\n  }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n    selectable: true,\n    selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n  }, $(go.Shape, \"RoundedRectangle\", {\n    fill: whitegrad,\n    stroke: \"#CF8BF9\",\n    strokeWidth: 4\n  }), $(go.TextBlock, \"CNN\\n(unavailable)\", textStyle(), {\n    margin: 9,\n    maxSize: new go.Size(200, NaN),\n    wrap: go.TextBlock.WrapFit,\n    editable: true,\n    stroke: \"#560788\",\n    font: smallfont\n  }, new go.Binding(\"text\", \"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n  ));\n  myDiagram.nodeTemplateMap.add(\"LSTM\", $(go.Node, \"Auto\", {\n    locationSpot: go.Spot.Center\n  }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n    selectable: true,\n    selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n  }, $(go.Shape, \"RoundedRectangle\", {\n    fill: whitegrad,\n    stroke: \"#CF8BF9\",\n    strokeWidth: 4\n  }), $(go.TextBlock, \"LSTM\\n(unavailable)\", textStyle(), {\n    margin: 9,\n    maxSize: new go.Size(200, NaN),\n    wrap: go.TextBlock.WrapFit,\n    editable: true,\n    stroke: \"#560788\",\n    font: smallfont\n  }, new go.Binding(\"text\", \"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n  ));\n  myDiagram.nodeTemplateMap.add(\"Softmax\", $(go.Node, \"Auto\", {\n    locationSpot: go.Spot.Center\n  }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n    selectable: true,\n    selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n  }, $(go.Shape, \"RoundedRectangle\", {\n    fill: whitegrad,\n    stroke: \"#CF8BF9\",\n    strokeWidth: 4\n  }), $(go.TextBlock, \"Softmax\\n(unavailable)\", textStyle(), {\n    margin: 9,\n    maxSize: new go.Size(200, NaN),\n    wrap: go.TextBlock.WrapFit,\n    editable: true,\n    stroke: \"#560788\",\n    font: smallfont\n  }, new go.Binding(\"text\", \"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n  ));\n  myDiagram.nodeTemplateMap.add(\"Maximum Polling\", $(go.Node, \"Auto\", {\n    locationSpot: go.Spot.Center\n  }, new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify), {\n    selectable: true,\n    selectionAdornmentTemplate: nodeSelectionAdornmentTemplate\n  }, $(go.Shape, \"RoundedRectangle\", {\n    fill: whitegrad,\n    stroke: \"#CF8BF9\",\n    strokeWidth: 4\n  }), $(go.TextBlock, \"Maximum\\nPolling\\n(unavailable)\", textStyle(), {\n    margin: 9,\n    maxSize: new go.Size(200, NaN),\n    wrap: go.TextBlock.WrapFit,\n    editable: true,\n    stroke: \"#560788\",\n    font: smallfont\n  }, new go.Binding(\"text\", \"text\").makeTwoWay()) // no ports, because no links are allowed to connect with a comment\n  ));\n  var palette = $(go.Palette, \"myPaletteDiv\", // create a new Palette in the HTML DIV element\n  {\n    // share the template map with the Palette\n    nodeTemplateMap: myDiagram.nodeTemplateMap,\n    autoScale: go.Diagram.Uniform // everything always fits in viewport\n\n  });\n  palette.model.nodeDataArray = [{\n    category: \"Data\"\n  }, {\n    category: \"ReLU\"\n  }, {\n    category: \"FC\",\n    reasonsList: [{}]\n  }, {\n    category: \"End\"\n  }, {\n    category: \"CNN\"\n  }, {\n    category: \"RNN\"\n  }, {\n    category: \"LSTM\"\n  }, {\n    category: \"Softmax\"\n  }, {\n    category: \"Maximum Polling\"\n  }]; // read in the JSON-format data from the \"mySavedModel\" element\n\n  load();\n  layout();\n}\n\nfunction layout() {\n  myDiagram.layoutDiagram(true);\n} // Show the diagram's model in JSON format\n\n\nfunction save() {\n  document.getElementById(\"mySavedModel\").value = myDiagram.model.toJson();\n  myDiagram.isModified = false;\n}\n\nfunction load() {\n  myDiagram.model = go.Model.fromJson(document.getElementById(\"mySavedModel\").value);\n}\n\nwindow.addEventListener(\"DOMContentLoaded\", init);","map":{"version":3,"mappings":"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","names":["name","data","methods","init","$","go","GraphObject","make","yellowgrad","Brush","greengrad","bluegrad","redgrad","whitegrad","bigfont","smallfont","textStyle","margin","wrap","TextBlock","WrapFit","textAlign","editable","font","myDiagram","Diagram","initialAutoScale","Uniform","LinkingTool","ForwardsOnly","layout","LayeredDigraphLayout","isInitial","isOngoing","layerSpacing","nodeSelectionAdornmentTemplate","Adornment","Shape","fill","stroke","strokeWidth","strokeDashArray","Placeholder","nodeTemplate","Node","locationSpot","Spot","Center","Binding","Point","parse","makeTwoWay","stringify","selectable","selectionAdornmentTemplate","portId","fromLinkable","toLinkable","cursor","toEndSegmentLength","fromEndSegmentLength","minSize","Size","NaN","nodeTemplateMap","add","Margin","reasonTemplate","Panel","maxSize","defaultAlignment","RowColumnDefinition","column","width","row","TopLeft","itemTemplate","linkSelectionAdornmentTemplate","isPanelMain","linkTemplate","Link","toShortLength","toArrow","scale","palette","Palette","autoScale","model","nodeDataArray","category","reasonsList","load","layoutDiagram","save","document","getElementById","value","toJson","isModified","Model","fromJson","window","addEventListener"],"sourceRoot":"","sources":["C:\\qp_box\\_CodeField\\Neural-Lego\\frontend\\src\\views\\CanvasView.vue"],"sourcesContent":["<template>\r\n  <!DOCTYPE html>\r\n  <html lang=\"en\">\r\n    <head>\r\n      <meta charset=\"utf-8\" />\r\n      <meta\r\n        name=\"viewport\"\r\n        content=\"width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover\"\r\n      />\r\n      <meta\r\n        name=\"description\"\r\n        content=\"A workflow diagram showing navigation between web pages, with an editable list of comments and to-dos.\"\r\n      />\r\n      <!-- <link rel=\"stylesheet\" href=\"style.css\" /> -->\r\n      <!-- Copyright 1998-2022 by Northwoods Software Corporation. -->\r\n      <title>Page Flow</title>\r\n    </head>\r\n\r\n    <body>\r\n      <script src=\"assets/go.js\"></script>\r\n      <div id=\"allSampleContent\" class=\"p-4 w-full\">\r\n        <div id=\"sample\">\r\n          <div\r\n            style=\"\r\n              width: 100%;\r\n              margin-bottom: 10px;\r\n              display: flex;\r\n              justify-content: space-between;\r\n            \"\r\n          >\r\n            <div\r\n              id=\"myPaletteDiv\"\r\n              style=\"\r\n                width: 150px;\r\n                margin-right: 10px;\r\n                background-color: whitesmoke;\r\n                border: solid 4px #82929b;\r\n              \"\r\n            ></div>\r\n            <div\r\n              id=\"myDiagramDiv\"\r\n              style=\"\r\n                flex-grow: 3;\r\n                margin-right: 10px;\r\n                height: 600px;\r\n                background-color: whitesmoke;\r\n                border: solid 4px #82929b;\r\n              \"\r\n            ></div>\r\n            <div\r\n              id=\"myDiagramDiv\"\r\n              style=\"\r\n                flex-grow: 2;\r\n                height: 600px;\r\n                background-color: whitesmoke;\r\n                border: solid 4px #82929b;\r\n              \"\r\n            ></div>\r\n          </div>\r\n\r\n          <button id=\"SaveButton\" onclick=\"save()\">Save</button>\r\n          <button onclick=\"load()\">Load</button>\r\n          <button onclick=\"layout()\">Layout</button>\r\n          <br />\r\n          <textarea id=\"mySavedModel\" style=\"width: 100%; height: 300px\">\r\n{ \"class\": \"GraphLinksModel\", \r\n\"nodeDataArray\": [ {\"category\":\"Data\", \"key\":-1, \"loc\":\"-70.5 -90.19999980926514\"} ], \r\n\"linkDataArray\": []}\r\n  </textarea\r\n          >\r\n        </div>\r\n      </div>\r\n    </body>\r\n  </html>\r\n</template>\r\n\r\n<script id=\"code\">\r\nexport default {\r\n  name: \"canvasView\",\r\n  data() {\r\n    return {};\r\n  },\r\n\r\n  methods: {},\r\n};\r\n\r\nfunction init() {\r\n  const $ = go.GraphObject.make; // for conciseness in defining templates\r\n\r\n  var yellowgrad = $(go.Brush, \"Linear\", {\r\n    0: \"#bde0fe\",\r\n    1: \"#bde0fe\",\r\n  });\r\n  var greengrad = $(go.Brush, \"Linear\", {\r\n    0: \"#fdffb6\",\r\n    1: \"#fdffb6\",\r\n  });\r\n  var bluegrad = $(go.Brush, \"Linear\", {\r\n    0: \"#caffbf\",\r\n    1: \"#caffbf\",\r\n  });\r\n  var redgrad = $(go.Brush, \"Linear\", {\r\n    0: \"#ffadad\",\r\n    1: \"#ffadad\",\r\n  });\r\n  var whitegrad = $(go.Brush, \"Linear\", {\r\n    0: \"#E7C5FC\",\r\n    1: \"#E7C5FC\",\r\n  });\r\n\r\n  var bigfont = \"bold 15pt Helvetica, Arial, sans-serif\";\r\n  var smallfont = \"bold 13pt Helvetica, Arial, sans-serif\";\r\n\r\n  // Common text styling\r\n  function textStyle() {\r\n    return {\r\n      margin: 6,\r\n      wrap: go.TextBlock.WrapFit,\r\n      textAlign: \"center\",\r\n      editable: true,\r\n      font: bigfont,\r\n    };\r\n  }\r\n\r\n  myDiagram = $(go.Diagram, \"myDiagramDiv\", {\r\n    // // have mouse wheel events zoom in and out instead of scroll up and down\r\n    //\"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom,\r\n    initialAutoScale: go.Diagram.Uniform,\r\n    \"linkingTool.direction\": go.LinkingTool.ForwardsOnly,\r\n    layout: $(go.LayeredDigraphLayout, {\r\n      isInitial: false,\r\n      isOngoing: false,\r\n      layerSpacing: 50,\r\n    }),\r\n    \"undoManager.isEnabled\": true,\r\n  });\r\n\r\n  var nodeSelectionAdornmentTemplate = $(\r\n    go.Adornment,\r\n    \"Auto\",\r\n    $(go.Shape, {\r\n      fill: null,\r\n      stroke: \"#979dac\",\r\n      strokeWidth: 2,\r\n      strokeDashArray: [4, 2],\r\n    }),\r\n    $(go.Placeholder)\r\n  );\r\n\r\n  // define the Node template\r\n  myDiagram.nodeTemplate = $(\r\n    go.Node,\r\n    \"Auto\",\r\n    {\r\n      locationSpot: go.Spot.Center,\r\n    },\r\n    new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n      go.Point.stringify\r\n    ),\r\n    {\r\n      selectable: true,\r\n      selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n    },\r\n    // define the node's outer shape, which will surround the TextBlock\r\n    $(go.Shape, \"Rectangle\", {\r\n      fill: yellowgrad,\r\n      stroke: null,\r\n      portId: \"\",\r\n      fromLinkable: true,\r\n      toLinkable: true,\r\n      cursor: \"pointer\",\r\n      toEndSegmentLength: 50,\r\n      fromEndSegmentLength: 50,\r\n    }),\r\n    $(\r\n      go.TextBlock,\r\n      \"ReLU\",\r\n      {\r\n        margin: 6,\r\n        font: bigfont,\r\n        editable: true,\r\n        minSize: new go.Size(40, NaN),\r\n      },\r\n      new go.Binding(\"text\", \"text\").makeTwoWay()\r\n    )\r\n  );\r\n\r\n  // Data\r\n  myDiagram.nodeTemplateMap.add(\r\n    \"Data\",\r\n    $(\r\n      go.Node,\r\n      \"Auto\",\r\n      {\r\n        locationSpot: go.Spot.Center,\r\n        margin: new go.Margin(0, 0, 0, 0),\r\n      },\r\n      new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n        go.Point.stringify\r\n      ),\r\n      {\r\n        selectable: true,\r\n        selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n      },\r\n      $(go.Shape, \"Circle\", {\r\n        fill: bluegrad,\r\n        portId: \"\",\r\n        fromLinkable: true,\r\n        cursor: \"pointer\",\r\n        //fromEndSegmentLength: 40,\r\n        stroke: \"#74c69d\",\r\n\r\n        strokeWidth: 4,\r\n      }),\r\n      $(\r\n        go.TextBlock,\r\n        \"Data\",\r\n        textStyle(),\r\n        {\r\n          stroke: \"#2d6a4f\",\r\n          minSize: new go.Size(40, NaN),\r\n        },\r\n        new go.Binding(\"text\", \"text\").makeTwoWay()\r\n      )\r\n    )\r\n  );\r\n\r\n  myDiagram.nodeTemplateMap.add(\r\n    \"End\",\r\n    $(\r\n      go.Node,\r\n      \"Auto\",\r\n      {\r\n        locationSpot: go.Spot.Center,\r\n      },\r\n      new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n        go.Point.stringify\r\n      ),\r\n      {\r\n        selectable: true,\r\n        selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n      },\r\n      $(go.Shape, \"Circle\", {\r\n        fill: redgrad,\r\n        portId: \"\",\r\n        toLinkable: true,\r\n        cursor: \"pointer\",\r\n        fromEndSegmentLength: 40,\r\n        stroke: \"#df7373\",\r\n        strokeWidth: 4,\r\n      }),\r\n      $(\r\n        go.TextBlock,\r\n        \"End\",\r\n        textStyle(),\r\n        {\r\n          stroke: \"#ad2e24\",\r\n          minSize: new go.Size(40, NaN),\r\n        },\r\n        new go.Binding(\"text\", \"text\").makeTwoWay()\r\n      )\r\n    )\r\n  );\r\n\r\n  myDiagram.nodeTemplateMap.add(\r\n    \"ReLU\",\r\n    $(\r\n      go.Node,\r\n      \"Auto\",\r\n      {\r\n        locationSpot: go.Spot.Center,\r\n      },\r\n      new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n        go.Point.stringify\r\n      ),\r\n      {\r\n        selectable: true,\r\n        selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n      },\r\n      $(go.Shape, \"Ellipse\", {\r\n        fill: greengrad,\r\n        portId: \"\",\r\n        fromLinkable: true,\r\n        toLinkable: true,\r\n        cursor: \"pointer\",\r\n        fromEndSegmentLength: 40,\r\n        stroke: \"#ffd100\",\r\n        strokeWidth: 4,\r\n      }),\r\n      $(\r\n        go.TextBlock,\r\n        \"ReLU\",\r\n        textStyle(),\r\n        {\r\n          stroke: \"#e2711d\",\r\n          // locationSpot: go.Spot.Center,\r\n          //margin: new go.Margin(10, 0, 0, 0),\r\n          minSize: new go.Size(60, NaN),\r\n        },\r\n        new go.Binding(\"text\", \"text\").makeTwoWay()\r\n      )\r\n    )\r\n  );\r\n\r\n  var reasonTemplate = $(\r\n    go.Panel,\r\n    $(\r\n      go.Panel,\r\n      \"Table\",\r\n      {\r\n        maxSize: new go.Size(200, 999),\r\n        margin: new go.Margin(0, 3, 10, 3),\r\n        defaultAlignment: go.Spot.Center,\r\n      },\r\n      $(go.RowColumnDefinition, {\r\n        column: 2,\r\n        width: 2,\r\n      }),\r\n      $(\r\n        go.TextBlock,\r\n        \"input = \",\r\n        {\r\n          margin: new go.Margin(4, 0, 0, 0),\r\n          maxSize: new go.Size(200, NaN),\r\n          wrap: go.TextBlock.WrapFit,\r\n          //stroke: \"whitesmoke\",\r\n          editable: true,\r\n          font: smallfont,\r\n          row: 2,\r\n          column: 0,\r\n          stroke: \"#3e5c76\",\r\n        },\r\n        new go.Binding(\"text\", \"text0\").makeTwoWay()\r\n      ),\r\n\r\n      $(\r\n        go.TextBlock,\r\n        \"value\",\r\n        {\r\n          margin: new go.Margin(4, 0, 0, 0),\r\n          maxSize: new go.Size(200, NaN),\r\n          wrap: go.TextBlock.WrapFit,\r\n          //stroke: \"whitesmoke\",\r\n          editable: true,\r\n          stroke: \"#3e5c76\",\r\n          font: smallfont,\r\n          row: 2,\r\n          column: 1,\r\n        },\r\n        new go.Binding(\"text\", \"text1\").makeTwoWay()\r\n      ),\r\n\r\n      $(\r\n        go.TextBlock,\r\n        \"output = \",\r\n        {\r\n          margin: new go.Margin(4, 0, 0, 0),\r\n          maxSize: new go.Size(200, NaN),\r\n          wrap: go.TextBlock.WrapFit,\r\n          //stroke: \"whitesmoke\",\r\n          editable: true,\r\n          font: smallfont,\r\n          stroke: \"#3e5c76\",\r\n          row: 3,\r\n          column: 0,\r\n        },\r\n        new go.Binding(\"text\", \"text2\").makeTwoWay()\r\n      ),\r\n\r\n      $(\r\n        go.TextBlock,\r\n        \"value\",\r\n        {\r\n          margin: new go.Margin(4, 0, 0, 9),\r\n          maxSize: new go.Size(200, NaN),\r\n          wrap: go.TextBlock.WrapFit,\r\n          //stroke: \"whitesmoke\",\r\n          editable: true,\r\n          font: smallfont,\r\n          stroke: \"#3e5c76\",\r\n          row: 3,\r\n          column: 1,\r\n        },\r\n        new go.Binding(\"text\", \"text3\").makeTwoWay()\r\n      )\r\n    ) // end Table Panel\r\n  );\r\n\r\n  myDiagram.nodeTemplateMap.add(\r\n    \"FC\",\r\n    $(\r\n      go.Node,\r\n      \"Auto\",\r\n      {\r\n        locationSpot: go.Spot.Center,\r\n      },\r\n      new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n        go.Point.stringify\r\n      ),\r\n      {\r\n        selectable: true,\r\n        selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n      },\r\n      $(go.Shape, \"RoundedRectangle\", {\r\n        fill: yellowgrad,\r\n        stroke: \"#4ea8de\",\r\n        strokeWidth: 4,\r\n        portId: \"\",\r\n        fromLinkable: true,\r\n        toLinkable: true,\r\n        cursor: \"pointer\",\r\n        toEndSegmentLength: 50,\r\n        fromEndSegmentLength: 40,\r\n      }),\r\n      $(\r\n        go.Panel,\r\n        \"Vertical\",\r\n        {\r\n          defaultAlignment: go.Spot.Center,\r\n        },\r\n\r\n        $(\r\n          go.TextBlock,\r\n          \"FC\",\r\n          textStyle(),\r\n          {\r\n            stroke: \"#3e5c76\",\r\n            margin: new go.Margin(8, 0, 0, 0),\r\n            minSize: new go.Size(100, NaN),\r\n            //maxSize: new go.Size(200, NaN)\r\n          },\r\n          new go.Binding(\"text\", \"text\").makeTwoWay()\r\n        ),\r\n\r\n        $(\r\n          go.Panel,\r\n          \"Vertical\",\r\n          {\r\n            defaultAlignment: go.Spot.TopLeft,\r\n            itemTemplate: reasonTemplate,\r\n          },\r\n          new go.Binding(\"itemArray\", \"reasonsList\").makeTwoWay()\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  var linkSelectionAdornmentTemplate = $(\r\n    go.Adornment,\r\n    \"Link\",\r\n    $(\r\n      go.Shape,\r\n      // isPanelMain declares that this Shape shares the Link.geometry\r\n      {\r\n        isPanelMain: true,\r\n        fill: null,\r\n        stroke: \"deepskyblue\",\r\n        strokeWidth: 2.5,\r\n      }\r\n    ) // use selection object's strokeWidth\r\n  );\r\n  // replace the default Link template in the linkTemplateMap\r\n  myDiagram.linkTemplate = $(\r\n    go.Link, // the whole link panel\r\n    {\r\n      selectable: true,\r\n      selectionAdornmentTemplate: linkSelectionAdornmentTemplate,\r\n    },\r\n    new go.Binding(\"points\").makeTwoWay(),\r\n    {\r\n      //curve: go.Link.Bezier,\r\n      toShortLength: 15,\r\n    },\r\n    //new go.Binding(\"curviness\", \"curviness\"),\r\n    $(\r\n      go.Shape, // the link shape\r\n      {\r\n        stroke: \"#979dac\",\r\n        strokeWidth: 2.5,\r\n      }\r\n    ),\r\n    $(\r\n      go.Shape, // the arrowhead\r\n      {\r\n        toArrow: \"kite\",\r\n        fill: \"#979dac\",\r\n        stroke: null,\r\n        scale: 2,\r\n      }\r\n    )\r\n  );\r\n\r\n  myDiagram.nodeTemplateMap.add(\r\n    \"RNN\",\r\n    $(\r\n      go.Node,\r\n      \"Auto\",\r\n      {\r\n        locationSpot: go.Spot.Center,\r\n      },\r\n      new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n        go.Point.stringify\r\n      ),\r\n      {\r\n        selectable: true,\r\n        selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n      },\r\n      $(go.Shape, \"RoundedRectangle\", {\r\n        fill: whitegrad,\r\n        stroke: \"#CF8BF9\",\r\n        strokeWidth: 4,\r\n      }),\r\n      $(\r\n        go.TextBlock,\r\n        \"RNN\\n(unavailable)\",\r\n        textStyle(),\r\n        {\r\n          margin: 9,\r\n          maxSize: new go.Size(200, NaN),\r\n          wrap: go.TextBlock.WrapFit,\r\n          editable: true,\r\n          stroke: \"#560788\",\r\n          font: smallfont,\r\n        },\r\n        new go.Binding(\"text\", \"text\").makeTwoWay()\r\n      )\r\n      // no ports, because no links are allowed to connect with a comment\r\n    )\r\n  );\r\n\r\n  myDiagram.nodeTemplateMap.add(\r\n    \"CNN\",\r\n    $(\r\n      go.Node,\r\n      \"Auto\",\r\n      {\r\n        locationSpot: go.Spot.Center,\r\n      },\r\n      new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n        go.Point.stringify\r\n      ),\r\n      {\r\n        selectable: true,\r\n        selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n      },\r\n      $(go.Shape, \"RoundedRectangle\", {\r\n        fill: whitegrad,\r\n        stroke: \"#CF8BF9\",\r\n        strokeWidth: 4,\r\n      }),\r\n      $(\r\n        go.TextBlock,\r\n        \"CNN\\n(unavailable)\",\r\n        textStyle(),\r\n        {\r\n          margin: 9,\r\n          maxSize: new go.Size(200, NaN),\r\n          wrap: go.TextBlock.WrapFit,\r\n          editable: true,\r\n          stroke: \"#560788\",\r\n          font: smallfont,\r\n        },\r\n        new go.Binding(\"text\", \"text\").makeTwoWay()\r\n      )\r\n      // no ports, because no links are allowed to connect with a comment\r\n    )\r\n  );\r\n\r\n  myDiagram.nodeTemplateMap.add(\r\n    \"LSTM\",\r\n    $(\r\n      go.Node,\r\n      \"Auto\",\r\n      {\r\n        locationSpot: go.Spot.Center,\r\n      },\r\n      new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n        go.Point.stringify\r\n      ),\r\n      {\r\n        selectable: true,\r\n        selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n      },\r\n      $(go.Shape, \"RoundedRectangle\", {\r\n        fill: whitegrad,\r\n        stroke: \"#CF8BF9\",\r\n        strokeWidth: 4,\r\n      }),\r\n      $(\r\n        go.TextBlock,\r\n        \"LSTM\\n(unavailable)\",\r\n        textStyle(),\r\n        {\r\n          margin: 9,\r\n          maxSize: new go.Size(200, NaN),\r\n          wrap: go.TextBlock.WrapFit,\r\n          editable: true,\r\n          stroke: \"#560788\",\r\n          font: smallfont,\r\n        },\r\n        new go.Binding(\"text\", \"text\").makeTwoWay()\r\n      )\r\n      // no ports, because no links are allowed to connect with a comment\r\n    )\r\n  );\r\n\r\n  myDiagram.nodeTemplateMap.add(\r\n    \"Softmax\",\r\n    $(\r\n      go.Node,\r\n      \"Auto\",\r\n      {\r\n        locationSpot: go.Spot.Center,\r\n      },\r\n      new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n        go.Point.stringify\r\n      ),\r\n      {\r\n        selectable: true,\r\n        selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n      },\r\n      $(go.Shape, \"RoundedRectangle\", {\r\n        fill: whitegrad,\r\n        stroke: \"#CF8BF9\",\r\n        strokeWidth: 4,\r\n      }),\r\n      $(\r\n        go.TextBlock,\r\n        \"Softmax\\n(unavailable)\",\r\n        textStyle(),\r\n        {\r\n          margin: 9,\r\n          maxSize: new go.Size(200, NaN),\r\n          wrap: go.TextBlock.WrapFit,\r\n          editable: true,\r\n          stroke: \"#560788\",\r\n          font: smallfont,\r\n        },\r\n        new go.Binding(\"text\", \"text\").makeTwoWay()\r\n      )\r\n      // no ports, because no links are allowed to connect with a comment\r\n    )\r\n  );\r\n\r\n  myDiagram.nodeTemplateMap.add(\r\n    \"Maximum Polling\",\r\n    $(\r\n      go.Node,\r\n      \"Auto\",\r\n      {\r\n        locationSpot: go.Spot.Center,\r\n      },\r\n      new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n        go.Point.stringify\r\n      ),\r\n      {\r\n        selectable: true,\r\n        selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\r\n      },\r\n      $(go.Shape, \"RoundedRectangle\", {\r\n        fill: whitegrad,\r\n        stroke: \"#CF8BF9\",\r\n        strokeWidth: 4,\r\n      }),\r\n      $(\r\n        go.TextBlock,\r\n        \"Maximum\\nPolling\\n(unavailable)\",\r\n        textStyle(),\r\n        {\r\n          margin: 9,\r\n          maxSize: new go.Size(200, NaN),\r\n          wrap: go.TextBlock.WrapFit,\r\n          editable: true,\r\n          stroke: \"#560788\",\r\n          font: smallfont,\r\n        },\r\n        new go.Binding(\"text\", \"text\").makeTwoWay()\r\n      )\r\n      // no ports, because no links are allowed to connect with a comment\r\n    )\r\n  );\r\n\r\n  var palette = $(\r\n    go.Palette,\r\n    \"myPaletteDiv\", // create a new Palette in the HTML DIV element\r\n    {\r\n      // share the template map with the Palette\r\n      nodeTemplateMap: myDiagram.nodeTemplateMap,\r\n      autoScale: go.Diagram.Uniform, // everything always fits in viewport\r\n    }\r\n  );\r\n\r\n  palette.model.nodeDataArray = [\r\n    {\r\n      category: \"Data\",\r\n    },\r\n    {\r\n      category: \"ReLU\",\r\n    },\r\n    {\r\n      category: \"FC\",\r\n      reasonsList: [{}],\r\n    },\r\n    {\r\n      category: \"End\",\r\n    },\r\n    {\r\n      category: \"CNN\",\r\n    },\r\n    {\r\n      category: \"RNN\",\r\n    },\r\n    {\r\n      category: \"LSTM\",\r\n    },\r\n    {\r\n      category: \"Softmax\",\r\n    },\r\n    {\r\n      category: \"Maximum Polling\",\r\n    },\r\n  ];\r\n\r\n  // read in the JSON-format data from the \"mySavedModel\" element\r\n  load();\r\n  layout();\r\n}\r\n\r\nfunction layout() {\r\n  myDiagram.layoutDiagram(true);\r\n}\r\n// Show the diagram's model in JSON format\r\nfunction save() {\r\n  document.getElementById(\"mySavedModel\").value = myDiagram.model.toJson();\r\n  myDiagram.isModified = false;\r\n}\r\n\r\nfunction load() {\r\n  myDiagram.model = go.Model.fromJson(\r\n    document.getElementById(\"mySavedModel\").value\r\n  );\r\n}\r\nwindow.addEventListener(\"DOMContentLoaded\", init);\r\n</script>\r\n\r\n<style scoped>\r\n#myPaletteDiv:hover {\r\n  /* box-shadow: 1px 1px #82929B, 2px 2px #82929B, 3px 3px #82929B;\r\n            -webkit-transform: translateX(-3px);\r\n            transform: translateX(-3px);\r\n            transition: .5s ease; */\r\n  /* -webkit-transform: scale(1.2); */\r\n  /* -ms-transform: scale(1.2); */\r\n  transform: scale(1.015);\r\n  transition: 1s ease;\r\n}\r\n\r\n#myDiagramDiv:hover {\r\n  /* box-shadow: 1px 1px #82929B, 2px 2px #82929B, 3px 3px #82929B;\r\n            -webkit-transform: translateX(-3px);\r\n            transform: translateX(-3px);\r\n            transition: .5s ease; */\r\n  /* -webkit-transform: scale(1.2); */\r\n  /* -ms-transform: scale(1.2); */\r\n  transform: scale(1.01);\r\n  transition: 1s ease;\r\n}\r\n\r\n#myPaletteDiv {\r\n  border-radius: 7px;\r\n}\r\n\r\n#myDiagramDiv {\r\n  border-radius: 7px;\r\n}\r\n\r\n.button,\r\nbutton {\r\n  --tw-bg-opacity: 1;\r\n  background-color: rgba(31, 73, 99, var(--tw-bg-opacity));\r\n  border-radius: 0.25rem;\r\n  display: inline-block;\r\n  margin: 0.25rem;\r\n  font-size: 12pt;\r\n  font-family: Helvetica, Arial;\r\n  padding-top: 0.25rem;\r\n  padding-bottom: 0.25rem;\r\n  padding-left: 0.5rem;\r\n  padding-right: 0.5rem;\r\n  --tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\r\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),\r\n    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\r\n  --tw-text-opacity: 1;\r\n  color: rgba(255, 255, 255, var(--tw-text-opacity));\r\n}\r\n\r\n.button:hover,\r\nbutton:hover {\r\n  --tw-bg-opacity: 1;\r\n  background-color: rgba(98, 127, 145, var(--tw-bg-opacity));\r\n  --tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\r\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),\r\n    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\r\n  --tw-text-opacity: 1;\r\n  color: rgba(255, 255, 255, var(--tw-text-opacity));\r\n  transition-property: background-color, border-color, color, fill, stroke;\r\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\r\n  transition-duration: 150ms;\r\n  transition-duration: 0.2s;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}