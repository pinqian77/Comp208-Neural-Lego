{"ast":null,"code":"// import go from \"/public/go.js\";\nimport go from \"gojs\";\nexport default {\n  name: \"CanvasView\",\n  mounted: function mounted() {\n    // let script = document.createElement(\"script\");\n    // script.type = \"text/javascript\";\n    // script.src = \"/go.js\";\n    // document.body.appendChild(script);\n    var $ = go.GraphObject.make; // for conciseness in defining templates\n\n    var myDiagram = $(go.Diagram, \"myDiagramDiv\", // create a Diagram for the DIV HTML element\n    {\n      // enable undo & redo\n      \"undoManager.isEnabled\": true\n    }); // define a simple Node template\n\n    myDiagram.nodeTemplate = $(go.Node, \"Auto\", // the Shape will go around the TextBlock\n    $(go.Shape, \"RoundedRectangle\", {\n      strokeWidth: 0,\n      fill: \"white\"\n    }, // default fill is white\n    // Shape.fill is bound to Node.data.color\n    new go.Binding(\"fill\", \"color\")), $(go.TextBlock, {\n      margin: 8\n    }, // some room around the text\n    // TextBlock.text is bound to Node.data.key\n    new go.Binding(\"text\", \"key\"))); // but use the default Link template, by not setting Diagram.linkTemplate\n    // create the model data that will be represented by Nodes and Links\n\n    myDiagram.model = new go.GraphLinksModel([{\n      key: \"Alpha\",\n      color: \"lightblue\"\n    }, {\n      key: \"Beta\",\n      color: \"orange\"\n    }, {\n      key: \"Gamma\",\n      color: \"lightgreen\"\n    }, {\n      key: \"Delta\",\n      color: \"pink\"\n    }], [{\n      from: \"Alpha\",\n      to: \"Beta\"\n    }, {\n      from: \"Alpha\",\n      to: \"Gamma\"\n    }, {\n      from: \"Beta\",\n      to: \"Beta\"\n    }, {\n      from: \"Gamma\",\n      to: \"Delta\"\n    }, {\n      from: \"Delta\",\n      to: \"Alpha\"\n    }]);\n  },\n  method: {\n    layout: function layout() {\n      event.preventDefault();\n      console.log(\"sssss\"); // myDiagram.layoutDiagram(true);\n    }\n  }\n};","map":{"version":3,"mappings":"AA6DA;AACA,OAAOA,EAAP,MAAe,MAAf;AAEA,eAAe;AACbC,MAAI,EAAE,YADO;AAEbC,SAFa,qBAEH;AACR;AACA;AACA;AACA;AAGA,QAAMC,IAAIH,EAAE,CAACI,WAAH,CAAeC,IAAzB,CAPQ,CAOuB;;AAC/B,QAAMC,SAAQ,GAAIH,CAAC,CACjBH,EAAE,CAACO,OADc,EAEjB,cAFiB,EAED;AAChB;AACE;AACA,+BAAyB;AAF3B,KAHiB,CAAnB,CARQ,CAiBR;;AACAD,aAAS,CAACE,YAAV,GAAyBL,CAAC,CACxBH,EAAE,CAACS,IADqB,EAExB,MAFwB,EAEhB;AACRN,KAAC,CACCH,EAAE,CAACU,KADJ,EAEC,kBAFD,EAGC;AAAEC,iBAAW,EAAE,CAAf;AAAkBC,UAAI,EAAE;AAAxB,KAHD,EAGoC;AACnC;AACA,QAAIZ,EAAE,CAACa,OAAP,CAAe,MAAf,EAAuB,OAAvB,CALD,CAHuB,EAUxBV,CAAC,CACCH,EAAE,CAACc,SADJ,EAEC;AAAEC,YAAM,EAAE;AAAV,KAFD,EAEgB;AACf;AACA,QAAIf,EAAE,CAACa,OAAP,CAAe,MAAf,EAAuB,KAAvB,CAJD,CAVuB,CAA1B,CAlBQ,CAoCR;AAEA;;AACAP,aAAS,CAACU,KAAV,GAAkB,IAAIhB,EAAE,CAACiB,eAAP,CAChB,CACE;AAAEC,SAAG,EAAE,OAAP;AAAgBC,WAAK,EAAE;AAAvB,KADF,EAEE;AAAED,SAAG,EAAE,MAAP;AAAeC,WAAK,EAAE;AAAtB,KAFF,EAGE;AAAED,SAAG,EAAE,OAAP;AAAgBC,WAAK,EAAE;AAAvB,KAHF,EAIE;AAAED,SAAG,EAAE,OAAP;AAAgBC,WAAK,EAAE;AAAvB,KAJF,CADgB,EAOhB,CACE;AAAEC,UAAI,EAAE,OAAR;AAAiBC,QAAE,EAAE;AAArB,KADF,EAEE;AAAED,UAAI,EAAE,OAAR;AAAiBC,QAAE,EAAE;AAArB,KAFF,EAGE;AAAED,UAAI,EAAE,MAAR;AAAgBC,QAAE,EAAE;AAApB,KAHF,EAIE;AAAED,UAAI,EAAE,OAAR;AAAiBC,QAAE,EAAE;AAArB,KAJF,EAKE;AAAED,UAAI,EAAE,OAAR;AAAiBC,QAAE,EAAE;AAArB,KALF,CAPgB,CAAlB;AAeD,GAxDY;AA0DbC,QAAM,EAAC;AACLC,UADK,oBACI;AACPC,WAAK,CAACC,cAAN;AACAC,aAAO,CAACC,GAAR,CAAY,OAAZ,EAFO,CAGP;AACD;AALI;AA1DM,CAAf","names":["go","name","mounted","$","GraphObject","make","myDiagram","Diagram","nodeTemplate","Node","Shape","strokeWidth","fill","Binding","TextBlock","margin","model","GraphLinksModel","key","color","from","to","method","layout","event","preventDefault","console","log"],"sourceRoot":"","sources":["C:\\qp_box\\_CodeField\\Neural-Lego\\frontend\\src\\views\\CanvasView.vue"],"sourcesContent":["<template>\r\n\r\n    <div>\r\n      <div id=\"allSampleContent\" class=\"p-4 w-full\">\r\n        <div id=\"sample\">\r\n          <div\r\n            style=\"\r\n              width: 100%;\r\n              margin-bottom: 10px;\r\n              display: flex;\r\n              justify-content: space-between;\r\n            \"\r\n          >\r\n            <div\r\n              id=\"myPaletteDiv\"\r\n              style=\"\r\n                width: 150px;\r\n                margin-right: 10px;\r\n                background-color: whitesmoke;\r\n                border: solid 4px #82929b;\r\n              \"\r\n            ></div>\r\n            <div\r\n              id=\"myDiagramDiv\"\r\n              style=\"\r\n                flex-grow: 3;\r\n                margin-right: 10px;\r\n                height: 600px;\r\n                background-color: whitesmoke;\r\n                border: solid 4px #82929b;\r\n              \"\r\n            ></div>\r\n            <div\r\n              id=\"myDiagramDiv\"\r\n              style=\"\r\n                flex-grow: 2;\r\n                height: 600px;\r\n                background-color: whitesmoke;\r\n                border: solid 4px #82929b;\r\n              \"\r\n            ></div>\r\n          </div>\r\n\r\n          <button id=\"SaveButton\" @click=\"save($event)\">Save</button>\r\n          <button @click=\"load($event)\">Load</button>\r\n          <button @click=\"layout()\">Layout</button>\r\n          <br />\r\n          <textarea id=\"mySavedModel\" style=\"width: 100%; height: 300px\">\r\n{ \"class\": \"GraphLinksModel\", \r\n\"nodeDataArray\": [ {\"category\":\"Data\", \"key\":-1, \"loc\":\"-70.5 -90.19999980926514\"} ], \r\n\"linkDataArray\": []}\r\n  </textarea\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n\r\n<script id='code'>\r\n// import go from \"/public/go.js\";\r\nimport go from \"gojs\";\r\n\r\nexport default {\r\n  name: \"CanvasView\",\r\n  mounted() {\r\n    // let script = document.createElement(\"script\");\r\n    // script.type = \"text/javascript\";\r\n    // script.src = \"/go.js\";\r\n    // document.body.appendChild(script);\r\n\r\n\r\n    const $ = go.GraphObject.make; // for conciseness in defining templates\r\n    const myDiagram = $(\r\n      go.Diagram,\r\n      \"myDiagramDiv\", // create a Diagram for the DIV HTML element\r\n      {\r\n        // enable undo & redo\r\n        \"undoManager.isEnabled\": true,\r\n      }\r\n    );\r\n\r\n    // define a simple Node template\r\n    myDiagram.nodeTemplate = $(\r\n      go.Node,\r\n      \"Auto\", // the Shape will go around the TextBlock\r\n      $(\r\n        go.Shape,\r\n        \"RoundedRectangle\",\r\n        { strokeWidth: 0, fill: \"white\" }, // default fill is white\r\n        // Shape.fill is bound to Node.data.color\r\n        new go.Binding(\"fill\", \"color\")\r\n      ),\r\n      $(\r\n        go.TextBlock,\r\n        { margin: 8 }, // some room around the text\r\n        // TextBlock.text is bound to Node.data.key\r\n        new go.Binding(\"text\", \"key\")\r\n      )\r\n    );\r\n\r\n    // but use the default Link template, by not setting Diagram.linkTemplate\r\n\r\n    // create the model data that will be represented by Nodes and Links\r\n    myDiagram.model = new go.GraphLinksModel(\r\n      [\r\n        { key: \"Alpha\", color: \"lightblue\" },\r\n        { key: \"Beta\", color: \"orange\" },\r\n        { key: \"Gamma\", color: \"lightgreen\" },\r\n        { key: \"Delta\", color: \"pink\" },\r\n      ],\r\n      [\r\n        { from: \"Alpha\", to: \"Beta\" },\r\n        { from: \"Alpha\", to: \"Gamma\" },\r\n        { from: \"Beta\", to: \"Beta\" },\r\n        { from: \"Gamma\", to: \"Delta\" },\r\n        { from: \"Delta\", to: \"Alpha\" },\r\n      ]\r\n    );\r\n  },\r\n\r\n  method:{\r\n    layout() {\r\n      event.preventDefault();\r\n      console.log(\"sssss\");\r\n      // myDiagram.layoutDiagram(true);\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n#myPaletteDiv:hover {\r\n  /* box-shadow: 1px 1px #82929B, 2px 2px #82929B, 3px 3px #82929B;\r\n            -webkit-transform: translateX(-3px);\r\n            transform: translateX(-3px);\r\n            transition: .5s ease; */\r\n  /* -webkit-transform: scale(1.2); */\r\n  /* -ms-transform: scale(1.2); */\r\n  transform: scale(1.015);\r\n  transition: 1s ease;\r\n}\r\n\r\n#myDiagramDiv:hover {\r\n  /* box-shadow: 1px 1px #82929B, 2px 2px #82929B, 3px 3px #82929B;\r\n            -webkit-transform: translateX(-3px);\r\n            transform: translateX(-3px);\r\n            transition: .5s ease; */\r\n  /* -webkit-transform: scale(1.2); */\r\n  /* -ms-transform: scale(1.2); */\r\n  transform: scale(1.01);\r\n  transition: 1s ease;\r\n}\r\n\r\n#myPaletteDiv {\r\n  border-radius: 7px;\r\n}\r\n\r\n#myDiagramDiv {\r\n  border-radius: 7px;\r\n}\r\n\r\n.button,\r\nbutton {\r\n  --tw-bg-opacity: 1;\r\n  background-color: rgba(31, 73, 99, var(--tw-bg-opacity));\r\n  border-radius: 0.25rem;\r\n  display: inline-block;\r\n  margin: 0.25rem;\r\n  font-size: 12pt;\r\n  font-family: Helvetica, Arial;\r\n  padding-top: 0.25rem;\r\n  padding-bottom: 0.25rem;\r\n  padding-left: 0.5rem;\r\n  padding-right: 0.5rem;\r\n  --tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\r\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),\r\n    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\r\n  --tw-text-opacity: 1;\r\n  color: rgba(255, 255, 255, var(--tw-text-opacity));\r\n}\r\n\r\n.button:hover,\r\nbutton:hover {\r\n  --tw-bg-opacity: 1;\r\n  background-color: rgba(98, 127, 145, var(--tw-bg-opacity));\r\n  --tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\r\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),\r\n    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\r\n  --tw-text-opacity: 1;\r\n  color: rgba(255, 255, 255, var(--tw-text-opacity));\r\n  transition-property: background-color, border-color, color, fill, stroke;\r\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\r\n  transition-duration: 150ms;\r\n  transition-duration: 0.2s;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}