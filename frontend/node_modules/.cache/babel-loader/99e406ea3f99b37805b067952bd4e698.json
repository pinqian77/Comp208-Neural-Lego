{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-60569357\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = {\n  id: \"page-top\",\n  \"class\": \"body\"\n};\n\nvar _hoisted_2 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"wrapper\"\n  }, [/*#__PURE__*/_createCommentVNode(\" Sidebar \"), /*#__PURE__*/_createElementVNode(\"ul\", {\n    \"class\": \"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\",\n    id: \"accordionSidebar\"\n  }, [/*#__PURE__*/_createCommentVNode(\" Sidebar - Brand \"), /*#__PURE__*/_createElementVNode(\"a\", {\n    \"class\": \"sidebar-brand d-flex align-items-center justify-content-center\"\n  }, [/*#__PURE__*/_createCommentVNode(\" <div class=\\\"sidebar-brand-icon rotate-n-15\\\">\\n                    <i class=\\\"fas fa-laugh-wink\\\"></i>\\n                </div> \"), /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"sidebar-brand-text mx-3\"\n  }, \"NEURAL LEGO\")]), /*#__PURE__*/_createCommentVNode(\" Divider \"), /*#__PURE__*/_createElementVNode(\"hr\", {\n    \"class\": \"sidebar-divider my-0\"\n  }), /*#__PURE__*/_createCommentVNode(\" Nav Item - Dashboard \"), /*#__PURE__*/_createElementVNode(\"li\", {\n    \"class\": \"nav-item\"\n  }, [/*#__PURE__*/_createElementVNode(\"a\", {\n    \"class\": \"nav-link\",\n    href: \"/profile\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fas fa-fw fa-user\"\n  }), /*#__PURE__*/_createElementVNode(\"span\", null, \"User\")])]), /*#__PURE__*/_createCommentVNode(\" Divider \"), /*#__PURE__*/_createElementVNode(\"hr\", {\n    \"class\": \"sidebar-divider my-0\"\n  }), /*#__PURE__*/_createCommentVNode(\" Nav Item - Dashboard \"), /*#__PURE__*/_createElementVNode(\"li\", {\n    \"class\": \"nav-item\"\n  }, [/*#__PURE__*/_createElementVNode(\"a\", {\n    \"class\": \"nav-link\",\n    href: \"/project\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fas fa-fw fa-folder\"\n  }), /*#__PURE__*/_createElementVNode(\"span\", null, \"Project\")])]), /*#__PURE__*/_createCommentVNode(\" Divider \"), /*#__PURE__*/_createElementVNode(\"hr\", {\n    \"class\": \"sidebar-divider my-0\"\n  }), /*#__PURE__*/_createCommentVNode(\" Nav Item - Dashboard \"), /*#__PURE__*/_createElementVNode(\"li\", {\n    \"class\": \"nav-item\"\n  }, [/*#__PURE__*/_createElementVNode(\"a\", {\n    \"class\": \"nav-link\",\n    href: \"/template\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fas fa-fw fa-table\"\n  }), /*#__PURE__*/_createElementVNode(\"span\", null, \"Template\")])]), /*#__PURE__*/_createElementVNode(\"hr\", {\n    \"class\": \"sidebar-divider my-0\"\n  }), /*#__PURE__*/_createCommentVNode(\" Nav Item - Dashboard \"), /*#__PURE__*/_createElementVNode(\"li\", {\n    \"class\": \"nav-item active\"\n  }, [/*#__PURE__*/_createElementVNode(\"a\", {\n    \"class\": \"nav-link\",\n    href: \"draggable.html\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fas fa-fw fa-palette\"\n  }), /*#__PURE__*/_createElementVNode(\"span\", null, \"Canvas\")])]), /*#__PURE__*/_createElementVNode(\"hr\", {\n    \"class\": \"sidebar-divider my-0\"\n  }), /*#__PURE__*/_createCommentVNode(\" Nav Item - Dashboard \"), /*#__PURE__*/_createElementVNode(\"li\", {\n    \"class\": \"nav-item\"\n  }, [/*#__PURE__*/_createElementVNode(\"a\", {\n    \"class\": \"nav-link\",\n    href: \"home.html\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fas fa-fw fa-arrow-circle-left\"\n  }), /*#__PURE__*/_createElementVNode(\"span\", null, \"Log out\")])]), /*#__PURE__*/_createCommentVNode(\" Divider \"), /*#__PURE__*/_createElementVNode(\"hr\", {\n    \"class\": \"sidebar-divider d-none d-md-block\"\n  })]), /*#__PURE__*/_createCommentVNode(\" End of Sidebar \"), /*#__PURE__*/_createCommentVNode(\" Content Wrapper \"), /*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"content-wrapper\",\n    \"class\": \"d-flex flex-column\"\n  }, [/*#__PURE__*/_createCommentVNode(\" Main Content \"), /*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"content\"\n  }, [/*#__PURE__*/_createCommentVNode(\" Topbar \"), /*#__PURE__*/_createElementVNode(\"nav\", {\n    \"class\": \"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\"\n  }, [/*#__PURE__*/_createCommentVNode(\" Sidebar Toggle (Topbar) \"), /*#__PURE__*/_createElementVNode(\"button\", {\n    id: \"sidebarToggleTop\",\n    \"class\": \"btn btn-link d-md-none rounded-circle mr-3\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fa fa-bars\"\n  })]), /*#__PURE__*/_createCommentVNode(\" Topbar Search \"), /*#__PURE__*/_createElementVNode(\"form\", {\n    \"class\": \"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"input-group\"\n  }, [/*#__PURE__*/_createElementVNode(\"input\", {\n    type: \"text\",\n    \"class\": \"form-control bg-light border-0 small\",\n    placeholder: \"Search for...\",\n    \"aria-label\": \"Search\",\n    \"aria-describedby\": \"basic-addon2\"\n  }), /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"input-group-append\"\n  }, [/*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\",\n    type: \"button\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fas fa-search fa-sm\"\n  })])])])]), /*#__PURE__*/_createCommentVNode(\" Topbar Navbar \"), /*#__PURE__*/_createElementVNode(\"ul\", {\n    \"class\": \"navbar-nav ml-auto\"\n  }, [/*#__PURE__*/_createCommentVNode(\" Nav Item - Search Dropdown (Visible Only XS) \"), /*#__PURE__*/_createElementVNode(\"li\", {\n    \"class\": \"nav-item dropdown no-arrow d-sm-none\"\n  }, [/*#__PURE__*/_createElementVNode(\"a\", {\n    \"class\": \"nav-link dropdown-toggle\",\n    href: \"#\",\n    id: \"searchDropdown\",\n    role: \"button\",\n    \"data-toggle\": \"dropdown\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": \"false\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fas fa-search fa-fw\"\n  })]), /*#__PURE__*/_createCommentVNode(\" Dropdown - Messages \"), /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\",\n    \"aria-labelledby\": \"searchDropdown\"\n  }, [/*#__PURE__*/_createElementVNode(\"form\", {\n    \"class\": \"form-inline mr-auto w-100 navbar-search\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"input-group\"\n  }, [/*#__PURE__*/_createElementVNode(\"input\", {\n    type: \"text\",\n    \"class\": \"form-control bg-light border-0 small\",\n    placeholder: \"Search for...\",\n    \"aria-label\": \"Search\",\n    \"aria-describedby\": \"basic-addon2\"\n  }), /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"input-group-append\"\n  }, [/*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\",\n    type: \"button\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    \"class\": \"fas fa-search fa-sm\"\n  })])])])])])])])]), /*#__PURE__*/_createCommentVNode(\" End of Topbar \"), /*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"allSampleContent\",\n    \"class\": \"p-4 w-full\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"sample\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    style: {\n      \"width\": \"100%\",\n      \"margin-bottom\": \"10px\",\n      \"display\": \"flex\"\n    }\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"myPaletteDiv\",\n    style: {\n      \"width\": \"150px\",\n      \"margin-right\": \"10px\",\n      \"border\": \"solid 4px #82929B\"\n    }\n  }), /*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"myDiagramDiv_1\",\n    style: {\n      \"width\": \"200px\",\n      \"margin-right\": \"10px\",\n      \"height\": \"600px\",\n      \"border\": \"solid 4px #82929B\"\n    }\n  }), /*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"myDiagramDiv_2\",\n    style: {\n      \"flex-grow\": \"1\",\n      \"height\": \"600px\",\n      \"border\": \"solid 4px #82929B\"\n    }\n  })]), /*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\",\n    id: \"SaveButton\",\n    onclick: \"save()\"\n  }, \"Save\"), /*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\",\n    onclick: \"load()\"\n  }, \"Load\"), /*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\",\n    onclick: \"layout()\"\n  }, \"Layout\"), /*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\"\n  }, \"Compile\"), /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"/train\"\n  }, [/*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\"\n  }, \"Train\")]), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createElementVNode(\"textarea\", {\n    id: \"mySavedModel\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"300px\"\n    }\n  }, \"{ \\\"class\\\": \\\"GraphLinksModel\\\",\\n\\\"copiesArrays\\\": true,\\n\\\"copiesArrayObjects\\\": true,\\n\\\"nodeDataArray\\\": [ {\\\"category\\\":\\\"Data\\\", \\\"reasonsList\\\":[ {} ], \\\"key\\\":-2, \\\"loc\\\":\\\"-99.10220015417542 -20.151221229488044\\\"} ],\\n\\\"linkDataArray\\\": []}\\n            \")])])])]), /*#__PURE__*/_createCommentVNode(\" End of Content Wrapper \")], -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_3 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"modal fade\",\n    id: \"logoutModal\",\n    tabindex: \"-1\",\n    role: \"dialog\",\n    \"aria-labelledby\": \"exampleModalLabel\",\n    \"aria-hidden\": \"true\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"modal-dialog\",\n    role: \"document\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"modal-content\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"modal-header\"\n  }, [/*#__PURE__*/_createElementVNode(\"h5\", {\n    \"class\": \"modal-title\",\n    id: \"exampleModalLabel\"\n  }, \"Ready to Leave?\"), /*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"close\",\n    type: \"button\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\"\n  }, [/*#__PURE__*/_createElementVNode(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"×\")])]), /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"modal-body\"\n  }, \"Select \\\"Logout\\\" below if you are ready to end your current session.\"), /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"modal-footer\"\n  }, [/*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"btn btn-secondary\",\n    type: \"button\",\n    \"data-dismiss\": \"modal\"\n  }, \"Cancel\"), /*#__PURE__*/_createElementVNode(\"a\", {\n    \"class\": \"btn btn-primary\",\n    href: \"login.html\"\n  }, \"Logout\")])])])], -1\n  /* HOISTED */\n  );\n});\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Page Wrapper \"), _hoisted_2, _createCommentVNode(\" End of Page Wrapper \"), _createCommentVNode(\" Logout Modal\"), _hoisted_3]);\n}","map":{"version":3,"mappings":"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","names":["id","_createElementVNode","_createCommentVNode","href","type","placeholder","role","style","onclick","tabindex","_createElementBlock","_hoisted_2","_hoisted_3"],"sourceRoot":"","sources":["/Users/wanghaonan/Documents/GitHub/Comp208-Neural-Lego/frontend/src/views/CanvasView.vue"],"sourcesContent":["<template>\n  <div id=\"page-top\" class=\"body\">\n    <!-- Page Wrapper -->\n    <div id=\"wrapper\">\n\n        <!-- Sidebar -->\n        <ul class=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n\n            <!-- Sidebar - Brand -->\n\n            <a class=\"sidebar-brand d-flex align-items-center justify-content-center\">\n                <!-- <div class=\"sidebar-brand-icon rotate-n-15\">\n                    <i class=\"fas fa-laugh-wink\"></i>\n                </div> -->\n                <div class=\"sidebar-brand-text mx-3\">NEURAL LEGO</div>\n            </a>\n\n            <!-- Divider -->\n            <hr class=\"sidebar-divider my-0\">\n\n            <!-- Nav Item - Dashboard -->\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/profile\">\n                    <i class=\"fas fa-fw fa-user\"></i>\n                    <span>User</span></a>\n            </li>\n\n            <!-- Divider -->\n            <hr class=\"sidebar-divider my-0\">\n\n            <!-- Nav Item - Dashboard -->\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/project\">\n                    <i class=\"fas fa-fw fa-folder\"></i>\n                    <span>Project</span></a>\n            </li>\n\n            <!-- Divider -->\n            <hr class=\"sidebar-divider my-0\">\n\n            <!-- Nav Item - Dashboard -->\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/template\">\n                    <i class=\"fas fa-fw fa-table\"></i>\n                    <span>Template</span></a>\n            </li>\n\n\n            <hr class=\"sidebar-divider my-0\">\n\n            <!-- Nav Item - Dashboard -->\n            <li class=\"nav-item active\">\n                <a class=\"nav-link\" href=\"draggable.html\">\n                    <i class=\"fas fa-fw fa-palette\"></i>\n                    <span>Canvas</span></a>\n            </li>\n\n\n            <hr class=\"sidebar-divider my-0\">\n\n            <!-- Nav Item - Dashboard -->\n            <li class=\"nav-item \">\n                <a class=\"nav-link\" href=\"home.html\">\n                    <i class=\"fas fa-fw fa-arrow-circle-left\"></i>\n                    <span>Log out</span></a>\n            </li>\n            <!-- Divider -->\n            <hr class=\"sidebar-divider d-none d-md-block\">\n        </ul>\n        <!-- End of Sidebar -->\n\n        <!-- Content Wrapper -->\n        <div id=\"content-wrapper\" class=\"d-flex flex-column\">\n\n            <!-- Main Content -->\n            <div id=\"content\">\n\n                <!-- Topbar -->\n                <nav class=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n\n                    <!-- Sidebar Toggle (Topbar) -->\n                    <button id=\"sidebarToggleTop\" class=\"btn btn-link d-md-none rounded-circle mr-3\">\n                        <i class=\"fa fa-bars\"></i>\n                    </button>\n\n                    <!-- Topbar Search -->\n                    <form class=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\">\n                        <div class=\"input-group\">\n                            <input type=\"text\" class=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\">\n                            <div class=\"input-group-append\">\n                                <button class=\"btn btn-primary\" type=\"button\">\n                                    <i class=\"fas fa-search fa-sm\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n\n                    <!-- Topbar Navbar -->\n                    <ul class=\"navbar-nav ml-auto\">\n\n                        <!-- Nav Item - Search Dropdown (Visible Only XS) -->\n                        <li class=\"nav-item dropdown no-arrow d-sm-none\">\n                            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"searchDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <i class=\"fas fa-search fa-fw\"></i>\n                            </a>\n                            <!-- Dropdown - Messages -->\n                            <div class=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\" aria-labelledby=\"searchDropdown\">\n                                <form class=\"form-inline mr-auto w-100 navbar-search\">\n                                    <div class=\"input-group\">\n                                        <input type=\"text\" class=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\">\n                                        <div class=\"input-group-append\">\n                                            <button class=\"btn btn-primary\" type=\"button\">\n                                                <i class=\"fas fa-search fa-sm\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </li>\n\n                    </ul>\n\n                </nav>\n                <!-- End of Topbar -->\n\n                <div id=\"allSampleContent\" class=\"p-4 w-full\">\n                    \n\n                    <div id=\"sample\">\n\n                        <div style=\"width: 100%; margin-bottom: 10px;display: flex\">\n                            <div id=\"myPaletteDiv\" style=\"width: 150px; margin-right: 10px; border: solid 4px #82929B\"></div>\n\n                            <div id=\"myDiagramDiv_1\" style=\"width: 200px;margin-right: 10px;height: 600px;  border: solid 4px #82929B\"></div>\n                            <div id=\"myDiagramDiv_2\" style=\"flex-grow:1;height: 600px; border: solid 4px #82929B\"></div>\n                        </div>\n\n                        <button class=\"btn btn-primary\" id=\"SaveButton\" onclick=\"save()\">Save</button>\n                        <button class=\"btn btn-primary\" onclick=\"load()\">Load</button>\n                        <button class=\"btn btn-primary\" onclick=\"layout()\">Layout</button>\n                        <button class=\"btn btn-primary\">Compile</button>\n                        <a href=\"/train\"><button class=\"btn btn-primary\">Train</button></a>\n                        <br />\n                        <textarea id=\"mySavedModel\" style=\"width:100%;height:300px\">{ \"class\": \"GraphLinksModel\",\n\"copiesArrays\": true,\n\"copiesArrayObjects\": true,\n\"nodeDataArray\": [ {\"category\":\"Data\", \"reasonsList\":[ {} ], \"key\":-2, \"loc\":\"-99.10220015417542 -20.151221229488044\"} ],\n\"linkDataArray\": []}\n            </textarea>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n        <!-- End of Content Wrapper -->\n\n    </div>\n    <!-- End of Page Wrapper -->\n\n    <!-- Logout Modal-->\n    <div class=\"modal fade\" id=\"logoutModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">Ready to Leave?</h5>\n                    <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">×</span>\n                    </button>\n                </div>\n                <div class=\"modal-body\">Select \"Logout\" below if you are ready to end your current session.</div>\n                <div class=\"modal-footer\">\n                    <button class=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\n                    <a class=\"btn btn-primary\" href=\"login.html\">Logout</a>\n                </div>\n            </div>\n        </div>\n    </div>\n\n  </div>\n</template>\n\n\n\n<script>\nimport axios from \"axios\";\nimport * as go from \"../../public/go.js\";\n\n//import Prism Editor\nimport { PrismEditor } from \"vue-prism-editor\";\nimport \"vue-prism-editor/dist/prismeditor.min.css\"; // import the styles somewhere\n\n// import highlighting library (you can use any library you want just return html string)\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-javascript\";\nimport \"prismjs/themes/prism-twilight.css\"; // import syntax highlighting styles\n\nexport default {\n  name: \"CanvasView\",\n\n  components: {\n    PrismEditor,\n  },\n\n  data() {\n    return {\n      canvasData: {\n        file: {\n          class: \"GraphLinksModel\",\n          nodeDataArray: [\n            {\n              category: \"Data\",\n              key: -1,\n              loc: \"42.22500681322674 47.35735117835321\",\n            },\n            {\n              category: \"End\",\n              key: -4,\n              loc: \"567.1497069414404 47.35735117835318\",\n            },\n            {\n              category: \"ReLU\",\n              key: -2,\n              loc: \"403.0334278716728 47.357351178353184\",\n            },\n            {\n              category: \"FC\",\n              reasonsList: [{ text1: \"512\", text3: \"128\" }],\n              key: -3,\n              loc: \"216.57893005138874 47.357351178353184\",\n            },\n          ],\n          linkDataArray: [\n            {\n              from: -3,\n              to: -2,\n              points: [\n                278.70784647632394, 47.35735117835319, 318.70784647632394,\n                47.35735117835319, 338.707846476324, 47.3573511783532,\n                348.707846476324, 47.3573511783532,\n              ],\n            },\n            {\n              from: -2,\n              to: -4,\n              points: [\n                457.3590092670217, 47.3573511783532, 497.3590092670217,\n                47.3573511783532, 517.3590092670217, 47.35735117835319,\n                527.3590092670217, 47.35735117835319,\n              ],\n            },\n            {\n              from: -1,\n              to: -3,\n              points: [\n                84.4500136264535, 47.3573511783532, 94.4500136264535,\n                47.3573511783532, 104.45001362645351, 47.35735117835319,\n                154.4500136264535, 47.35735117835319,\n              ],\n            },\n          ],\n        },\n        code: `import torch import torch.nn as nn\nimport torch.nn.functional as F\nimport torch.optim as optim\nfrom torchvision import datasets, transforms\nimport argparse\nimport time\nimport os\n\n#setup training parameters\nparser = argparse.ArgumentParser(description='PyTorch MNIST Training')\nparser.add_argument('--batch-size', type=int, default=128, metavar='N',\n                    help='input batch size for training (default: 128)')\nparser.add_argument('--test-batch-size', type=int, default=128, metavar='N',\n                    help='input batch size for testing (default: 128)')\nparser.add_argument('--epochs', type=int, default=5, metavar='N',\n                    help='number of epochs to train')\nparser.add_argument('--lr', type=float, default=0.01, metavar='LR',\n                    help='learning rate')\nparser.add_argument('--no-cuda', action='store_true', default=False,\n                    help='disables CUDA training')\nparser.add_argument('--seed', type=int, default=1, metavar='S',\n                    help='random seed (default: 1)')\nparser.add_argument('--model-dir', default='./model-mnist-cnn',\n                    help='directory of model for saving checkpoint')\nparser.add_argument('--load-model', action='store_true', default=False,\n                    help='load model or not')\n    \nargs = parser.parse_args(args=[]) \n    \nif not os.path.exists(args.model_dir):\n    os.makedirs(args.model_dir)\n            \n# Judge cuda is available or not\nuse_cuda = not args.no_cuda and torch.cuda.is_available()\n#device = torch.device(\"cuda\" if use_cuda else \"cpu\")\ndevice = torch.device(\"cpu\")\n    \ntorch.manual_seed(args.seed)\nkwargs = {'num_workers': 1, 'pin_memory': True} if use_cuda else {}\n    \n# Setup data loader\ntransform=transforms.Compose([\n        transforms.ToTensor(),\n        transforms.Normalize((0.1307,), (0.3081,))\n        ])\ntrainset = datasets.MNIST('data', train=True, download=True,\n                    transform=transform)\ntestset = datasets.MNIST('data', train=False,\n                    transform=transform)\ntrain_loader = torch.utils.data.DataLoader(trainset,batch_size=args.batch_size, shuffle=True,**kwargs)\ntest_loader = torch.utils.data.DataLoader(testset,batch_size=args.test_batch_size, shuffle=False, **kwargs)\n    \n    \n# Define CNN\nclass Net(nn.Module):\n    def __init__(self):\n        super(Net, self).__init__()\n        # in_channels:1  out_channels:32  kernel_size:3  stride:1\n        self.conv1 = nn.Conv2d(1, 32, 3, 1)\n        # in_channels:32  out_channels:64  kernel_size:3  stride:1\n        self.conv2 = nn.Conv2d(32, 64, 3, 1)\n        self.fc1 = nn.Linear(9216, 128)\n        self.fc2 = nn.Linear(128, 10)\n    \n    def forward(self, x):\n        x = self.conv1(x)\n        x = F.relu(x)\n        x = self.conv2(x)\n        x = F.relu(x)\n        x = F.max_pool2d(x, 2)\n        x = torch.flatten(x, 1)\n        x = self.fc1(x)\n        x = F.relu(x)\n        x = self.fc2(x)\n        output = F.log_softmax(x, dim=1)\n        return output\n    \n    \n    \n# Train function\ndef train(args, model, device, train_loader, optimizer, epoch):\n    model.train()\n    for batch_idx, (data, target) in enumerate(train_loader):\n        data, target = data.to(device), target.to(device)\n            \n        #clear gradients\n        optimizer.zero_grad()\n            \n        #compute loss\n        loss = F.cross_entropy(model(data), target)\n            \n        #get gradients and update\n        loss.backward()\n        optimizer.step()\n    \n# Predict function\ndef eval_test(model, device, test_loader):\n    model.eval()\n    test_loss = 0\n    correct = 0\n    with torch.no_grad():\n        for data, target in test_loader:\n            data, target = data.to(device), target.to(device)\n            output = model(data)\n            test_loss += F.cross_entropy(output, target, size_average=False).item()\n            pred = output.max(1, keepdim=True)[1]\n            correct += pred.eq(target.view_as(pred)).sum().item()\n    test_loss /= len(test_loader.dataset)\n    test_accuracy = correct / len(test_loader.dataset)\n    return test_loss, test_accuracy\n    \n# Main function, train the initial model or load the model\ndef main():\n    model = Net().to(device)\n    optimizer = optim.SGD(model.parameters(), lr=args.lr)\n        \n    if args.load_model:\n        # Load model\n        model.load_state_dict(torch.load(os.path.join(args.model_dir, 'final_model.pt')))\n        trnloss, trnacc = eval_test(model, device, train_loader)\n        tstloss, tstacc = eval_test(model, device, test_loader)\n        print('trn_loss: {:.4f}, trn_acc: {:.2f}%'.format(trnloss, 100. * trnacc), end=', ')\n        print('test_loss: {:.4f}, test_acc: {:.2f}%'.format(tstloss, 100. * tstacc))\n            \n    else:\n        # Train initial model\n        for epoch in range(1, args.epochs + 1):\n            start_time = time.time()\n    \n            #training\n            train(args, model, device, train_loader, optimizer, epoch)\n    \n            #get trnloss and testloss\n            trnloss, trnacc = eval_test(model, device, train_loader)\n            tstloss, tstacc = eval_test(model, device, test_loader)\n    \n            #print trnloss and testloss\n            print('Epoch '+str(epoch)+': '+str(int(time.time()-start_time))+'s', end=', ')\n            print('trn_loss: {:.4f}, trn_acc: {:.2f}%'.format(trnloss, 100. * trnacc), end=', ')\n            print('test_loss: {:.4f}, test_acc: {:.2f}%'.format(tstloss, 100. * tstacc))\n            \n        #save model\n        torch.save(model.state_dict(), os.path.join(args.model_dir, 'final_model.pt'))\n    \nif __name__ == '__main__':\n    main()\n   \t\t `,\n      },\n    };\n  },\n\n  methods: {\n    highlighter(code) {\n      return highlight(code, languages.js); // languages.<insert language> to return html with markup\n    },\n\n    getJson() {\n      axios({\n        method: \"get\",\n        url:\n          \"/canvas/getJson/\" + localStorage.uid + \"/\" + localStorage.pid + \"/\",\n        responseType: \"stream\",\n      }).then((res) => {\n        console.log(res.data);\n        // not first time\n        if (res.data.status == 200) {\n          this.canvas_data.file = res.data;\n          this.renderJson();\n        }\n        // first time\n        else if (res.data.status == 204) {\n        } else {\n          alert(\"can not get user's json!\");\n        }\n      });\n    },\n\n    getPython() {\n      axios({\n        method: \"get\",\n        url:\n          \"/canvas/getPython/\" +\n          localStorage.uid +\n          \"/\" +\n          localStorage.pid +\n          \"/\",\n        responseType: \"stream\",\n      }).then((res) => {\n        console.log(res.data);\n        if (res.data.status == 200) {\n          this.canvas_data.code = res.code;\n        } else {\n          alert(\"can not get user's python!\");\n        }\n      });\n    },\n\n    download() {\n      axios({\n        method: \"get\",\n        url:\n          \"/canvas/download/\" + localStorage.uid + \"/\" + localStorage.pid + \"/\",\n        responseType: \"blob\",\n      }).then((res) => {\n        console.log(res.data);\n        if (res.data.status == 200) {\n          let blob = new Blob([res], {\n            type: \"application/zip;charset-UTF-8\",\n          });\n\n          const url = URL.createObjectURL(blob);\n          const a = document.createElement(\"a\");\n          a.style.display = \"none\";\n          a.href = url;\n          a.download = \"projectttt.zip\";\n          a.click();\n          URL.revokeObjectURL(url);\n        } else {\n          alert(\"can not get user's json!\");\n        }\n      });\n    },\n\n    // Update json first, then send to backend and get python code\n    compile() {\n      // Update json\n      this.getJson();\n      // console.log(this.canvasData.file);\n      // this.renderJson();\n      // console.log(this.canvasData.file);\n      // this.updateJson();\n      // console.log(this.canvasData.file);\n\n      // send json to backend\n      // this.canvasData.file = myDiagram.model.toJson();\n\n      let formData = new FormData();\n      formData.append(\"file\", this.canvasData.file);\n      axios({\n        method: \"post\",\n        url:\n          \"/canvas/compile/\" + localStorage.uid + \"/\" + localStorage.pid + \"/\",\n        data: formData,\n      }).then((res) => {\n        console.log(res.data);\n        // If compile successful 200, backend update database, frontend get data and reload\n        if (res.data.status == \"200\") {\n          this.getPython();\n          console.log(\"compile ok!\");\n        }\n        // If complie fails 500, frontend alert error\n        else if (res.data.status == \"500\") {\n          alert(\"The network model is not valid!\");\n        }\n        location.replace(\"/canvas/\");\n      });\n    },\n\n    // Update Json accroding to user's operation\n    updateJson() {\n      document.getElementById(\"mySavedModel\").value = myDiagram.model.toJson();\n      myDiagram.isModified = false;\n    },\n\n    // Render Json on the canvas area\n    renderJson() {\n      myDiagram.model = go.Model.fromJson(\n        document.getElementById(\"mySavedModel\").value\n      );\n    },\n\n    // Render .py on the code area\n    renderCode() {},\n\n    // To make canvas tidy 200\n    layout() {\n      this.updateJson();\n      myDiagram.layoutDiagram(true);\n    },\n\n    // Go to train page 200\n    enterTrain() {\n      location.replace(\"/train/\");\n    },\n  },\n\n  mounted() {\n    // this.getJson();\n    // // this.updateJson();\n    // this.canvasData.file = JSON.stringify(this.canvasData.file);\n    // this.renderJson();\n    this.canvasData.file = JSON.stringify(this.canvasData.file);\n    this.compile();\n    // this.canvasData.file = JSON.stringify(this.canvasData.file);\n\n    const $ = go.GraphObject.make; // for conciseness in defining templates\n    var yellowgrad = $(go.Brush, \"Linear\", {\n      0: \"#bde0fe\",\n      1: \"#bde0fe\",\n    });\n    var greengrad = $(go.Brush, \"Linear\", {\n      0: \"#fdffb6\",\n      1: \"#fdffb6\",\n    });\n    var bluegrad = $(go.Brush, \"Linear\", {\n      0: \"#caffbf\",\n      1: \"#caffbf\",\n    });\n    var redgrad = $(go.Brush, \"Linear\", {\n      0: \"#ffadad\",\n      1: \"#ffadad\",\n    });\n    var whitegrad = $(go.Brush, \"Linear\", {\n      0: \"#E7C5FC\",\n      1: \"#E7C5FC\",\n    });\n    var bigfont = \"bold 15pt Helvetica, Arial, sans-serif\";\n    var smallfont = \"bold 13pt Helvetica, Arial, sans-serif\";\n\n    // Common text styling\n    function textStyle() {\n      return {\n        margin: 6,\n        wrap: go.TextBlock.WrapFit,\n        textAlign: \"center\",\n        editable: true,\n        font: bigfont,\n      };\n    }\n\n    const myDiagram = $(go.Diagram, \"myDiagramDiv\", {\n      initialAutoScale: go.Diagram.Uniform,\n      \"linkingTool.direction\": go.LinkingTool.ForwardsOnly,\n      layout: $(go.LayeredDigraphLayout, {\n        isInitial: false,\n        isOngoing: false,\n        layerSpacing: 50,\n      }),\n      \"undoManager.isEnabled\": true,\n    });\n\n    var nodeSelectionAdornmentTemplate = $(\n      go.Adornment,\n      \"Auto\",\n      $(go.Shape, {\n        fill: null,\n        stroke: \"#979dac\",\n        strokeWidth: 2,\n        strokeDashArray: [4, 2],\n      }),\n      $(go.Placeholder)\n    );\n\n    // define the Node template\n    myDiagram.nodeTemplate = $(\n      go.Node,\n      \"Auto\",\n      {\n        locationSpot: go.Spot.Center,\n      },\n      new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n        go.Point.stringify\n      ),\n      {\n        selectable: true,\n        selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\n      },\n      // define the node's outer shape, which will surround the TextBlock\n      $(go.Shape, \"Rectangle\", {\n        fill: yellowgrad,\n        stroke: null,\n        portId: \"\",\n        fromLinkable: true,\n        toLinkable: true,\n        cursor: \"pointer\",\n        toEndSegmentLength: 50,\n        fromEndSegmentLength: 50,\n      }),\n      $(\n        go.TextBlock,\n        \"ReLU\",\n        {\n          margin: 6,\n          font: bigfont,\n          editable: true,\n          minSize: new go.Size(40, NaN),\n        },\n        new go.Binding(\"text\", \"text\").makeTwoWay()\n      )\n    );\n    // Data\n    myDiagram.nodeTemplateMap.add(\n      \"Data\",\n      $(\n        go.Node,\n        \"Auto\",\n        {\n          locationSpot: go.Spot.Center,\n          margin: new go.Margin(0, 0, 0, 0),\n        },\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n          go.Point.stringify\n        ),\n        {\n          selectable: true,\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\n        },\n        $(go.Shape, \"Circle\", {\n          fill: bluegrad,\n          portId: \"\",\n          fromLinkable: true,\n          cursor: \"pointer\",\n          //fromEndSegmentLength: 40,\n          stroke: \"#74c69d\",\n\n          strokeWidth: 4,\n        }),\n        $(\n          go.TextBlock,\n          \"Data\",\n          textStyle(),\n          {\n            stroke: \"#2d6a4f\",\n            minSize: new go.Size(40, NaN),\n          },\n          new go.Binding(\"text\", \"text\").makeTwoWay()\n        )\n      )\n    );\n\n    myDiagram.nodeTemplateMap.add(\n      \"End\",\n      $(\n        go.Node,\n        \"Auto\",\n        {\n          locationSpot: go.Spot.Center,\n        },\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n          go.Point.stringify\n        ),\n        {\n          selectable: true,\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\n        },\n        $(go.Shape, \"Circle\", {\n          fill: redgrad,\n          portId: \"\",\n          toLinkable: true,\n          cursor: \"pointer\",\n          fromEndSegmentLength: 40,\n          stroke: \"#df7373\",\n          strokeWidth: 4,\n        }),\n        $(\n          go.TextBlock,\n          \"End\",\n          textStyle(),\n          {\n            stroke: \"#ad2e24\",\n            minSize: new go.Size(40, NaN),\n          },\n          new go.Binding(\"text\", \"text\").makeTwoWay()\n        )\n      )\n    );\n\n    myDiagram.nodeTemplateMap.add(\n      \"ReLU\",\n      $(\n        go.Node,\n        \"Auto\",\n        {\n          locationSpot: go.Spot.Center,\n        },\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n          go.Point.stringify\n        ),\n        {\n          selectable: true,\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\n        },\n        $(go.Shape, \"Ellipse\", {\n          fill: greengrad,\n          portId: \"\",\n          fromLinkable: true,\n          toLinkable: true,\n          cursor: \"pointer\",\n          fromEndSegmentLength: 40,\n          stroke: \"#ffd100\",\n          strokeWidth: 4,\n        }),\n        $(\n          go.TextBlock,\n          \"ReLU\",\n          textStyle(),\n          {\n            stroke: \"#e2711d\",\n            // locationSpot: go.Spot.Center,\n            //margin: new go.Margin(10, 0, 0, 0),\n            minSize: new go.Size(60, NaN),\n          },\n          new go.Binding(\"text\", \"text\").makeTwoWay()\n        )\n      )\n    );\n\n    var reasonTemplate = $(\n      go.Panel,\n      $(\n        go.Panel,\n        \"Table\",\n        {\n          maxSize: new go.Size(200, 999),\n          margin: new go.Margin(0, 3, 10, 3),\n          defaultAlignment: go.Spot.Center,\n        },\n        $(go.RowColumnDefinition, {\n          column: 2,\n          width: 2,\n        }),\n        $(\n          go.TextBlock,\n          \"input = \",\n          {\n            margin: new go.Margin(4, 0, 0, 0),\n            maxSize: new go.Size(200, NaN),\n            wrap: go.TextBlock.WrapFit,\n            //stroke: \"whitesmoke\",\n            editable: true,\n            font: smallfont,\n            row: 2,\n            column: 0,\n            stroke: \"#3e5c76\",\n          },\n          new go.Binding(\"text\", \"text0\").makeTwoWay()\n        ),\n\n        $(\n          go.TextBlock,\n          \"value\",\n          {\n            margin: new go.Margin(4, 0, 0, 0),\n            maxSize: new go.Size(200, NaN),\n            wrap: go.TextBlock.WrapFit,\n            //stroke: \"whitesmoke\",\n            editable: true,\n            stroke: \"#3e5c76\",\n            font: smallfont,\n            row: 2,\n            column: 1,\n          },\n          new go.Binding(\"text\", \"text1\").makeTwoWay()\n        ),\n\n        $(\n          go.TextBlock,\n          \"output = \",\n          {\n            margin: new go.Margin(4, 0, 0, 0),\n            maxSize: new go.Size(200, NaN),\n            wrap: go.TextBlock.WrapFit,\n            //stroke: \"whitesmoke\",\n            editable: true,\n            font: smallfont,\n            stroke: \"#3e5c76\",\n            row: 3,\n            column: 0,\n          },\n          new go.Binding(\"text\", \"text2\").makeTwoWay()\n        ),\n\n        $(\n          go.TextBlock,\n          \"value\",\n          {\n            margin: new go.Margin(4, 0, 0, 9),\n            maxSize: new go.Size(200, NaN),\n            wrap: go.TextBlock.WrapFit,\n            //stroke: \"whitesmoke\",\n            editable: true,\n            font: smallfont,\n            stroke: \"#3e5c76\",\n            row: 3,\n            column: 1,\n          },\n          new go.Binding(\"text\", \"text3\").makeTwoWay()\n        )\n      ) // end Table Panel\n    );\n\n    myDiagram.nodeTemplateMap.add(\n      \"FC\",\n      $(\n        go.Node,\n        \"Auto\",\n        {\n          locationSpot: go.Spot.Center,\n        },\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n          go.Point.stringify\n        ),\n        {\n          selectable: true,\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\n        },\n        $(go.Shape, \"RoundedRectangle\", {\n          fill: yellowgrad,\n          stroke: \"#4ea8de\",\n          strokeWidth: 4,\n          portId: \"\",\n          fromLinkable: true,\n          toLinkable: true,\n          cursor: \"pointer\",\n          toEndSegmentLength: 50,\n          fromEndSegmentLength: 40,\n        }),\n        $(\n          go.Panel,\n          \"Vertical\",\n          {\n            defaultAlignment: go.Spot.Center,\n          },\n\n          $(\n            go.TextBlock,\n            \"FC\",\n            textStyle(),\n            {\n              stroke: \"#3e5c76\",\n              margin: new go.Margin(8, 0, 0, 0),\n              minSize: new go.Size(100, NaN),\n              //maxSize: new go.Size(200, NaN)\n            },\n            new go.Binding(\"text\", \"text\").makeTwoWay()\n          ),\n\n          $(\n            go.Panel,\n            \"Vertical\",\n            {\n              defaultAlignment: go.Spot.TopLeft,\n              itemTemplate: reasonTemplate,\n            },\n            new go.Binding(\"itemArray\", \"reasonsList\").makeTwoWay()\n          )\n        )\n      )\n    );\n\n    var linkSelectionAdornmentTemplate = $(\n      go.Adornment,\n      \"Link\",\n      $(\n        go.Shape,\n        // isPanelMain declares that this Shape shares the Link.geometry\n        {\n          isPanelMain: true,\n          fill: null,\n          stroke: \"deepskyblue\",\n          strokeWidth: 2.5,\n        }\n      ) // use selection object's strokeWidth\n    );\n    // replace the default Link template in the linkTemplateMap\n    myDiagram.linkTemplate = $(\n      go.Link, // the whole link panel\n      {\n        selectable: true,\n        selectionAdornmentTemplate: linkSelectionAdornmentTemplate,\n      },\n      new go.Binding(\"points\").makeTwoWay(),\n      {\n        //curve: go.Link.Bezier,\n        toShortLength: 15,\n      },\n      //new go.Binding(\"curviness\", \"curviness\"),\n      $(\n        go.Shape, // the link shape\n        {\n          stroke: \"#979dac\",\n          strokeWidth: 2.5,\n        }\n      ),\n      $(\n        go.Shape, // the arrowhead\n        {\n          toArrow: \"kite\",\n          fill: \"#979dac\",\n          stroke: null,\n          scale: 2,\n        }\n      )\n    );\n\n    myDiagram.nodeTemplateMap.add(\n      \"RNN\",\n      $(\n        go.Node,\n        \"Auto\",\n        {\n          locationSpot: go.Spot.Center,\n        },\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n          go.Point.stringify\n        ),\n        {\n          selectable: true,\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\n        },\n        $(go.Shape, \"RoundedRectangle\", {\n          fill: whitegrad,\n          stroke: \"#CF8BF9\",\n          strokeWidth: 4,\n        }),\n        $(\n          go.TextBlock,\n          \"RNN\\n(unavailable)\",\n          textStyle(),\n          {\n            margin: 9,\n            maxSize: new go.Size(200, NaN),\n            wrap: go.TextBlock.WrapFit,\n            editable: true,\n            stroke: \"#560788\",\n            font: smallfont,\n          },\n          new go.Binding(\"text\", \"text\").makeTwoWay()\n        )\n        // no ports, because no links are allowed to connect with a comment\n      )\n    );\n\n    myDiagram.nodeTemplateMap.add(\n      \"CNN\",\n      $(\n        go.Node,\n        \"Auto\",\n        {\n          locationSpot: go.Spot.Center,\n        },\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n          go.Point.stringify\n        ),\n        {\n          selectable: true,\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\n        },\n        $(go.Shape, \"RoundedRectangle\", {\n          fill: whitegrad,\n          stroke: \"#CF8BF9\",\n          strokeWidth: 4,\n        }),\n        $(\n          go.TextBlock,\n          \"CNN\\n(unavailable)\",\n          textStyle(),\n          {\n            margin: 9,\n            maxSize: new go.Size(200, NaN),\n            wrap: go.TextBlock.WrapFit,\n            editable: true,\n            stroke: \"#560788\",\n            font: smallfont,\n          },\n          new go.Binding(\"text\", \"text\").makeTwoWay()\n        )\n        // no ports, because no links are allowed to connect with a comment\n      )\n    );\n\n    myDiagram.nodeTemplateMap.add(\n      \"LSTM\",\n      $(\n        go.Node,\n        \"Auto\",\n        {\n          locationSpot: go.Spot.Center,\n        },\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n          go.Point.stringify\n        ),\n        {\n          selectable: true,\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\n        },\n        $(go.Shape, \"RoundedRectangle\", {\n          fill: whitegrad,\n          stroke: \"#CF8BF9\",\n          strokeWidth: 4,\n        }),\n        $(\n          go.TextBlock,\n          \"LSTM\\n(unavailable)\",\n          textStyle(),\n          {\n            margin: 9,\n            maxSize: new go.Size(200, NaN),\n            wrap: go.TextBlock.WrapFit,\n            editable: true,\n            stroke: \"#560788\",\n            font: smallfont,\n          },\n          new go.Binding(\"text\", \"text\").makeTwoWay()\n        )\n        // no ports, because no links are allowed to connect with a comment\n      )\n    );\n\n    myDiagram.nodeTemplateMap.add(\n      \"Softmax\",\n      $(\n        go.Node,\n        \"Auto\",\n        {\n          locationSpot: go.Spot.Center,\n        },\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n          go.Point.stringify\n        ),\n        {\n          selectable: true,\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\n        },\n        $(go.Shape, \"RoundedRectangle\", {\n          fill: whitegrad,\n          stroke: \"#CF8BF9\",\n          strokeWidth: 4,\n        }),\n        $(\n          go.TextBlock,\n          \"Softmax\\n(unavailable)\",\n          textStyle(),\n          {\n            margin: 9,\n            maxSize: new go.Size(200, NaN),\n            wrap: go.TextBlock.WrapFit,\n            editable: true,\n            stroke: \"#560788\",\n            font: smallfont,\n          },\n          new go.Binding(\"text\", \"text\").makeTwoWay()\n        )\n        // no ports, because no links are allowed to connect with a comment\n      )\n    );\n\n    myDiagram.nodeTemplateMap.add(\n      \"Maximum Polling\",\n      $(\n        go.Node,\n        \"Auto\",\n        {\n          locationSpot: go.Spot.Center,\n        },\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n          go.Point.stringify\n        ),\n        {\n          selectable: true,\n          selectionAdornmentTemplate: nodeSelectionAdornmentTemplate,\n        },\n        $(go.Shape, \"RoundedRectangle\", {\n          fill: whitegrad,\n          stroke: \"#CF8BF9\",\n          strokeWidth: 4,\n        }),\n        $(\n          go.TextBlock,\n          \"Maximum\\nPolling\\n(unavailable)\",\n          textStyle(),\n          {\n            margin: 9,\n            maxSize: new go.Size(200, NaN),\n            wrap: go.TextBlock.WrapFit,\n            editable: true,\n            stroke: \"#560788\",\n            font: smallfont,\n          },\n          new go.Binding(\"text\", \"text\").makeTwoWay()\n        )\n        // no ports, because no links are allowed to connect with a comment\n      )\n    );\n\n    var palette = $(\n      go.Palette,\n      \"myPaletteDiv\", // create a new Palette in the HTML DIV element\n      {\n        // share the template map with the Palette\n        nodeTemplateMap: myDiagram.nodeTemplateMap,\n        autoScale: go.Diagram.Uniform, // everything always fits in viewport\n      }\n    );\n\n    palette.model.nodeDataArray = [\n      {\n        category: \"Data\",\n      },\n      {\n        category: \"ReLU\",\n      },\n      {\n        category: \"FC\",\n        reasonsList: [{}],\n      },\n      {\n        category: \"End\",\n      },\n      {\n        category: \"CNN\",\n      },\n      {\n        category: \"RNN\",\n      },\n      {\n        category: \"LSTM\",\n      },\n      {\n        category: \"Softmax\",\n      },\n      {\n        category: \"Maximum Polling\",\n      },\n    ];\n\n    window.myDiagram = myDiagram;\n  },\n};\n</script>\n\n\n<style scoped>\n.body {\n  padding: 0;\n  margin: 0;\n  height: 100%;\n  width: 100%;\n  overflow: visible;\n}\n</style>\n<style scoped src=\"../../new_pages/vendor/fontawesome-free/css/all.min.css\"></style>\n<style scoped src=\"../../new_pages/css/sb-admin-2.min.css\"></style>\n\n<style>\n/* required class */\n.my-editor {\n  /* we dont use `language-` classes anymore so thats why we need to add background and text color manually */\n  background: #2d2d2d;\n  color: #ccc;\n\n  /* you must provide font-family font-size line-height. Example: */\n  font-family: Fira code, Fira Mono, Consolas, Menlo, Courier, monospace;\n  font-size: 14px;\n  line-height: 1.5;\n  padding: 5px;\n}\n\n/* optional class for removing the outline */\n.prism-editor__textarea:focus {\n  outline: none;\n}\n</style>\n\n    <style scpoed>\n        #myPaletteDiv {\n            border-radius: 7px;\n        }\n        \n        #myDiagramDiv_1 {\n            border-radius: 7px;\n        }\n        \n        #myDiagramDiv_2 {\n            border-radius: 7px;\n        }\n        \n        #myDiagramDiv_1 {\n            resize: horizontal;\n            overflow: auto;\n        }\n        \n         ::-webkit-resizer {\n            /* background: #82929B; */\n            /* background-color: #82929B; */\n            /* background: url(\"img/arrow.png\"); */\n            background: url(\"../../new_pages/img/1.jpg\");\n            border-radius: 0.1rem;\n            /* border: 8px solid black;\n            background: blue; */\n            /* outline: 2px dashed green; */\n        }\n    </style>"]},"metadata":{},"sourceType":"module"}